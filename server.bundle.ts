const matchCache = {
};
const FIELD_CONTENT_REGEXP = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
const KEY_REGEXP = /(?:^|;) *([^=]*)=[^;]*/g;
const SAME_SITE_REGEXP = /^(?:lax|none|strict)$/i;
function getPattern(name) {
    if (name in matchCache) {
        return matchCache[name];
    }
    return matchCache[name] = new RegExp(`(?:^|;) *${name.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")}=([^;]*)`);
}
function pushCookie(headers, cookie) {
    if (cookie.overwrite) {
        for(let i = headers.length - 1; i >= 0; i--){
            if (headers[i].indexOf(`${cookie.name}=`) === 0) {
                headers.splice(i, 1);
            }
        }
    }
    headers.push(cookie.toHeader());
}
function validateCookieProperty(key, value) {
    if (value && !FIELD_CONTENT_REGEXP.test(value)) {
        throw new TypeError(`The ${key} of the cookie (${value}) is invalid.`);
    }
}
class Cookie {
    domain;
    expires;
    httpOnly = true;
    maxAge;
    name;
    overwrite = false;
    path = "/";
    sameSite = false;
    secure = false;
    signed;
    value;
    constructor(name1, value2, attributes){
        validateCookieProperty("name", name1);
        validateCookieProperty("value", value2);
        this.name = name1;
        this.value = value2 ?? "";
        Object.assign(this, attributes);
        if (!this.value) {
            this.expires = new Date(0);
            this.maxAge = undefined;
        }
        validateCookieProperty("path", this.path);
        validateCookieProperty("domain", this.domain);
        if (this.sameSite && typeof this.sameSite === "string" && !SAME_SITE_REGEXP.test(this.sameSite)) {
            throw new TypeError(`The sameSite of the cookie ("${this.sameSite}") is invalid.`);
        }
    }
    toHeader() {
        let header = this.toString();
        if (this.maxAge) {
            this.expires = new Date(Date.now() + this.maxAge * 1000);
        }
        if (this.path) {
            header += `; path=${this.path}`;
        }
        if (this.expires) {
            header += `; expires=${this.expires.toUTCString()}`;
        }
        if (this.domain) {
            header += `; domain=${this.domain}`;
        }
        if (this.sameSite) {
            header += `; samesite=${this.sameSite === true ? "strict" : this.sameSite.toLowerCase()}`;
        }
        if (this.secure) {
            header += "; secure";
        }
        if (this.httpOnly) {
            header += "; httponly";
        }
        return header;
    }
    toString() {
        return `${this.name}=${this.value}`;
    }
}
class Cookies {
    #cookieKeys;
    #keys;
    #request;
    #response;
    #secure;
     #requestKeys() {
        if (this.#cookieKeys) {
            return this.#cookieKeys;
        }
        const result = this.#cookieKeys = [];
        const header = this.#request.headers.get("cookie");
        if (!header) {
            return result;
        }
        let matches;
        while(matches = KEY_REGEXP.exec(header)){
            const [, key] = matches;
            result.push(key);
        }
        return result;
    }
    constructor(request3, response1, options1 = {
    }){
        const { keys: keys2 , secure: secure3  } = options1;
        this.#keys = keys2;
        this.#request = request3;
        this.#response = response1;
        this.#secure = secure3;
    }
    delete(name, options = {
    }) {
        this.set(name, null, options);
        return true;
    }
    async *entries() {
        const keys1 = this.#requestKeys();
        for (const key of keys1){
            const value1 = await this.get(key);
            if (value1) {
                yield [
                    key,
                    value1
                ];
            }
        }
    }
    async forEach(callback, thisArg = null) {
        const keys1 = this.#requestKeys();
        for (const key of keys1){
            const value1 = await this.get(key);
            if (value1) {
                callback.call(thisArg, key, value1, this);
            }
        }
    }
    async get(name, options = {
    }) {
        const signed = options.signed ?? !!this.#keys;
        const nameSig = `${name}.sig`;
        const header = this.#request.headers.get("cookie");
        if (!header) {
            return;
        }
        const match = header.match(getPattern(name));
        if (!match) {
            return;
        }
        const [, value1] = match;
        if (!signed) {
            return value1;
        }
        const digest = await this.get(nameSig, {
            signed: false
        });
        if (!digest) {
            return;
        }
        const data = `${name}=${value1}`;
        if (!this.#keys) {
            throw new TypeError("keys required for signed cookies");
        }
        const index = await this.#keys.indexOf(data, digest);
        if (index < 0) {
            this.delete(nameSig, {
                path: "/",
                signed: false
            });
        } else {
            if (index) {
                this.set(nameSig, await this.#keys.sign(data), {
                    signed: false
                });
            }
            return value1;
        }
    }
    async *keys() {
        const keys1 = this.#requestKeys();
        for (const key of keys1){
            const value1 = await this.get(key);
            if (value1) {
                yield key;
            }
        }
    }
    async set(name, value, options = {
    }) {
        const request1 = this.#request;
        const response1 = this.#response;
        const headers = [];
        for (const [key, value1] of response1.headers.entries()){
            if (key === "set-cookie") {
                headers.push(value1);
            }
        }
        const secure1 = this.#secure !== undefined ? this.#secure : request1.secure;
        const signed = options.signed ?? !!this.#keys;
        if (!secure1 && options.secure) {
            throw new TypeError("Cannot send secure cookie over unencrypted connection.");
        }
        const cookie = new Cookie(name, value, options);
        cookie.secure = options.secure ?? secure1;
        pushCookie(headers, cookie);
        if (signed) {
            if (!this.#keys) {
                throw new TypeError(".keys required for signed cookies.");
            }
            cookie.value = await this.#keys.sign(cookie.toString());
            cookie.name += ".sig";
            pushCookie(headers, cookie);
        }
        response1.headers.delete("Set-Cookie");
        for (const header of headers){
            response1.headers.append("Set-Cookie", header);
        }
        return this;
    }
    async *values() {
        const keys1 = this.#requestKeys();
        for (const key of keys1){
            const value1 = await this.get(key);
            if (value1) {
                yield value1;
            }
        }
    }
    async *[Symbol.asyncIterator]() {
        const keys1 = this.#requestKeys();
        for (const key of keys1){
            const value1 = await this.get(key);
            if (value1) {
                yield [
                    key,
                    value1
                ];
            }
        }
    }
    [Symbol.for("Deno.customInspect")]() {
        return `${this.constructor.name} []`;
    }
}
function equals(a, b) {
    if (a.length !== b.length) return false;
    for(let i = 0; i < b.length; i++){
        if (a[i] !== b[i]) return false;
    }
    return true;
}
function concat(...buf) {
    let length = 0;
    for (const b of buf){
        length += b.length;
    }
    const output = new Uint8Array(length);
    let index = 0;
    for (const b1 of buf){
        output.set(b1, index);
        index += b1.length;
    }
    return output;
}
function copy(src, dst, off = 0) {
    off = Math.max(0, Math.min(off, dst.byteLength));
    const dstBytesAvailable = dst.byteLength - off;
    if (src.byteLength > dstBytesAvailable) {
        src = src.subarray(0, dstBytesAvailable);
    }
    dst.set(src, off);
    return src.byteLength;
}
const base64abc = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "+",
    "/"
];
function encode(data) {
    const uint8 = typeof data === "string" ? new TextEncoder().encode(data) : data instanceof Uint8Array ? data : new Uint8Array(data);
    let result = "", i;
    const l = uint8.length;
    for(i = 2; i < l; i += 3){
        result += base64abc[uint8[i - 2] >> 2];
        result += base64abc[(uint8[i - 2] & 3) << 4 | uint8[i - 1] >> 4];
        result += base64abc[(uint8[i - 1] & 15) << 2 | uint8[i] >> 6];
        result += base64abc[uint8[i] & 63];
    }
    if (i === l + 1) {
        result += base64abc[uint8[i - 2] >> 2];
        result += base64abc[(uint8[i - 2] & 3) << 4];
        result += "==";
    }
    if (i === l) {
        result += base64abc[uint8[i - 2] >> 2];
        result += base64abc[(uint8[i - 2] & 3) << 4 | uint8[i - 1] >> 4];
        result += base64abc[(uint8[i - 1] & 15) << 2];
        result += "=";
    }
    return result;
}
function decode(b64) {
    const binString = atob(b64);
    const size = binString.length;
    const bytes = new Uint8Array(size);
    for(let i = 0; i < size; i++){
        bytes[i] = binString.charCodeAt(i);
    }
    return bytes;
}
const mod = function() {
    return {
        encode: encode,
        decode: decode
    };
}();
class DenoStdInternalError extends Error {
    constructor(message2){
        super(message2);
        this.name = "DenoStdInternalError";
    }
}
function assert(expr, msg = "") {
    if (!expr) {
        throw new DenoStdInternalError(msg);
    }
}
const MIN_READ = 32 * 1024;
const MAX_SIZE = 2 ** 32 - 2;
class Buffer1 {
    #buf;
    #off = 0;
    constructor(ab){
        this.#buf = ab === undefined ? new Uint8Array(0) : new Uint8Array(ab);
    }
    bytes(options = {
        copy: true
    }) {
        if (options.copy === false) return this.#buf.subarray(this.#off);
        return this.#buf.slice(this.#off);
    }
    empty() {
        return this.#buf.byteLength <= this.#off;
    }
    get length() {
        return this.#buf.byteLength - this.#off;
    }
    get capacity() {
        return this.#buf.buffer.byteLength;
    }
    truncate(n) {
        if (n === 0) {
            this.reset();
            return;
        }
        if (n < 0 || n > this.length) {
            throw Error("bytes.Buffer: truncation out of range");
        }
        this.#reslice(this.#off + n);
    }
    reset() {
        this.#reslice(0);
        this.#off = 0;
    }
     #tryGrowByReslice(n) {
        const l = this.#buf.byteLength;
        if (n <= this.capacity - l) {
            this.#reslice(l + n);
            return l;
        }
        return -1;
    }
     #reslice(len) {
        assert(len <= this.#buf.buffer.byteLength);
        this.#buf = new Uint8Array(this.#buf.buffer, 0, len);
    }
    readSync(p) {
        if (this.empty()) {
            this.reset();
            if (p.byteLength === 0) {
                return 0;
            }
            return null;
        }
        const nread = copy(this.#buf.subarray(this.#off), p);
        this.#off += nread;
        return nread;
    }
    read(p) {
        const rr = this.readSync(p);
        return Promise.resolve(rr);
    }
    writeSync(p) {
        const m = this.#grow(p.byteLength);
        return copy(p, this.#buf, m);
    }
    write(p) {
        const n = this.writeSync(p);
        return Promise.resolve(n);
    }
     #grow(n) {
        const m = this.length;
        if (m === 0 && this.#off !== 0) {
            this.reset();
        }
        const i = this.#tryGrowByReslice(n);
        if (i >= 0) {
            return i;
        }
        const c = this.capacity;
        if (n <= Math.floor(c / 2) - m) {
            copy(this.#buf.subarray(this.#off), this.#buf);
        } else if (c + n > MAX_SIZE) {
            throw new Error("The buffer cannot be grown beyond the maximum size.");
        } else {
            const buf = new Uint8Array(Math.min(2 * c + n, MAX_SIZE));
            copy(this.#buf.subarray(this.#off), buf);
            this.#buf = buf;
        }
        this.#off = 0;
        this.#reslice(Math.min(m + n, MAX_SIZE));
        return m;
    }
    grow(n) {
        if (n < 0) {
            throw Error("Buffer.grow: negative count");
        }
        const m = this.#grow(n);
        this.#reslice(m);
    }
    async readFrom(r) {
        let n = 0;
        const tmp = new Uint8Array(MIN_READ);
        while(true){
            const shouldGrow = this.capacity - this.length < MIN_READ;
            const buf = shouldGrow ? tmp : new Uint8Array(this.#buf.buffer, this.length);
            const nread = await r.read(buf);
            if (nread === null) {
                return n;
            }
            if (shouldGrow) this.writeSync(buf.subarray(0, nread));
            else this.#reslice(this.length + nread);
            n += nread;
        }
    }
    readFromSync(r) {
        let n = 0;
        const tmp = new Uint8Array(MIN_READ);
        while(true){
            const shouldGrow = this.capacity - this.length < MIN_READ;
            const buf = shouldGrow ? tmp : new Uint8Array(this.#buf.buffer, this.length);
            const nread = r.readSync(buf);
            if (nread === null) {
                return n;
            }
            if (shouldGrow) this.writeSync(buf.subarray(0, nread));
            else this.#reslice(this.length + nread);
            n += nread;
        }
    }
}
const ANSI_PATTERN = new RegExp([
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))", 
].join("|"), "g");
var DiffType;
(function(DiffType1) {
    DiffType1["removed"] = "removed";
    DiffType1["common"] = "common";
    DiffType1["added"] = "added";
})(DiffType || (DiffType = {
}));
class AssertionError extends Error {
    constructor(message1){
        super(message1);
        this.name = "AssertionError";
    }
}
function assert1(expr, msg = "") {
    if (!expr) {
        throw new AssertionError(msg);
    }
}
const DEFAULT_BUFFER_SIZE = 32 * 1024;
async function readAll(r) {
    const buf = new Buffer1();
    await buf.readFrom(r);
    return buf.bytes();
}
async function writeAll(w, arr) {
    let nwritten = 0;
    while(nwritten < arr.length){
        nwritten += await w.write(arr.subarray(nwritten));
    }
}
function writeAllSync(w, arr) {
    let nwritten = 0;
    while(nwritten < arr.length){
        nwritten += w.writeSync(arr.subarray(nwritten));
    }
}
async function* iter(r, options2) {
    const bufSize = options2?.bufSize ?? DEFAULT_BUFFER_SIZE;
    const b = new Uint8Array(bufSize);
    while(true){
        const result = await r.read(b);
        if (result === null) {
            break;
        }
        yield b.subarray(0, result);
    }
}
async function copy1(src, dst, options2) {
    let n = 0;
    const bufSize = options2?.bufSize ?? DEFAULT_BUFFER_SIZE;
    const b = new Uint8Array(bufSize);
    let gotEOF = false;
    while(gotEOF === false){
        const result = await src.read(b);
        if (result === null) {
            gotEOF = true;
        } else {
            let nwritten = 0;
            while(nwritten < result){
                nwritten += await dst.write(b.subarray(nwritten, result));
            }
            n += nwritten;
        }
    }
    return n;
}
const DEFAULT_BUF_SIZE = 4096;
const MIN_BUF_SIZE = 16;
const CR = "\r".charCodeAt(0);
const LF = "\n".charCodeAt(0);
class BufferFullError extends Error {
    partial;
    name = "BufferFullError";
    constructor(partial1){
        super("Buffer full");
        this.partial = partial1;
    }
}
class PartialReadError extends Error {
    name = "PartialReadError";
    partial;
    constructor(){
        super("Encountered UnexpectedEof, data only partially read");
    }
}
class BufReader {
    buf;
    rd;
    r = 0;
    w = 0;
    eof = false;
    static create(r, size = 4096) {
        return r instanceof BufReader ? r : new BufReader(r, size);
    }
    constructor(rd1, size1 = 4096){
        if (size1 < 16) {
            size1 = MIN_BUF_SIZE;
        }
        this._reset(new Uint8Array(size1), rd1);
    }
    size() {
        return this.buf.byteLength;
    }
    buffered() {
        return this.w - this.r;
    }
    async _fill() {
        if (this.r > 0) {
            this.buf.copyWithin(0, this.r, this.w);
            this.w -= this.r;
            this.r = 0;
        }
        if (this.w >= this.buf.byteLength) {
            throw Error("bufio: tried to fill full buffer");
        }
        for(let i = 100; i > 0; i--){
            const rr = await this.rd.read(this.buf.subarray(this.w));
            if (rr === null) {
                this.eof = true;
                return;
            }
            assert(rr >= 0, "negative read");
            this.w += rr;
            if (rr > 0) {
                return;
            }
        }
        throw new Error(`No progress after ${100} read() calls`);
    }
    reset(r) {
        this._reset(this.buf, r);
    }
    _reset(buf, rd) {
        this.buf = buf;
        this.rd = rd;
        this.eof = false;
    }
    async read(p) {
        let rr = p.byteLength;
        if (p.byteLength === 0) return rr;
        if (this.r === this.w) {
            if (p.byteLength >= this.buf.byteLength) {
                const rr1 = await this.rd.read(p);
                const nread = rr1 ?? 0;
                assert(nread >= 0, "negative read");
                return rr1;
            }
            this.r = 0;
            this.w = 0;
            rr = await this.rd.read(this.buf);
            if (rr === 0 || rr === null) return rr;
            assert(rr >= 0, "negative read");
            this.w += rr;
        }
        const copied = copy(this.buf.subarray(this.r, this.w), p, 0);
        this.r += copied;
        return copied;
    }
    async readFull(p) {
        let bytesRead = 0;
        while(bytesRead < p.length){
            try {
                const rr = await this.read(p.subarray(bytesRead));
                if (rr === null) {
                    if (bytesRead === 0) {
                        return null;
                    } else {
                        throw new PartialReadError();
                    }
                }
                bytesRead += rr;
            } catch (err) {
                err.partial = p.subarray(0, bytesRead);
                throw err;
            }
        }
        return p;
    }
    async readByte() {
        while(this.r === this.w){
            if (this.eof) return null;
            await this._fill();
        }
        const c = this.buf[this.r];
        this.r++;
        return c;
    }
    async readString(delim) {
        if (delim.length !== 1) {
            throw new Error("Delimiter should be a single character");
        }
        const buffer = await this.readSlice(delim.charCodeAt(0));
        if (buffer === null) return null;
        return new TextDecoder().decode(buffer);
    }
    async readLine() {
        let line;
        try {
            line = await this.readSlice(LF);
        } catch (err) {
            if (err instanceof Deno.errors.BadResource) {
                throw err;
            }
            let { partial: partial2  } = err;
            assert(partial2 instanceof Uint8Array, "bufio: caught error from `readSlice()` without `partial` property");
            if (!(err instanceof BufferFullError)) {
                throw err;
            }
            if (!this.eof && partial2.byteLength > 0 && partial2[partial2.byteLength - 1] === CR) {
                assert(this.r > 0, "bufio: tried to rewind past start of buffer");
                this.r--;
                partial2 = partial2.subarray(0, partial2.byteLength - 1);
            }
            return {
                line: partial2,
                more: !this.eof
            };
        }
        if (line === null) {
            return null;
        }
        if (line.byteLength === 0) {
            return {
                line,
                more: false
            };
        }
        if (line[line.byteLength - 1] == LF) {
            let drop = 1;
            if (line.byteLength > 1 && line[line.byteLength - 2] === CR) {
                drop = 2;
            }
            line = line.subarray(0, line.byteLength - drop);
        }
        return {
            line,
            more: false
        };
    }
    async readSlice(delim) {
        let s = 0;
        let slice;
        while(true){
            let i = this.buf.subarray(this.r + s, this.w).indexOf(delim);
            if (i >= 0) {
                i += s;
                slice = this.buf.subarray(this.r, this.r + i + 1);
                this.r += i + 1;
                break;
            }
            if (this.eof) {
                if (this.r === this.w) {
                    return null;
                }
                slice = this.buf.subarray(this.r, this.w);
                this.r = this.w;
                break;
            }
            if (this.buffered() >= this.buf.byteLength) {
                this.r = this.w;
                const oldbuf = this.buf;
                const newbuf = this.buf.slice(0);
                this.buf = newbuf;
                throw new BufferFullError(oldbuf);
            }
            s = this.w - this.r;
            try {
                await this._fill();
            } catch (err) {
                err.partial = slice;
                throw err;
            }
        }
        return slice;
    }
    async peek(n) {
        if (n < 0) {
            throw Error("negative count");
        }
        let avail = this.w - this.r;
        while(avail < n && avail < this.buf.byteLength && !this.eof){
            try {
                await this._fill();
            } catch (err) {
                err.partial = this.buf.subarray(this.r, this.w);
                throw err;
            }
            avail = this.w - this.r;
        }
        if (avail === 0 && this.eof) {
            return null;
        } else if (avail < n && this.eof) {
            return this.buf.subarray(this.r, this.r + avail);
        } else if (avail < n) {
            throw new BufferFullError(this.buf.subarray(this.r, this.w));
        }
        return this.buf.subarray(this.r, this.r + n);
    }
}
class AbstractBufBase {
    buf;
    usedBufferBytes = 0;
    err = null;
    size() {
        return this.buf.byteLength;
    }
    available() {
        return this.buf.byteLength - this.usedBufferBytes;
    }
    buffered() {
        return this.usedBufferBytes;
    }
}
class BufWriter extends AbstractBufBase {
    writer;
    static create(writer, size = 4096) {
        return writer instanceof BufWriter ? writer : new BufWriter(writer, size);
    }
    constructor(writer1, size2 = 4096){
        super();
        this.writer = writer1;
        if (size2 <= 0) {
            size2 = DEFAULT_BUF_SIZE;
        }
        this.buf = new Uint8Array(size2);
    }
    reset(w) {
        this.err = null;
        this.usedBufferBytes = 0;
        this.writer = w;
    }
    async flush() {
        if (this.err !== null) throw this.err;
        if (this.usedBufferBytes === 0) return;
        try {
            await writeAll(this.writer, this.buf.subarray(0, this.usedBufferBytes));
        } catch (e) {
            this.err = e;
            throw e;
        }
        this.buf = new Uint8Array(this.buf.length);
        this.usedBufferBytes = 0;
    }
    async write(data) {
        if (this.err !== null) throw this.err;
        if (data.length === 0) return 0;
        let totalBytesWritten = 0;
        let numBytesWritten = 0;
        while(data.byteLength > this.available()){
            if (this.buffered() === 0) {
                try {
                    numBytesWritten = await this.writer.write(data);
                } catch (e) {
                    this.err = e;
                    throw e;
                }
            } else {
                numBytesWritten = copy(data, this.buf, this.usedBufferBytes);
                this.usedBufferBytes += numBytesWritten;
                await this.flush();
            }
            totalBytesWritten += numBytesWritten;
            data = data.subarray(numBytesWritten);
        }
        numBytesWritten = copy(data, this.buf, this.usedBufferBytes);
        this.usedBufferBytes += numBytesWritten;
        totalBytesWritten += numBytesWritten;
        return totalBytesWritten;
    }
}
class BufWriterSync extends AbstractBufBase {
    writer;
    static create(writer, size = 4096) {
        return writer instanceof BufWriterSync ? writer : new BufWriterSync(writer, size);
    }
    constructor(writer2, size3 = 4096){
        super();
        this.writer = writer2;
        if (size3 <= 0) {
            size3 = DEFAULT_BUF_SIZE;
        }
        this.buf = new Uint8Array(size3);
    }
    reset(w) {
        this.err = null;
        this.usedBufferBytes = 0;
        this.writer = w;
    }
    flush() {
        if (this.err !== null) throw this.err;
        if (this.usedBufferBytes === 0) return;
        try {
            writeAllSync(this.writer, this.buf.subarray(0, this.usedBufferBytes));
        } catch (e) {
            this.err = e;
            throw e;
        }
        this.buf = new Uint8Array(this.buf.length);
        this.usedBufferBytes = 0;
    }
    writeSync(data) {
        if (this.err !== null) throw this.err;
        if (data.length === 0) return 0;
        let totalBytesWritten = 0;
        let numBytesWritten = 0;
        while(data.byteLength > this.available()){
            if (this.buffered() === 0) {
                try {
                    numBytesWritten = this.writer.writeSync(data);
                } catch (e) {
                    this.err = e;
                    throw e;
                }
            } else {
                numBytesWritten = copy(data, this.buf, this.usedBufferBytes);
                this.usedBufferBytes += numBytesWritten;
                this.flush();
            }
            totalBytesWritten += numBytesWritten;
            data = data.subarray(numBytesWritten);
        }
        numBytesWritten = copy(data, this.buf, this.usedBufferBytes);
        this.usedBufferBytes += numBytesWritten;
        totalBytesWritten += numBytesWritten;
        return totalBytesWritten;
    }
}
const CHAR_SPACE = " ".charCodeAt(0);
const CHAR_TAB = "\t".charCodeAt(0);
const CHAR_COLON = ":".charCodeAt(0);
const WHITESPACES = [
    CHAR_SPACE,
    CHAR_TAB
];
const decoder = new TextDecoder();
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/g;
function str(buf) {
    return !buf ? "" : decoder.decode(buf);
}
class TextProtoReader {
    r;
    constructor(r1){
        this.r = r1;
    }
    async readLine() {
        const s = await this.readLineSlice();
        return s === null ? null : str(s);
    }
    async readMIMEHeader() {
        const m = new Headers();
        let line;
        let buf = await this.r.peek(1);
        if (buf === null) {
            return null;
        } else if (WHITESPACES.includes(buf[0])) {
            line = await this.readLineSlice();
        }
        buf = await this.r.peek(1);
        if (buf === null) {
            throw new Deno.errors.UnexpectedEof();
        } else if (WHITESPACES.includes(buf[0])) {
            throw new Deno.errors.InvalidData(`malformed MIME header initial line: ${str(line)}`);
        }
        while(true){
            const kv = await this.readLineSlice();
            if (kv === null) throw new Deno.errors.UnexpectedEof();
            if (kv.byteLength === 0) return m;
            let i = kv.indexOf(CHAR_COLON);
            if (i < 0) {
                throw new Deno.errors.InvalidData(`malformed MIME header line: ${str(kv)}`);
            }
            const key = str(kv.subarray(0, i));
            if (key == "") {
                continue;
            }
            i++;
            while(i < kv.byteLength && WHITESPACES.includes(kv[i])){
                i++;
            }
            const value1 = str(kv.subarray(i)).replace(invalidHeaderCharRegex, encodeURI);
            try {
                m.append(key, value1);
            } catch  {
            }
        }
    }
    async readLineSlice() {
        let line = new Uint8Array(0);
        let r1 = null;
        do {
            r1 = await this.r.readLine();
            if (r1 !== null && this.skipSpace(r1.line) !== 0) {
                line = concat(line, r1.line);
            }
        }while (r1 !== null && r1.more)
        return r1 === null ? null : line;
    }
    skipSpace(l) {
        let n = 0;
        for (const val of l){
            if (!WHITESPACES.includes(val)) {
                n++;
            }
        }
        return n;
    }
}
var Status;
(function(Status1) {
    Status1[Status1["Continue"] = 100] = "Continue";
    Status1[Status1["SwitchingProtocols"] = 101] = "SwitchingProtocols";
    Status1[Status1["Processing"] = 102] = "Processing";
    Status1[Status1["EarlyHints"] = 103] = "EarlyHints";
    Status1[Status1["OK"] = 200] = "OK";
    Status1[Status1["Created"] = 201] = "Created";
    Status1[Status1["Accepted"] = 202] = "Accepted";
    Status1[Status1["NonAuthoritativeInfo"] = 203] = "NonAuthoritativeInfo";
    Status1[Status1["NoContent"] = 204] = "NoContent";
    Status1[Status1["ResetContent"] = 205] = "ResetContent";
    Status1[Status1["PartialContent"] = 206] = "PartialContent";
    Status1[Status1["MultiStatus"] = 207] = "MultiStatus";
    Status1[Status1["AlreadyReported"] = 208] = "AlreadyReported";
    Status1[Status1["IMUsed"] = 226] = "IMUsed";
    Status1[Status1["MultipleChoices"] = 300] = "MultipleChoices";
    Status1[Status1["MovedPermanently"] = 301] = "MovedPermanently";
    Status1[Status1["Found"] = 302] = "Found";
    Status1[Status1["SeeOther"] = 303] = "SeeOther";
    Status1[Status1["NotModified"] = 304] = "NotModified";
    Status1[Status1["UseProxy"] = 305] = "UseProxy";
    Status1[Status1["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    Status1[Status1["PermanentRedirect"] = 308] = "PermanentRedirect";
    Status1[Status1["BadRequest"] = 400] = "BadRequest";
    Status1[Status1["Unauthorized"] = 401] = "Unauthorized";
    Status1[Status1["PaymentRequired"] = 402] = "PaymentRequired";
    Status1[Status1["Forbidden"] = 403] = "Forbidden";
    Status1[Status1["NotFound"] = 404] = "NotFound";
    Status1[Status1["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    Status1[Status1["NotAcceptable"] = 406] = "NotAcceptable";
    Status1[Status1["ProxyAuthRequired"] = 407] = "ProxyAuthRequired";
    Status1[Status1["RequestTimeout"] = 408] = "RequestTimeout";
    Status1[Status1["Conflict"] = 409] = "Conflict";
    Status1[Status1["Gone"] = 410] = "Gone";
    Status1[Status1["LengthRequired"] = 411] = "LengthRequired";
    Status1[Status1["PreconditionFailed"] = 412] = "PreconditionFailed";
    Status1[Status1["RequestEntityTooLarge"] = 413] = "RequestEntityTooLarge";
    Status1[Status1["RequestURITooLong"] = 414] = "RequestURITooLong";
    Status1[Status1["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
    Status1[Status1["RequestedRangeNotSatisfiable"] = 416] = "RequestedRangeNotSatisfiable";
    Status1[Status1["ExpectationFailed"] = 417] = "ExpectationFailed";
    Status1[Status1["Teapot"] = 418] = "Teapot";
    Status1[Status1["MisdirectedRequest"] = 421] = "MisdirectedRequest";
    Status1[Status1["UnprocessableEntity"] = 422] = "UnprocessableEntity";
    Status1[Status1["Locked"] = 423] = "Locked";
    Status1[Status1["FailedDependency"] = 424] = "FailedDependency";
    Status1[Status1["TooEarly"] = 425] = "TooEarly";
    Status1[Status1["UpgradeRequired"] = 426] = "UpgradeRequired";
    Status1[Status1["PreconditionRequired"] = 428] = "PreconditionRequired";
    Status1[Status1["TooManyRequests"] = 429] = "TooManyRequests";
    Status1[Status1["RequestHeaderFieldsTooLarge"] = 431] = "RequestHeaderFieldsTooLarge";
    Status1[Status1["UnavailableForLegalReasons"] = 451] = "UnavailableForLegalReasons";
    Status1[Status1["InternalServerError"] = 500] = "InternalServerError";
    Status1[Status1["NotImplemented"] = 501] = "NotImplemented";
    Status1[Status1["BadGateway"] = 502] = "BadGateway";
    Status1[Status1["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    Status1[Status1["GatewayTimeout"] = 504] = "GatewayTimeout";
    Status1[Status1["HTTPVersionNotSupported"] = 505] = "HTTPVersionNotSupported";
    Status1[Status1["VariantAlsoNegotiates"] = 506] = "VariantAlsoNegotiates";
    Status1[Status1["InsufficientStorage"] = 507] = "InsufficientStorage";
    Status1[Status1["LoopDetected"] = 508] = "LoopDetected";
    Status1[Status1["NotExtended"] = 510] = "NotExtended";
    Status1[Status1["NetworkAuthenticationRequired"] = 511] = "NetworkAuthenticationRequired";
})(Status || (Status = {
}));
const STATUS_TEXT = new Map([
    [
        Status.Continue,
        "Continue"
    ],
    [
        Status.SwitchingProtocols,
        "Switching Protocols"
    ],
    [
        Status.Processing,
        "Processing"
    ],
    [
        Status.EarlyHints,
        "Early Hints"
    ],
    [
        Status.OK,
        "OK"
    ],
    [
        Status.Created,
        "Created"
    ],
    [
        Status.Accepted,
        "Accepted"
    ],
    [
        Status.NonAuthoritativeInfo,
        "Non-Authoritative Information"
    ],
    [
        Status.NoContent,
        "No Content"
    ],
    [
        Status.ResetContent,
        "Reset Content"
    ],
    [
        Status.PartialContent,
        "Partial Content"
    ],
    [
        Status.MultiStatus,
        "Multi-Status"
    ],
    [
        Status.AlreadyReported,
        "Already Reported"
    ],
    [
        Status.IMUsed,
        "IM Used"
    ],
    [
        Status.MultipleChoices,
        "Multiple Choices"
    ],
    [
        Status.MovedPermanently,
        "Moved Permanently"
    ],
    [
        Status.Found,
        "Found"
    ],
    [
        Status.SeeOther,
        "See Other"
    ],
    [
        Status.NotModified,
        "Not Modified"
    ],
    [
        Status.UseProxy,
        "Use Proxy"
    ],
    [
        Status.TemporaryRedirect,
        "Temporary Redirect"
    ],
    [
        Status.PermanentRedirect,
        "Permanent Redirect"
    ],
    [
        Status.BadRequest,
        "Bad Request"
    ],
    [
        Status.Unauthorized,
        "Unauthorized"
    ],
    [
        Status.PaymentRequired,
        "Payment Required"
    ],
    [
        Status.Forbidden,
        "Forbidden"
    ],
    [
        Status.NotFound,
        "Not Found"
    ],
    [
        Status.MethodNotAllowed,
        "Method Not Allowed"
    ],
    [
        Status.NotAcceptable,
        "Not Acceptable"
    ],
    [
        Status.ProxyAuthRequired,
        "Proxy Authentication Required"
    ],
    [
        Status.RequestTimeout,
        "Request Timeout"
    ],
    [
        Status.Conflict,
        "Conflict"
    ],
    [
        Status.Gone,
        "Gone"
    ],
    [
        Status.LengthRequired,
        "Length Required"
    ],
    [
        Status.PreconditionFailed,
        "Precondition Failed"
    ],
    [
        Status.RequestEntityTooLarge,
        "Request Entity Too Large"
    ],
    [
        Status.RequestURITooLong,
        "Request URI Too Long"
    ],
    [
        Status.UnsupportedMediaType,
        "Unsupported Media Type"
    ],
    [
        Status.RequestedRangeNotSatisfiable,
        "Requested Range Not Satisfiable"
    ],
    [
        Status.ExpectationFailed,
        "Expectation Failed"
    ],
    [
        Status.Teapot,
        "I'm a teapot"
    ],
    [
        Status.MisdirectedRequest,
        "Misdirected Request"
    ],
    [
        Status.UnprocessableEntity,
        "Unprocessable Entity"
    ],
    [
        Status.Locked,
        "Locked"
    ],
    [
        Status.FailedDependency,
        "Failed Dependency"
    ],
    [
        Status.TooEarly,
        "Too Early"
    ],
    [
        Status.UpgradeRequired,
        "Upgrade Required"
    ],
    [
        Status.PreconditionRequired,
        "Precondition Required"
    ],
    [
        Status.TooManyRequests,
        "Too Many Requests"
    ],
    [
        Status.RequestHeaderFieldsTooLarge,
        "Request Header Fields Too Large"
    ],
    [
        Status.UnavailableForLegalReasons,
        "Unavailable For Legal Reasons"
    ],
    [
        Status.InternalServerError,
        "Internal Server Error"
    ],
    [
        Status.NotImplemented,
        "Not Implemented"
    ],
    [
        Status.BadGateway,
        "Bad Gateway"
    ],
    [
        Status.ServiceUnavailable,
        "Service Unavailable"
    ],
    [
        Status.GatewayTimeout,
        "Gateway Timeout"
    ],
    [
        Status.HTTPVersionNotSupported,
        "HTTP Version Not Supported"
    ],
    [
        Status.VariantAlsoNegotiates,
        "Variant Also Negotiates"
    ],
    [
        Status.InsufficientStorage,
        "Insufficient Storage"
    ],
    [
        Status.LoopDetected,
        "Loop Detected"
    ],
    [
        Status.NotExtended,
        "Not Extended"
    ],
    [
        Status.NetworkAuthenticationRequired,
        "Network Authentication Required"
    ], 
]);
function deferred() {
    let methods;
    let state = "pending";
    const promise = new Promise((resolve, reject)=>{
        methods = {
            async resolve (value) {
                await value;
                state = "fulfilled";
                resolve(value);
            },
            reject (reason) {
                state = "rejected";
                reject(reason);
            }
        };
    });
    Object.defineProperty(promise, "state", {
        get: ()=>state
    });
    return Object.assign(promise, methods);
}
class MuxAsyncIterator {
    iteratorCount = 0;
    yields = [];
    throws = [];
    signal = deferred();
    add(iterable) {
        ++this.iteratorCount;
        this.callIteratorNext(iterable[Symbol.asyncIterator]());
    }
    async callIteratorNext(iterator) {
        try {
            const { value: value1 , done  } = await iterator.next();
            if (done) {
                --this.iteratorCount;
            } else {
                this.yields.push({
                    iterator,
                    value: value1
                });
            }
        } catch (e) {
            this.throws.push(e);
        }
        this.signal.resolve();
    }
    async *iterate() {
        while(this.iteratorCount > 0){
            await this.signal;
            for(let i = 0; i < this.yields.length; i++){
                const { iterator , value: value1  } = this.yields[i];
                yield value1;
                this.callIteratorNext(iterator);
            }
            if (this.throws.length) {
                for (const e of this.throws){
                    throw e;
                }
                this.throws.length = 0;
            }
            this.yields.length = 0;
            this.signal = deferred();
        }
    }
    [Symbol.asyncIterator]() {
        return this.iterate();
    }
}
const noop = ()=>{
};
class AsyncIterableClone {
    currentPromise;
    resolveCurrent = noop;
    consumed;
    consume = noop;
    constructor(){
        this.currentPromise = new Promise((resolve)=>{
            this.resolveCurrent = resolve;
        });
        this.consumed = new Promise((resolve)=>{
            this.consume = resolve;
        });
    }
    reset() {
        this.currentPromise = new Promise((resolve)=>{
            this.resolveCurrent = resolve;
        });
        this.consumed = new Promise((resolve)=>{
            this.consume = resolve;
        });
    }
    async next() {
        const res = await this.currentPromise;
        this.consume();
        this.reset();
        return res;
    }
    async push(res) {
        this.resolveCurrent(res);
        await this.consumed;
    }
    [Symbol.asyncIterator]() {
        return this;
    }
}
class DeadlineError extends Error {
    constructor(){
        super("Deadline");
        this.name = "DeadlineError";
    }
}
const encoder = new TextEncoder();
function emptyReader() {
    return {
        read (_) {
            return Promise.resolve(null);
        }
    };
}
function bodyReader(contentLength, r1) {
    let totalRead = 0;
    let finished = false;
    async function read(buf) {
        if (finished) return null;
        let result;
        const remaining = contentLength - totalRead;
        if (remaining >= buf.byteLength) {
            result = await r1.read(buf);
        } else {
            const readBuf = buf.subarray(0, remaining);
            result = await r1.read(readBuf);
        }
        if (result !== null) {
            totalRead += result;
        }
        finished = totalRead === contentLength;
        return result;
    }
    return {
        read
    };
}
function chunkedBodyReader(h, r1) {
    const tp = new TextProtoReader(r1);
    let finished = false;
    const chunks = [];
    async function read(buf) {
        if (finished) return null;
        const [chunk] = chunks;
        if (chunk) {
            const chunkRemaining = chunk.data.byteLength - chunk.offset;
            const readLength = Math.min(chunkRemaining, buf.byteLength);
            for(let i = 0; i < readLength; i++){
                buf[i] = chunk.data[chunk.offset + i];
            }
            chunk.offset += readLength;
            if (chunk.offset === chunk.data.byteLength) {
                chunks.shift();
                if (await tp.readLine() === null) {
                    throw new Deno.errors.UnexpectedEof();
                }
            }
            return readLength;
        }
        const line = await tp.readLine();
        if (line === null) throw new Deno.errors.UnexpectedEof();
        const [chunkSizeString] = line.split(";");
        const chunkSize = parseInt(chunkSizeString, 16);
        if (Number.isNaN(chunkSize) || chunkSize < 0) {
            throw new Deno.errors.InvalidData("Invalid chunk size");
        }
        if (chunkSize > 0) {
            if (chunkSize > buf.byteLength) {
                let eof = await r1.readFull(buf);
                if (eof === null) {
                    throw new Deno.errors.UnexpectedEof();
                }
                const restChunk = new Uint8Array(chunkSize - buf.byteLength);
                eof = await r1.readFull(restChunk);
                if (eof === null) {
                    throw new Deno.errors.UnexpectedEof();
                } else {
                    chunks.push({
                        offset: 0,
                        data: restChunk
                    });
                }
                return buf.byteLength;
            } else {
                const bufToFill = buf.subarray(0, chunkSize);
                const eof = await r1.readFull(bufToFill);
                if (eof === null) {
                    throw new Deno.errors.UnexpectedEof();
                }
                if (await tp.readLine() === null) {
                    throw new Deno.errors.UnexpectedEof();
                }
                return chunkSize;
            }
        } else {
            assert(chunkSize === 0);
            if (await r1.readLine() === null) {
                throw new Deno.errors.UnexpectedEof();
            }
            await readTrailers(h, r1);
            finished = true;
            return null;
        }
    }
    return {
        read
    };
}
function isProhibidedForTrailer(key) {
    const s = new Set([
        "transfer-encoding",
        "content-length",
        "trailer"
    ]);
    return s.has(key.toLowerCase());
}
async function readTrailers(headers, r1) {
    const trailers = parseTrailer(headers.get("trailer"));
    if (trailers == null) return;
    const trailerNames = [
        ...trailers.keys()
    ];
    const tp = new TextProtoReader(r1);
    const result = await tp.readMIMEHeader();
    if (result == null) {
        throw new Deno.errors.InvalidData("Missing trailer header.");
    }
    const undeclared = [
        ...result.keys()
    ].filter((k)=>!trailerNames.includes(k)
    );
    if (undeclared.length > 0) {
        throw new Deno.errors.InvalidData(`Undeclared trailers: ${Deno.inspect(undeclared)}.`);
    }
    for (const [k, v] of result){
        headers.append(k, v);
    }
    const missingTrailers = trailerNames.filter((k1)=>!result.has(k1)
    );
    if (missingTrailers.length > 0) {
        throw new Deno.errors.InvalidData(`Missing trailers: ${Deno.inspect(missingTrailers)}.`);
    }
    headers.delete("trailer");
}
function parseTrailer(field) {
    if (field == null) {
        return undefined;
    }
    const trailerNames = field.split(",").map((v)=>v.trim().toLowerCase()
    );
    if (trailerNames.length === 0) {
        throw new Deno.errors.InvalidData("Empty trailer header.");
    }
    const prohibited = trailerNames.filter((k)=>isProhibidedForTrailer(k)
    );
    if (prohibited.length > 0) {
        throw new Deno.errors.InvalidData(`Prohibited trailer names: ${Deno.inspect(prohibited)}.`);
    }
    return new Headers(trailerNames.map((key)=>[
            key,
            ""
        ]
    ));
}
async function writeChunkedBody(w, r1) {
    for await (const chunk of iter(r1)){
        if (chunk.byteLength <= 0) continue;
        const start = encoder.encode(`${chunk.byteLength.toString(16)}\r\n`);
        const end = encoder.encode("\r\n");
        await w.write(start);
        await w.write(chunk);
        await w.write(end);
        await w.flush();
    }
    const endChunk = encoder.encode("0\r\n\r\n");
    await w.write(endChunk);
}
async function writeTrailers(w, headers, trailers) {
    const trailer = headers.get("trailer");
    if (trailer === null) {
        throw new TypeError("Missing trailer header.");
    }
    const transferEncoding = headers.get("transfer-encoding");
    if (transferEncoding === null || !transferEncoding.match(/^chunked/)) {
        throw new TypeError(`Trailers are only allowed for "transfer-encoding: chunked", got "transfer-encoding: ${transferEncoding}".`);
    }
    const writer3 = BufWriter.create(w);
    const trailerNames = trailer.split(",").map((s)=>s.trim().toLowerCase()
    );
    const prohibitedTrailers = trailerNames.filter((k)=>isProhibidedForTrailer(k)
    );
    if (prohibitedTrailers.length > 0) {
        throw new TypeError(`Prohibited trailer names: ${Deno.inspect(prohibitedTrailers)}.`);
    }
    const undeclared = [
        ...trailers.keys()
    ].filter((k)=>!trailerNames.includes(k)
    );
    if (undeclared.length > 0) {
        throw new TypeError(`Undeclared trailers: ${Deno.inspect(undeclared)}.`);
    }
    for (const [key, value1] of trailers){
        await writer3.write(encoder.encode(`${key}: ${value1}\r\n`));
    }
    await writer3.write(encoder.encode("\r\n"));
    await writer3.flush();
}
async function writeResponse(w, r1) {
    const protoMajor = 1;
    const protoMinor = 1;
    const statusCode = r1.status || 200;
    const statusText = (r1.statusText ?? STATUS_TEXT.get(statusCode)) ?? null;
    const writer3 = BufWriter.create(w);
    if (statusText === null) {
        throw new Deno.errors.InvalidData("Empty statusText (explicitely pass an empty string if this was intentional)");
    }
    if (!r1.body) {
        r1.body = new Uint8Array();
    }
    if (typeof r1.body === "string") {
        r1.body = encoder.encode(r1.body);
    }
    let out = `HTTP/${1}.${1} ${statusCode} ${statusText}\r\n`;
    const headers = r1.headers ?? new Headers();
    if (r1.body && !headers.get("content-length")) {
        if (r1.body instanceof Uint8Array) {
            out += `content-length: ${r1.body.byteLength}\r\n`;
        } else if (!headers.get("transfer-encoding")) {
            out += "transfer-encoding: chunked\r\n";
        }
    }
    for (const [key, value1] of headers){
        out += `${key}: ${value1}\r\n`;
    }
    out += `\r\n`;
    const header = encoder.encode(out);
    const n = await writer3.write(header);
    assert(n === header.byteLength);
    if (r1.body instanceof Uint8Array) {
        const n1 = await writer3.write(r1.body);
        assert(n1 === r1.body.byteLength);
    } else if (headers.has("content-length")) {
        const contentLength = headers.get("content-length");
        assert(contentLength != null);
        const bodyLength = parseInt(contentLength);
        const n1 = await copy1(r1.body, writer3);
        assert(n1 === bodyLength);
    } else {
        await writeChunkedBody(writer3, r1.body);
    }
    if (r1.trailers) {
        const t = await r1.trailers();
        await writeTrailers(writer3, headers, t);
    }
    await writer3.flush();
}
class ServerRequest {
    url;
    method;
    proto;
    protoMinor;
    protoMajor;
    headers;
    conn;
    r;
    w;
    #done = deferred();
    #contentLength = undefined;
    #body = undefined;
    #finalized = false;
    get done() {
        return this.#done.then((e)=>e
        );
    }
    get contentLength() {
        if (this.#contentLength === undefined) {
            const cl = this.headers.get("content-length");
            if (cl) {
                this.#contentLength = parseInt(cl);
                if (Number.isNaN(this.#contentLength)) {
                    this.#contentLength = null;
                }
            } else {
                this.#contentLength = null;
            }
        }
        return this.#contentLength;
    }
    get body() {
        if (!this.#body) {
            if (this.contentLength != null) {
                this.#body = bodyReader(this.contentLength, this.r);
            } else {
                const transferEncoding = this.headers.get("transfer-encoding");
                if (transferEncoding != null) {
                    const parts = transferEncoding.split(",").map((e)=>e.trim().toLowerCase()
                    );
                    assert(parts.includes("chunked"), 'transfer-encoding must include "chunked" if content-length is not set');
                    this.#body = chunkedBodyReader(this.headers, this.r);
                } else {
                    this.#body = emptyReader();
                }
            }
        }
        return this.#body;
    }
    async respond(r) {
        let err;
        try {
            await writeResponse(this.w, r);
        } catch (e) {
            try {
                this.conn.close();
            } catch  {
            }
            err = e;
        }
        this.#done.resolve(err);
        if (err) {
            throw err;
        }
    }
    async finalize() {
        if (this.#finalized) return;
        const body = this.body;
        const buf = new Uint8Array(1024);
        while(await body.read(buf) !== null){
        }
        this.#finalized = true;
    }
}
function parseHTTPVersion(vers) {
    switch(vers){
        case "HTTP/1.1":
            return [
                1,
                1
            ];
        case "HTTP/1.0":
            return [
                1,
                0
            ];
        default:
            {
                const Big = 1000000;
                if (!vers.startsWith("HTTP/")) {
                    break;
                }
                const dot = vers.indexOf(".");
                if (dot < 0) {
                    break;
                }
                const majorStr = vers.substring(vers.indexOf("/") + 1, dot);
                const major = Number(majorStr);
                if (!Number.isInteger(major) || major < 0 || major > 1000000) {
                    break;
                }
                const minorStr = vers.substring(dot + 1);
                const minor = Number(minorStr);
                if (!Number.isInteger(minor) || minor < 0 || minor > 1000000) {
                    break;
                }
                return [
                    major,
                    minor
                ];
            }
    }
    throw new Error(`malformed HTTP version ${vers}`);
}
async function readRequest(conn, bufr) {
    const tp = new TextProtoReader(bufr);
    const firstLine = await tp.readLine();
    if (firstLine === null) return null;
    const headers = await tp.readMIMEHeader();
    if (headers === null) throw new Deno.errors.UnexpectedEof();
    const req = new ServerRequest();
    req.conn = conn;
    req.r = bufr;
    [req.method, req.url, req.proto] = firstLine.split(" ", 3);
    [req.protoMajor, req.protoMinor] = parseHTTPVersion(req.proto);
    req.headers = headers;
    fixLength(req);
    return req;
}
class Server {
    listener;
    #closing = false;
    #connections = [];
    constructor(listener1){
        this.listener = listener1;
    }
    close() {
        this.#closing = true;
        this.listener.close();
        for (const conn of this.#connections){
            try {
                conn.close();
            } catch (e) {
                if (!(e instanceof Deno.errors.BadResource)) {
                    throw e;
                }
            }
        }
    }
    async *iterateHttpRequests(conn) {
        const reader = new BufReader(conn);
        const writer3 = new BufWriter(conn);
        while(!this.#closing){
            let request1;
            try {
                request1 = await readRequest(conn, reader);
            } catch (error) {
                if (error instanceof Deno.errors.InvalidData || error instanceof Deno.errors.UnexpectedEof) {
                    try {
                        await writeResponse(writer3, {
                            status: 400,
                            body: new TextEncoder().encode(`${error.message}\r\n\r\n`)
                        });
                    } catch  {
                    }
                }
                break;
            }
            if (request1 === null) {
                break;
            }
            request1.w = writer3;
            yield request1;
            const responseError = await request1.done;
            if (responseError) {
                this.untrackConnection(request1.conn);
                return;
            }
            try {
                await request1.finalize();
            } catch  {
                break;
            }
        }
        this.untrackConnection(conn);
        try {
            conn.close();
        } catch  {
        }
    }
    trackConnection(conn) {
        this.#connections.push(conn);
    }
    untrackConnection(conn) {
        const index = this.#connections.indexOf(conn);
        if (index !== -1) {
            this.#connections.splice(index, 1);
        }
    }
    async *acceptConnAndIterateHttpRequests(mux) {
        if (this.#closing) return;
        let conn;
        try {
            conn = await this.listener.accept();
        } catch (error) {
            if (error instanceof Deno.errors.BadResource || error instanceof Deno.errors.InvalidData || error instanceof Deno.errors.UnexpectedEof || error instanceof Deno.errors.ConnectionReset || error instanceof Deno.errors.NotConnected) {
                return mux.add(this.acceptConnAndIterateHttpRequests(mux));
            }
            throw error;
        }
        this.trackConnection(conn);
        mux.add(this.acceptConnAndIterateHttpRequests(mux));
        yield* this.iterateHttpRequests(conn);
    }
    [Symbol.asyncIterator]() {
        const mux = new MuxAsyncIterator();
        mux.add(this.acceptConnAndIterateHttpRequests(mux));
        return mux.iterate();
    }
}
function _parseAddrFromStr(addr) {
    let url;
    try {
        const host = addr.startsWith(":") ? `0.0.0.0${addr}` : addr;
        url = new URL(`http://${host}`);
    } catch  {
        throw new TypeError("Invalid address.");
    }
    if (url.username || url.password || url.pathname != "/" || url.search || url.hash) {
        throw new TypeError("Invalid address.");
    }
    return {
        hostname: url.hostname,
        port: url.port === "" ? 80 : Number(url.port)
    };
}
function serve(addr) {
    if (typeof addr === "string") {
        addr = _parseAddrFromStr(addr);
    }
    const listener1 = Deno.listen(addr);
    return new Server(listener1);
}
function serveTLS(options2) {
    const tlsOptions = {
        ...options2,
        transport: "tcp"
    };
    const listener1 = Deno.listenTls(tlsOptions);
    return new Server(listener1);
}
function fixLength(req) {
    const contentLength = req.headers.get("Content-Length");
    if (contentLength) {
        const arrClen = contentLength.split(",");
        if (arrClen.length > 1) {
            const distinct = [
                ...new Set(arrClen.map((e)=>e.trim()
                ))
            ];
            if (distinct.length > 1) {
                throw Error("cannot contain multiple Content-Length headers");
            } else {
                req.headers.set("Content-Length", distinct[0]);
            }
        }
        const c = req.headers.get("Content-Length");
        if (req.method === "HEAD" && c && c !== "0") {
            throw Error("http: method cannot contain a Content-Length");
        }
        if (c && req.headers.has("transfer-encoding")) {
            throw new Error("http: Transfer-Encoding and Content-Length cannot be send together");
        }
    }
}
class StringReader extends Buffer1 {
    constructor(s){
        super(new TextEncoder().encode(s).buffer);
    }
}
class MultiReader {
    readers;
    currentIndex = 0;
    constructor(...readers1){
        this.readers = readers1;
    }
    async read(p) {
        const r2 = this.readers[this.currentIndex];
        if (!r2) return null;
        const result = await r2.read(p);
        if (result === null) {
            this.currentIndex++;
            return 0;
        }
        return result;
    }
}
class LimitedReader {
    reader;
    limit;
    constructor(reader1, limit3){
        this.reader = reader1;
        this.limit = limit3;
    }
    async read(p) {
        if (this.limit <= 0) {
            return null;
        }
        if (p.length > this.limit) {
            p = p.subarray(0, this.limit);
        }
        const n = await this.reader.read(p);
        if (n == null) {
            return null;
        }
        this.limit -= n;
        return n;
    }
}
function readerFromStreamReader(streamReader) {
    const buffer = new Buffer1();
    return {
        async read (p) {
            if (buffer.empty()) {
                const res = await streamReader.read();
                if (res.done) {
                    return null;
                }
                await writeAll(buffer, res.value);
            }
            return buffer.read(p);
        }
    };
}
const osType = (()=>{
    const { Deno  } = globalThis;
    if (typeof Deno?.build?.os === "string") {
        return Deno.build.os;
    }
    const { navigator  } = globalThis;
    if (navigator?.appVersion?.includes?.("Win") ?? false) {
        return "windows";
    }
    return "linux";
})();
const isWindows = osType === "windows";
const CHAR_FORWARD_SLASH = 47;
function assertPath(path) {
    if (typeof path !== "string") {
        throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);
    }
}
function isPosixPathSeparator(code) {
    return code === 47;
}
function isPathSeparator(code) {
    return isPosixPathSeparator(code) || code === 92;
}
function isWindowsDeviceRoot(code) {
    return code >= 97 && code <= 122 || code >= 65 && code <= 90;
}
function normalizeString(path, allowAboveRoot, separator, isPathSeparator1) {
    let res = "";
    let lastSegmentLength = 0;
    let lastSlash = -1;
    let dots = 0;
    let code;
    for(let i = 0, len = path.length; i <= len; ++i){
        if (i < len) code = path.charCodeAt(i);
        else if (isPathSeparator1(code)) break;
        else code = CHAR_FORWARD_SLASH;
        if (isPathSeparator1(code)) {
            if (lastSlash === i - 1 || dots === 1) {
            } else if (lastSlash !== i - 1 && dots === 2) {
                if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {
                    if (res.length > 2) {
                        const lastSlashIndex = res.lastIndexOf(separator);
                        if (lastSlashIndex === -1) {
                            res = "";
                            lastSegmentLength = 0;
                        } else {
                            res = res.slice(0, lastSlashIndex);
                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);
                        }
                        lastSlash = i;
                        dots = 0;
                        continue;
                    } else if (res.length === 2 || res.length === 1) {
                        res = "";
                        lastSegmentLength = 0;
                        lastSlash = i;
                        dots = 0;
                        continue;
                    }
                }
                if (allowAboveRoot) {
                    if (res.length > 0) res += `${separator}..`;
                    else res = "..";
                    lastSegmentLength = 2;
                }
            } else {
                if (res.length > 0) res += separator + path.slice(lastSlash + 1, i);
                else res = path.slice(lastSlash + 1, i);
                lastSegmentLength = i - lastSlash - 1;
            }
            lastSlash = i;
            dots = 0;
        } else if (code === 46 && dots !== -1) {
            ++dots;
        } else {
            dots = -1;
        }
    }
    return res;
}
function _format(sep, pathObject) {
    const dir = pathObject.dir || pathObject.root;
    const base = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
    if (!dir) return base;
    if (dir === pathObject.root) return dir + base;
    return dir + sep + base;
}
const WHITESPACE_ENCODINGS = {
    "\u0009": "%09",
    "\u000A": "%0A",
    "\u000B": "%0B",
    "\u000C": "%0C",
    "\u000D": "%0D",
    "\u0020": "%20"
};
function encodeWhitespace(string) {
    return string.replaceAll(/[\s]/g, (c)=>{
        return WHITESPACE_ENCODINGS[c] ?? c;
    });
}
const sep = "\\";
const delimiter = ";";
function resolve(...pathSegments) {
    let resolvedDevice = "";
    let resolvedTail = "";
    let resolvedAbsolute = false;
    for(let i = pathSegments.length - 1; i >= -1; i--){
        let path;
        const { Deno  } = globalThis;
        if (i >= 0) {
            path = pathSegments[i];
        } else if (!resolvedDevice) {
            if (typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a drive-letter-less path without a CWD.");
            }
            path = Deno.cwd();
        } else {
            if (typeof Deno?.env?.get !== "function" || typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a relative path without a CWD.");
            }
            path = Deno.env.get(`=${resolvedDevice}`) || Deno.cwd();
            if (path === undefined || path.slice(0, 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\`) {
                path = `${resolvedDevice}\\`;
            }
        }
        assertPath(path);
        const len = path.length;
        if (len === 0) continue;
        let rootEnd = 0;
        let device = "";
        let isAbsolute = false;
        const code = path.charCodeAt(0);
        if (len > 1) {
            if (isPathSeparator(code)) {
                isAbsolute = true;
                if (isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for(; j < len; ++j){
                        if (isPathSeparator(path.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        const firstPart = path.slice(last, j);
                        last = j;
                        for(; j < len; ++j){
                            if (!isPathSeparator(path.charCodeAt(j))) break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for(; j < len; ++j){
                                if (isPathSeparator(path.charCodeAt(j))) break;
                            }
                            if (j === len) {
                                device = `\\\\${firstPart}\\${path.slice(last)}`;
                                rootEnd = j;
                            } else if (j !== last) {
                                device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                rootEnd = j;
                            }
                        }
                    }
                } else {
                    rootEnd = 1;
                }
            } else if (isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === 58) {
                    device = path.slice(0, 2);
                    rootEnd = 2;
                    if (len > 2) {
                        if (isPathSeparator(path.charCodeAt(2))) {
                            isAbsolute = true;
                            rootEnd = 3;
                        }
                    }
                }
            }
        } else if (isPathSeparator(code)) {
            rootEnd = 1;
            isAbsolute = true;
        }
        if (device.length > 0 && resolvedDevice.length > 0 && device.toLowerCase() !== resolvedDevice.toLowerCase()) {
            continue;
        }
        if (resolvedDevice.length === 0 && device.length > 0) {
            resolvedDevice = device;
        }
        if (!resolvedAbsolute) {
            resolvedTail = `${path.slice(rootEnd)}\\${resolvedTail}`;
            resolvedAbsolute = isAbsolute;
        }
        if (resolvedAbsolute && resolvedDevice.length > 0) break;
    }
    resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, "\\", isPathSeparator);
    return resolvedDevice + (resolvedAbsolute ? "\\" : "") + resolvedTail || ".";
}
function normalize(path) {
    assertPath(path);
    const len = path.length;
    if (len === 0) return ".";
    let rootEnd = 0;
    let device;
    let isAbsolute = false;
    const code = path.charCodeAt(0);
    if (len > 1) {
        if (isPathSeparator(code)) {
            isAbsolute = true;
            if (isPathSeparator(path.charCodeAt(1))) {
                let j = 2;
                let last = j;
                for(; j < len; ++j){
                    if (isPathSeparator(path.charCodeAt(j))) break;
                }
                if (j < len && j !== last) {
                    const firstPart = path.slice(last, j);
                    last = j;
                    for(; j < len; ++j){
                        if (!isPathSeparator(path.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for(; j < len; ++j){
                            if (isPathSeparator(path.charCodeAt(j))) break;
                        }
                        if (j === len) {
                            return `\\\\${firstPart}\\${path.slice(last)}\\`;
                        } else if (j !== last) {
                            device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                            rootEnd = j;
                        }
                    }
                }
            } else {
                rootEnd = 1;
            }
        } else if (isWindowsDeviceRoot(code)) {
            if (path.charCodeAt(1) === 58) {
                device = path.slice(0, 2);
                rootEnd = 2;
                if (len > 2) {
                    if (isPathSeparator(path.charCodeAt(2))) {
                        isAbsolute = true;
                        rootEnd = 3;
                    }
                }
            }
        }
    } else if (isPathSeparator(code)) {
        return "\\";
    }
    let tail;
    if (rootEnd < len) {
        tail = normalizeString(path.slice(rootEnd), !isAbsolute, "\\", isPathSeparator);
    } else {
        tail = "";
    }
    if (tail.length === 0 && !isAbsolute) tail = ".";
    if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {
        tail += "\\";
    }
    if (device === undefined) {
        if (isAbsolute) {
            if (tail.length > 0) return `\\${tail}`;
            else return "\\";
        } else if (tail.length > 0) {
            return tail;
        } else {
            return "";
        }
    } else if (isAbsolute) {
        if (tail.length > 0) return `${device}\\${tail}`;
        else return `${device}\\`;
    } else if (tail.length > 0) {
        return device + tail;
    } else {
        return device;
    }
}
function isAbsolute(path) {
    assertPath(path);
    const len = path.length;
    if (len === 0) return false;
    const code = path.charCodeAt(0);
    if (isPathSeparator(code)) {
        return true;
    } else if (isWindowsDeviceRoot(code)) {
        if (len > 2 && path.charCodeAt(1) === 58) {
            if (isPathSeparator(path.charCodeAt(2))) return true;
        }
    }
    return false;
}
function join(...paths) {
    const pathsCount = paths.length;
    if (pathsCount === 0) return ".";
    let joined;
    let firstPart = null;
    for(let i = 0; i < pathsCount; ++i){
        const path = paths[i];
        assertPath(path);
        if (path.length > 0) {
            if (joined === undefined) joined = firstPart = path;
            else joined += `\\${path}`;
        }
    }
    if (joined === undefined) return ".";
    let needsReplace = true;
    let slashCount = 0;
    assert(firstPart != null);
    if (isPathSeparator(firstPart.charCodeAt(0))) {
        ++slashCount;
        const firstLen = firstPart.length;
        if (firstLen > 1) {
            if (isPathSeparator(firstPart.charCodeAt(1))) {
                ++slashCount;
                if (firstLen > 2) {
                    if (isPathSeparator(firstPart.charCodeAt(2))) ++slashCount;
                    else {
                        needsReplace = false;
                    }
                }
            }
        }
    }
    if (needsReplace) {
        for(; slashCount < joined.length; ++slashCount){
            if (!isPathSeparator(joined.charCodeAt(slashCount))) break;
        }
        if (slashCount >= 2) joined = `\\${joined.slice(slashCount)}`;
    }
    return normalize(joined);
}
function relative(from, to) {
    assertPath(from);
    assertPath(to);
    if (from === to) return "";
    const fromOrig = resolve(from);
    const toOrig = resolve(to);
    if (fromOrig === toOrig) return "";
    from = fromOrig.toLowerCase();
    to = toOrig.toLowerCase();
    if (from === to) return "";
    let fromStart = 0;
    let fromEnd = from.length;
    for(; fromStart < fromEnd; ++fromStart){
        if (from.charCodeAt(fromStart) !== 92) break;
    }
    for(; fromEnd - 1 > fromStart; --fromEnd){
        if (from.charCodeAt(fromEnd - 1) !== 92) break;
    }
    const fromLen = fromEnd - fromStart;
    let toStart = 0;
    let toEnd = to.length;
    for(; toStart < toEnd; ++toStart){
        if (to.charCodeAt(toStart) !== 92) break;
    }
    for(; toEnd - 1 > toStart; --toEnd){
        if (to.charCodeAt(toEnd - 1) !== 92) break;
    }
    const toLen = toEnd - toStart;
    const length = fromLen < toLen ? fromLen : toLen;
    let lastCommonSep = -1;
    let i = 0;
    for(; i <= length; ++i){
        if (i === length) {
            if (toLen > length) {
                if (to.charCodeAt(toStart + i) === 92) {
                    return toOrig.slice(toStart + i + 1);
                } else if (i === 2) {
                    return toOrig.slice(toStart + i);
                }
            }
            if (fromLen > length) {
                if (from.charCodeAt(fromStart + i) === 92) {
                    lastCommonSep = i;
                } else if (i === 2) {
                    lastCommonSep = 3;
                }
            }
            break;
        }
        const fromCode = from.charCodeAt(fromStart + i);
        const toCode = to.charCodeAt(toStart + i);
        if (fromCode !== toCode) break;
        else if (fromCode === 92) lastCommonSep = i;
    }
    if (i !== length && lastCommonSep === -1) {
        return toOrig;
    }
    let out = "";
    if (lastCommonSep === -1) lastCommonSep = 0;
    for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i){
        if (i === fromEnd || from.charCodeAt(i) === 92) {
            if (out.length === 0) out += "..";
            else out += "\\..";
        }
    }
    if (out.length > 0) {
        return out + toOrig.slice(toStart + lastCommonSep, toEnd);
    } else {
        toStart += lastCommonSep;
        if (toOrig.charCodeAt(toStart) === 92) ++toStart;
        return toOrig.slice(toStart, toEnd);
    }
}
function toNamespacedPath(path) {
    if (typeof path !== "string") return path;
    if (path.length === 0) return "";
    const resolvedPath = resolve(path);
    if (resolvedPath.length >= 3) {
        if (resolvedPath.charCodeAt(0) === 92) {
            if (resolvedPath.charCodeAt(1) === 92) {
                const code = resolvedPath.charCodeAt(2);
                if (code !== 63 && code !== 46) {
                    return `\\\\?\\UNC\\${resolvedPath.slice(2)}`;
                }
            }
        } else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {
            if (resolvedPath.charCodeAt(1) === 58 && resolvedPath.charCodeAt(2) === 92) {
                return `\\\\?\\${resolvedPath}`;
            }
        }
    }
    return path;
}
function dirname(path) {
    assertPath(path);
    const len = path.length;
    if (len === 0) return ".";
    let rootEnd = -1;
    let end = -1;
    let matchedSlash = true;
    let offset = 0;
    const code = path.charCodeAt(0);
    if (len > 1) {
        if (isPathSeparator(code)) {
            rootEnd = offset = 1;
            if (isPathSeparator(path.charCodeAt(1))) {
                let j = 2;
                let last = j;
                for(; j < len; ++j){
                    if (isPathSeparator(path.charCodeAt(j))) break;
                }
                if (j < len && j !== last) {
                    last = j;
                    for(; j < len; ++j){
                        if (!isPathSeparator(path.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for(; j < len; ++j){
                            if (isPathSeparator(path.charCodeAt(j))) break;
                        }
                        if (j === len) {
                            return path;
                        }
                        if (j !== last) {
                            rootEnd = offset = j + 1;
                        }
                    }
                }
            }
        } else if (isWindowsDeviceRoot(code)) {
            if (path.charCodeAt(1) === 58) {
                rootEnd = offset = 2;
                if (len > 2) {
                    if (isPathSeparator(path.charCodeAt(2))) rootEnd = offset = 3;
                }
            }
        }
    } else if (isPathSeparator(code)) {
        return path;
    }
    for(let i = len - 1; i >= offset; --i){
        if (isPathSeparator(path.charCodeAt(i))) {
            if (!matchedSlash) {
                end = i;
                break;
            }
        } else {
            matchedSlash = false;
        }
    }
    if (end === -1) {
        if (rootEnd === -1) return ".";
        else end = rootEnd;
    }
    return path.slice(0, end);
}
function basename(path, ext = "") {
    if (ext !== undefined && typeof ext !== "string") {
        throw new TypeError('"ext" argument must be a string');
    }
    assertPath(path);
    let start = 0;
    let end = -1;
    let matchedSlash = true;
    let i;
    if (path.length >= 2) {
        const drive = path.charCodeAt(0);
        if (isWindowsDeviceRoot(drive)) {
            if (path.charCodeAt(1) === 58) start = 2;
        }
    }
    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
        if (ext.length === path.length && ext === path) return "";
        let extIdx = ext.length - 1;
        let firstNonSlashEnd = -1;
        for(i = path.length - 1; i >= start; --i){
            const code = path.charCodeAt(i);
            if (isPathSeparator(code)) {
                if (!matchedSlash) {
                    start = i + 1;
                    break;
                }
            } else {
                if (firstNonSlashEnd === -1) {
                    matchedSlash = false;
                    firstNonSlashEnd = i + 1;
                }
                if (extIdx >= 0) {
                    if (code === ext.charCodeAt(extIdx)) {
                        if (--extIdx === -1) {
                            end = i;
                        }
                    } else {
                        extIdx = -1;
                        end = firstNonSlashEnd;
                    }
                }
            }
        }
        if (start === end) end = firstNonSlashEnd;
        else if (end === -1) end = path.length;
        return path.slice(start, end);
    } else {
        for(i = path.length - 1; i >= start; --i){
            if (isPathSeparator(path.charCodeAt(i))) {
                if (!matchedSlash) {
                    start = i + 1;
                    break;
                }
            } else if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
        }
        if (end === -1) return "";
        return path.slice(start, end);
    }
}
function extname(path) {
    assertPath(path);
    let start = 0;
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let preDotState = 0;
    if (path.length >= 2 && path.charCodeAt(1) === 58 && isWindowsDeviceRoot(path.charCodeAt(0))) {
        start = startPart = 2;
    }
    for(let i = path.length - 1; i >= start; --i){
        const code = path.charCodeAt(i);
        if (isPathSeparator(code)) {
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i + 1;
        }
        if (code === 46) {
            if (startDot === -1) startDot = i;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        return "";
    }
    return path.slice(startDot, end);
}
function format4(pathObject) {
    if (pathObject === null || typeof pathObject !== "object") {
        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
    }
    return _format("\\", pathObject);
}
function parse(path) {
    assertPath(path);
    const ret = {
        root: "",
        dir: "",
        base: "",
        ext: "",
        name: ""
    };
    const len = path.length;
    if (len === 0) return ret;
    let rootEnd = 0;
    let code = path.charCodeAt(0);
    if (len > 1) {
        if (isPathSeparator(code)) {
            rootEnd = 1;
            if (isPathSeparator(path.charCodeAt(1))) {
                let j = 2;
                let last = j;
                for(; j < len; ++j){
                    if (isPathSeparator(path.charCodeAt(j))) break;
                }
                if (j < len && j !== last) {
                    last = j;
                    for(; j < len; ++j){
                        if (!isPathSeparator(path.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for(; j < len; ++j){
                            if (isPathSeparator(path.charCodeAt(j))) break;
                        }
                        if (j === len) {
                            rootEnd = j;
                        } else if (j !== last) {
                            rootEnd = j + 1;
                        }
                    }
                }
            }
        } else if (isWindowsDeviceRoot(code)) {
            if (path.charCodeAt(1) === 58) {
                rootEnd = 2;
                if (len > 2) {
                    if (isPathSeparator(path.charCodeAt(2))) {
                        if (len === 3) {
                            ret.root = ret.dir = path;
                            return ret;
                        }
                        rootEnd = 3;
                    }
                } else {
                    ret.root = ret.dir = path;
                    return ret;
                }
            }
        }
    } else if (isPathSeparator(code)) {
        ret.root = ret.dir = path;
        return ret;
    }
    if (rootEnd > 0) ret.root = path.slice(0, rootEnd);
    let startDot = -1;
    let startPart = rootEnd;
    let end = -1;
    let matchedSlash = true;
    let i = path.length - 1;
    let preDotState = 0;
    for(; i >= rootEnd; --i){
        code = path.charCodeAt(i);
        if (isPathSeparator(code)) {
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i + 1;
        }
        if (code === 46) {
            if (startDot === -1) startDot = i;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        if (end !== -1) {
            ret.base = ret.name = path.slice(startPart, end);
        }
    } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
        ret.ext = path.slice(startDot, end);
    }
    if (startPart > 0 && startPart !== rootEnd) {
        ret.dir = path.slice(0, startPart - 1);
    } else ret.dir = ret.root;
    return ret;
}
function fromFileUrl(url) {
    url = url instanceof URL ? url : new URL(url);
    if (url.protocol != "file:") {
        throw new TypeError("Must be a file URL.");
    }
    let path = decodeURIComponent(url.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
    if (url.hostname != "") {
        path = `\\\\${url.hostname}${path}`;
    }
    return path;
}
function toFileUrl(path) {
    if (!isAbsolute(path)) {
        throw new TypeError("Must be an absolute path.");
    }
    const [, hostname, pathname] = path.match(/^(?:[/\\]{2}([^/\\]+)(?=[/\\](?:[^/\\]|$)))?(.*)/);
    const url = new URL("file:///");
    url.pathname = encodeWhitespace(pathname.replace(/%/g, "%25"));
    if (hostname != null && hostname != "localhost") {
        url.hostname = hostname;
        if (!url.hostname) {
            throw new TypeError("Invalid hostname.");
        }
    }
    return url;
}
const mod1 = function() {
    return {
        sep: sep,
        delimiter: delimiter,
        resolve: resolve,
        normalize: normalize,
        isAbsolute: isAbsolute,
        join: join,
        relative: relative,
        toNamespacedPath: toNamespacedPath,
        dirname: dirname,
        basename: basename,
        extname: extname,
        format: format4,
        parse: parse,
        fromFileUrl: fromFileUrl,
        toFileUrl: toFileUrl
    };
}();
const sep1 = "/";
const delimiter1 = ":";
function resolve1(...pathSegments) {
    let resolvedPath = "";
    let resolvedAbsolute = false;
    for(let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--){
        let path;
        if (i >= 0) path = pathSegments[i];
        else {
            const { Deno  } = globalThis;
            if (typeof Deno?.cwd !== "function") {
                throw new TypeError("Resolved a relative path without a CWD.");
            }
            path = Deno.cwd();
        }
        assertPath(path);
        if (path.length === 0) {
            continue;
        }
        resolvedPath = `${path}/${resolvedPath}`;
        resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;
    }
    resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, "/", isPosixPathSeparator);
    if (resolvedAbsolute) {
        if (resolvedPath.length > 0) return `/${resolvedPath}`;
        else return "/";
    } else if (resolvedPath.length > 0) return resolvedPath;
    else return ".";
}
function normalize1(path) {
    assertPath(path);
    if (path.length === 0) return ".";
    const isAbsolute1 = path.charCodeAt(0) === 47;
    const trailingSeparator = path.charCodeAt(path.length - 1) === 47;
    path = normalizeString(path, !isAbsolute1, "/", isPosixPathSeparator);
    if (path.length === 0 && !isAbsolute1) path = ".";
    if (path.length > 0 && trailingSeparator) path += "/";
    if (isAbsolute1) return `/${path}`;
    return path;
}
function isAbsolute1(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47;
}
function join1(...paths) {
    if (paths.length === 0) return ".";
    let joined;
    for(let i = 0, len = paths.length; i < len; ++i){
        const path = paths[i];
        assertPath(path);
        if (path.length > 0) {
            if (!joined) joined = path;
            else joined += `/${path}`;
        }
    }
    if (!joined) return ".";
    return normalize1(joined);
}
function relative1(from, to) {
    assertPath(from);
    assertPath(to);
    if (from === to) return "";
    from = resolve1(from);
    to = resolve1(to);
    if (from === to) return "";
    let fromStart = 1;
    const fromEnd = from.length;
    for(; fromStart < fromEnd; ++fromStart){
        if (from.charCodeAt(fromStart) !== 47) break;
    }
    const fromLen = fromEnd - fromStart;
    let toStart = 1;
    const toEnd = to.length;
    for(; toStart < toEnd; ++toStart){
        if (to.charCodeAt(toStart) !== 47) break;
    }
    const toLen = toEnd - toStart;
    const length = fromLen < toLen ? fromLen : toLen;
    let lastCommonSep = -1;
    let i = 0;
    for(; i <= length; ++i){
        if (i === length) {
            if (toLen > length) {
                if (to.charCodeAt(toStart + i) === 47) {
                    return to.slice(toStart + i + 1);
                } else if (i === 0) {
                    return to.slice(toStart + i);
                }
            } else if (fromLen > length) {
                if (from.charCodeAt(fromStart + i) === 47) {
                    lastCommonSep = i;
                } else if (i === 0) {
                    lastCommonSep = 0;
                }
            }
            break;
        }
        const fromCode = from.charCodeAt(fromStart + i);
        const toCode = to.charCodeAt(toStart + i);
        if (fromCode !== toCode) break;
        else if (fromCode === 47) lastCommonSep = i;
    }
    let out = "";
    for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i){
        if (i === fromEnd || from.charCodeAt(i) === 47) {
            if (out.length === 0) out += "..";
            else out += "/..";
        }
    }
    if (out.length > 0) return out + to.slice(toStart + lastCommonSep);
    else {
        toStart += lastCommonSep;
        if (to.charCodeAt(toStart) === 47) ++toStart;
        return to.slice(toStart);
    }
}
function toNamespacedPath1(path) {
    return path;
}
function dirname1(path) {
    assertPath(path);
    if (path.length === 0) return ".";
    const hasRoot = path.charCodeAt(0) === 47;
    let end = -1;
    let matchedSlash = true;
    for(let i = path.length - 1; i >= 1; --i){
        if (path.charCodeAt(i) === 47) {
            if (!matchedSlash) {
                end = i;
                break;
            }
        } else {
            matchedSlash = false;
        }
    }
    if (end === -1) return hasRoot ? "/" : ".";
    if (hasRoot && end === 1) return "//";
    return path.slice(0, end);
}
function basename1(path, ext = "") {
    if (ext !== undefined && typeof ext !== "string") {
        throw new TypeError('"ext" argument must be a string');
    }
    assertPath(path);
    let start = 0;
    let end = -1;
    let matchedSlash = true;
    let i;
    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
        if (ext.length === path.length && ext === path) return "";
        let extIdx = ext.length - 1;
        let firstNonSlashEnd = -1;
        for(i = path.length - 1; i >= 0; --i){
            const code = path.charCodeAt(i);
            if (code === 47) {
                if (!matchedSlash) {
                    start = i + 1;
                    break;
                }
            } else {
                if (firstNonSlashEnd === -1) {
                    matchedSlash = false;
                    firstNonSlashEnd = i + 1;
                }
                if (extIdx >= 0) {
                    if (code === ext.charCodeAt(extIdx)) {
                        if (--extIdx === -1) {
                            end = i;
                        }
                    } else {
                        extIdx = -1;
                        end = firstNonSlashEnd;
                    }
                }
            }
        }
        if (start === end) end = firstNonSlashEnd;
        else if (end === -1) end = path.length;
        return path.slice(start, end);
    } else {
        for(i = path.length - 1; i >= 0; --i){
            if (path.charCodeAt(i) === 47) {
                if (!matchedSlash) {
                    start = i + 1;
                    break;
                }
            } else if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
        }
        if (end === -1) return "";
        return path.slice(start, end);
    }
}
function extname1(path) {
    assertPath(path);
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let preDotState = 0;
    for(let i = path.length - 1; i >= 0; --i){
        const code = path.charCodeAt(i);
        if (code === 47) {
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i + 1;
        }
        if (code === 46) {
            if (startDot === -1) startDot = i;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        return "";
    }
    return path.slice(startDot, end);
}
function format1(pathObject) {
    if (pathObject === null || typeof pathObject !== "object") {
        throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
    }
    return _format("/", pathObject);
}
function parse1(path) {
    assertPath(path);
    const ret = {
        root: "",
        dir: "",
        base: "",
        ext: "",
        name: ""
    };
    if (path.length === 0) return ret;
    const isAbsolute2 = path.charCodeAt(0) === 47;
    let start;
    if (isAbsolute2) {
        ret.root = "/";
        start = 1;
    } else {
        start = 0;
    }
    let startDot = -1;
    let startPart = 0;
    let end = -1;
    let matchedSlash = true;
    let i = path.length - 1;
    let preDotState = 0;
    for(; i >= start; --i){
        const code = path.charCodeAt(i);
        if (code === 47) {
            if (!matchedSlash) {
                startPart = i + 1;
                break;
            }
            continue;
        }
        if (end === -1) {
            matchedSlash = false;
            end = i + 1;
        }
        if (code === 46) {
            if (startDot === -1) startDot = i;
            else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
            preDotState = -1;
        }
    }
    if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
        if (end !== -1) {
            if (startPart === 0 && isAbsolute2) {
                ret.base = ret.name = path.slice(1, end);
            } else {
                ret.base = ret.name = path.slice(startPart, end);
            }
        }
    } else {
        if (startPart === 0 && isAbsolute2) {
            ret.name = path.slice(1, startDot);
            ret.base = path.slice(1, end);
        } else {
            ret.name = path.slice(startPart, startDot);
            ret.base = path.slice(startPart, end);
        }
        ret.ext = path.slice(startDot, end);
    }
    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);
    else if (isAbsolute2) ret.dir = "/";
    return ret;
}
function fromFileUrl1(url) {
    url = url instanceof URL ? url : new URL(url);
    if (url.protocol != "file:") {
        throw new TypeError("Must be a file URL.");
    }
    return decodeURIComponent(url.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
}
function toFileUrl1(path) {
    if (!isAbsolute1(path)) {
        throw new TypeError("Must be an absolute path.");
    }
    const url = new URL("file:///");
    url.pathname = encodeWhitespace(path.replace(/%/g, "%25").replace(/\\/g, "%5C"));
    return url;
}
const mod2 = function() {
    return {
        sep: sep1,
        delimiter: delimiter1,
        resolve: resolve1,
        normalize: normalize1,
        isAbsolute: isAbsolute1,
        join: join1,
        relative: relative1,
        toNamespacedPath: toNamespacedPath1,
        dirname: dirname1,
        basename: basename1,
        extname: extname1,
        format: format1,
        parse: parse1,
        fromFileUrl: fromFileUrl1,
        toFileUrl: toFileUrl1
    };
}();
const path1 = isWindows ? mod1 : mod2;
const { basename: basename2 , delimiter: delimiter2 , dirname: dirname2 , extname: extname2 , format: format2 , fromFileUrl: fromFileUrl2 , isAbsolute: isAbsolute2 , join: join2 , normalize: normalize2 , parse: parse2 , relative: relative2 , resolve: resolve2 , sep: sep2 , toFileUrl: toFileUrl2 , toNamespacedPath: toNamespacedPath2 ,  } = path1;
function hasOwnProperty(obj, v) {
    if (obj == null) {
        return false;
    }
    return Object.prototype.hasOwnProperty.call(obj, v);
}
async function readShort(buf) {
    const high = await buf.readByte();
    if (high === null) return null;
    const low = await buf.readByte();
    if (low === null) throw new Deno.errors.UnexpectedEof();
    return high << 8 | low;
}
async function readInt(buf) {
    const high = await readShort(buf);
    if (high === null) return null;
    const low = await readShort(buf);
    if (low === null) throw new Deno.errors.UnexpectedEof();
    return high << 16 | low;
}
const MAX_SAFE_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);
async function readLong(buf) {
    const high = await readInt(buf);
    if (high === null) return null;
    const low = await readInt(buf);
    if (low === null) throw new Deno.errors.UnexpectedEof();
    const big = BigInt(high) << 32n | BigInt(low);
    if (big > MAX_SAFE_INTEGER) {
        throw new RangeError("Long value too big to be represented as a JavaScript number.");
    }
    return Number(big);
}
function sliceLongToBytes(d, dest = new Array(8)) {
    let big = BigInt(d);
    for(let i = 0; i < 8; i++){
        dest[7 - i] = Number(big & 255n);
        big >>= 8n;
    }
    return dest;
}
const data1 = decode("\
AGFzbQEAAAABnYGAgAAXYAAAYAABf2ABfwBgAX8Bf2ABfwF+YAJ/fwBgAn9/AX9gA39/fwBgA39/fw\
F/YAR/f39/AGAEf39/fwF/YAV/f39/fwBgBX9/f39/AX9gBn9/f39/fwBgBn9/f39/fwF/YAV/f39+\
fwBgB39/f35/f38Bf2AFf399f38AYAV/f3x/fwBgAn9+AGAEf31/fwBgBH98f38AYAJ+fwF/AtKFgI\
AADRhfX3diaW5kZ2VuX3BsYWNlaG9sZGVyX18aX193YmdfbmV3X2Y4NWRiZGZiOWNkYmUyZWMABhhf\
X3diaW5kZ2VuX3BsYWNlaG9sZGVyX18aX193YmluZGdlbl9vYmplY3RfZHJvcF9yZWYAAhhfX3diaW\
5kZ2VuX3BsYWNlaG9sZGVyX18hX193YmdfYnl0ZUxlbmd0aF9lMDUxNWJjOTRjZmM1ZGVlAAMYX193\
YmluZGdlbl9wbGFjZWhvbGRlcl9fIV9fd2JnX2J5dGVPZmZzZXRfNzdlZWM4NDcxNmEyZTczNwADGF\
9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXx1fX3diZ19idWZmZXJfMWM1OTE4YTRhYjY1NmZmNwADGF9f\
d2JpbmRnZW5fcGxhY2Vob2xkZXJfXzFfX3diZ19uZXd3aXRoYnl0ZW9mZnNldGFuZGxlbmd0aF9lNT\
dhZDFmMmNlODEyYzAzAAgYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fHV9fd2JnX2xlbmd0aF8yZDU2\
Y2IzNzA3NWZjZmIxAAMYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fEV9fd2JpbmRnZW5fbWVtb3J5AA\
EYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fHV9fd2JnX2J1ZmZlcl85ZTE4NGQ2Zjc4NWRlNWVkAAMY\
X193YmluZGdlbl9wbGFjZWhvbGRlcl9fGl9fd2JnX25ld19lODEwMTMxOWU0Y2Y5NWZjAAMYX193Ym\
luZGdlbl9wbGFjZWhvbGRlcl9fGl9fd2JnX3NldF9lOGFlN2IyNzMxNGU4Yjk4AAcYX193YmluZGdl\
bl9wbGFjZWhvbGRlcl9fEF9fd2JpbmRnZW5fdGhyb3cABRhfX3diaW5kZ2VuX3BsYWNlaG9sZGVyX1\
8SX193YmluZGdlbl9yZXRocm93AAID/YCAgAB8BwkJBwcTBQUHAwUDBw8FEAIFAgUCCAYFEwgMBQUO\
BQIFAggFFgcFBQUHBwUFBQUHBQUFBQUNBQUFBQUFBQUFCQUNCQkGCwYGBwcHBwcFAAUCCAoHCAIFBQ\
IIAw4MCwwLCxESCQIICAYDBgYHBQUFAAAGAwYAAAUCBAAFAgSFgICAAAFwARYWBYOAgIAAAQARBomA\
gIAAAX8BQYCAwAALB7aCgIAADgZtZW1vcnkCAAZkaWdlc3QAQhhfX3diZ19kaWdlc3Rjb250ZXh0X2\
ZyZWUAXRFkaWdlc3Rjb250ZXh0X25ldwBRFGRpZ2VzdGNvbnRleHRfdXBkYXRlAGMUZGlnZXN0Y29u\
dGV4dF9kaWdlc3QATxxkaWdlc3Rjb250ZXh0X2RpZ2VzdEFuZFJlc2V0AFAbZGlnZXN0Y29udGV4dF\
9kaWdlc3RBbmREcm9wAEwTZGlnZXN0Y29udGV4dF9yZXNldAAfE2RpZ2VzdGNvbnRleHRfY2xvbmUA\
GB9fX3diaW5kZ2VuX2FkZF90b19zdGFja19wb2ludGVyAH8RX193YmluZGdlbl9tYWxsb2MAZxJfX3\
diaW5kZ2VuX3JlYWxsb2MAcg9fX3diaW5kZ2VuX2ZyZWUAewmfgICAAAEAQQELFXd2gAGHAX5pTmpr\
aHNwbG1ub4gBVFOFAXQKpoSIgAB8kFoCAX8ifiMAQYABayIDJAAgA0EAQYABEGYhAyAAKQM4IQQgAC\
kDMCEFIAApAyghBiAAKQMgIQcgACkDGCEIIAApAxAhCSAAKQMIIQogACkDACELAkAgAkUNACABIAJB\
B3RqIQIDQCADIAEpAAAiDEI4hiAMQiiGQoCAgICAgMD/AIOEIAxCGIZCgICAgIDgP4MgDEIIhkKAgI\
CA8B+DhIQgDEIIiEKAgID4D4MgDEIYiEKAgPwHg4QgDEIoiEKA/gODIAxCOIiEhIQ3AwAgAyABQQhq\
KQAAIgxCOIYgDEIohkKAgICAgIDA/wCDhCAMQhiGQoCAgICA4D+DIAxCCIZCgICAgPAfg4SEIAxCCI\
hCgICA+A+DIAxCGIhCgID8B4OEIAxCKIhCgP4DgyAMQjiIhISENwMIIAMgAUEQaikAACIMQjiGIAxC\
KIZCgICAgICAwP8Ag4QgDEIYhkKAgICAgOA/gyAMQgiGQoCAgIDwH4OEhCAMQgiIQoCAgPgPgyAMQh\
iIQoCA/AeDhCAMQiiIQoD+A4MgDEI4iISEhDcDECADIAFBGGopAAAiDEI4hiAMQiiGQoCAgICAgMD/\
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\
CyABKAIEIQVBmAMQFiIBRQ0VIARBuBBqIAVBgAEQYRogBEG4EGpBuAFqIAVBuAFqKQMANwMAIARBuB\
BqQbABaiAFQbABaikDADcDACAEQbgQakGoAWogBUGoAWopAwA3AwAgBEG4EGpBoAFqIAVBoAFqKQMA\
NwMAIARBuBBqQZgBaiAFQZgBaikDADcDACAEQbgQakGQAWogBUGQAWopAwA3AwAgBEG4EGpBiAFqIA\
VBiAFqKQMANwMAIAQgBSkDgAE3A7gRIAUpA4gDIREgBSgCkAMhBiAFKQPAASESIARBEGogBEG4EGpB\
wAEQYRogASAEQRBqQcABEGEiByASNwPAASAHIAUpA8gBNwPIASAHQdABaiAFQdABaikDADcDACAHQd\
gBaiAFQdgBaikDADcDACAHQeABaiAFQeABaikDADcDACAHQegBaiAFQegBaikDADcDACAHQfABaiAF\
QfABaikDADcDACAHQfgBaiAFQfgBaikDADcDACAHQYACaiAFQYACaikDADcDACAHQYgCaiAFQYgCak\
GAARBhGiAHIAY2ApADIAcgETcDiANBACEFDC0LIAEoAgQhBUGYAxAWIgFFDRUgBEG4EGogBUGAARBh\
GiAEQbgQakG4AWogBUG4AWopAwA3AwAgBEG4EGpBsAFqIAVBsAFqKQMANwMAIARBuBBqQagBaiAFQa\
gBaikDADcDACAEQbgQakGgAWogBUGgAWopAwA3AwAgBEG4EGpBmAFqIAVBmAFqKQMANwMAIARBuBBq\
QZABaiAFQZABaikDADcDACAEQbgQakGIAWogBUGIAWopAwA3AwAgBCAFKQOAATcDuBEgBSkDiAMhES\
AFKAKQAyEGIAUpA8ABIRIgASAEQbgQakHAARBhIgcgEjcDwAEgByAFKQPIATcDyAEgB0HQAWogBUHQ\
AWopAwA3AwAgB0HYAWogBUHYAWopAwA3AwAgB0HgAWogBUHgAWopAwA3AwAgB0HoAWogBUHoAWopAw\
A3AwAgB0HwAWogBUHwAWopAwA3AwAgB0H4AWogBUH4AWopAwA3AwAgB0GAAmogBUGAAmopAwA3AwAg\
B0GIAmogBUGIAmpBgAEQYRogByAGNgKQAyAHIBE3A4gDQQEhBQwsCyABKAIEIQVBmAMQFiIBRQ0VIA\
RBuBBqIAVBgAEQYRogBEG4EGpBuAFqIAVBuAFqKQMANwMAIARBuBBqQbABaiAFQbABaikDADcDACAE\
QbgQakGoAWogBUGoAWopAwA3AwAgBEG4EGpBoAFqIAVBoAFqKQMANwMAIARBuBBqQZgBaiAFQZgBai\
kDADcDACAEQbgQakGQAWogBUGQAWopAwA3AwAgBEG4EGpBiAFqIAVBiAFqKQMANwMAIAQgBSkDgAE3\
A7gRIAUpA4gDIREgBSgCkAMhBiAFKQPAASESIAEgBEG4EGpBwAEQYSIHIBI3A8ABIAcgBSkDyAE3A8\
gBIAdB0AFqIAVB0AFqKQMANwMAIAdB2AFqIAVB2AFqKQMANwMAIAdB4AFqIAVB4AFqKQMANwMAIAdB\
6AFqIAVB6AFqKQMANwMAIAdB8AFqIAVB8AFqKQMANwMAIAdB+AFqIAVB+AFqKQMANwMAIAdBgAJqIA\
VBgAJqKQMANwMAIAdBiAJqIAVBiAJqQYABEGEaIAcgBjYCkAMgByARNwOIA0ECIQUMKwsgASgCBCEF\
QdgBEBYiAUUNFSABIAUpAwg3AwggASAFKQMANwMAIAUoAnAhByABQcgAaiAFQcgAaikDADcDACABQc\
AAaiAFQcAAaikDADcDACABQThqIAVBOGopAwA3AwAgAUEwaiAFQTBqKQMANwMAIAFBKGogBUEoaikD\
ADcDACABQSBqIAVBIGopAwA3AwAgAUEYaiAFQRhqKQMANwMAIAEgBSkDEDcDECABIAUpA1A3A1AgAU\
HYAGogBUHYAGopAwA3AwAgAUHgAGogBUHgAGopAwA3AwAgAUHoAGogBUHoAGopAwA3AwAgASAHNgJw\
IAFBjAFqIAVBjAFqKQIANwIAIAFBhAFqIAVBhAFqKQIANwIAIAFB/ABqIAVB/ABqKQIANwIAIAEgBS\
kCdDcCdCABQcwBaiAFQcwBaikCADcCACABQcQBaiAFQcQBaikCADcCACABQbwBaiAFQbwBaikCADcC\
ACABQbQBaiAFQbQBaikCADcCACABQawBaiAFQawBaikCADcCACABQaQBaiAFQaQBaikCADcCACABQZ\
wBaiAFQZwBaikCADcCACABIAUpApQBNwKUAUEDIQUMKgsgASgCBCEFQfgOEBYiAUUNFSAEQbgQakGI\
AWogBUGIAWopAwA3AwAgBEG4EGpBgAFqIAVBgAFqKQMANwMAIARBuBBqQfgAaiAFQfgAaikDADcDAC\
AEQbgQakEQaiAFQRBqKQMANwMAIARBuBBqQRhqIAVBGGopAwA3AwAgBEG4EGpBIGogBUEgaikDADcD\
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\
AwAiHDcDACAEQcgCakEwaiABQbABaiIQKQMAIh03AwAgBEHIAmpBOGogAUG4AWoiESkDACIeNwMAIA\
QgASkDgAEiHzcDyAIgBEGAAmpBOGoiAyAeNwMAIARBgAJqQTBqIhIgHTcDACAEQYACakEoaiITIBw3\
AwAgBEGAAmpBIGoiFCAbNwMAIARBgAJqQRhqIhUgGDcDACAEQYACakEQaiIWIBk3AwAgBEGAAmpBCG\
oiFyAaNwMAIAQgHzcDgAIgAiADKQMANwMAIAUgEikDADcDACAGIBMpAwA3AwAgByAUKQMANwMAIAgg\
FSkDADcDACAJIBYpAwA3AwAgCiAXKQMANwMAIAQgBCkDgAI3A8ABIAEgASkDiAM3A8ABIBEgASABQY\
gCaiICQYABEGEiA0GAAmopAwA3AwAgECADQfgBaikDADcDACAPIANB8AFqKQMANwMAIA4gA0HoAWop\
AwA3AwAgCyADQeABaikDADcDACAMIANB2AFqKQMANwMAIA0gA0HQAWopAwA3AwAgAyADKQPIATcDgA\
FBwAAQFiIBRQ0YIAEgBCkDwAE3AAAgAUE4aiAEQcABakE4aikDADcAACABQTBqIARBwAFqQTBqKQMA\
NwAAIAFBKGogBEHAAWpBKGopAwA3AAAgAUEgaiAEQcABakEgaikDADcAACABQRhqIARBwAFqQRhqKQ\
MANwAAIAFBEGogBEHAAWpBEGopAwA3AAAgAUEIaiAEQcABakEIaikDADcAACADIAMpA4gDNwPAASAD\
IAJBgAEQYRogA0GAAWoiAkE4aiADQcgBaiIDQThqKQMANwMAIAJBMGogA0EwaikDADcDACACQShqIA\
NBKGopAwA3AwAgAkEgaiADQSBqKQMANwMAIAJBGGogA0EYaikDADcDACACQRBqIANBEGopAwA3AwAg\
AkEIaiADQQhqKQMANwMAIAIgAykDADcDAEEAIQJBwAAhAwwwCyABKAIEIgIoApADIgNBAEgNFAJAAk\
AgAw0AQQEhAQwBCyADEBYiAUUNGSABQXxqLQAAQQNxRQ0AIAFBACADEGYaCwJAIAIoAsABQf8AcSIF\
RQ0AIAVBgAFGDQAgAiAFakEAQYABIAVrEGYaCyACQn8QEiAEQcgCakEYaiACQZgBaikDACIYNwMAIA\
RByAJqQRBqIAJBkAFqKQMAIhk3AwAgBEHIAmpBCGogAkGIAWopAwAiGjcDACAEQcgCakEgaiACQaAB\
aikDACIbNwMAIARByAJqQShqIAJBqAFqKQMAIhw3AwAgBEHIAmpBMGogAkGwAWopAwAiHTcDACAEQc\
gCakE4aiACQbgBaikDACIeNwMAIAQgAikDgAEiHzcDyAIgBEGAAmpBOGogHjcDACAEQYACakEwaiAd\
NwMAIARBgAJqQShqIBw3AwAgBEGAAmpBIGogGzcDACAEQYACakEYaiAYNwMAIARBgAJqQRBqIBk3Aw\
AgBEGAAmpBCGogGjcDACAEIB83A4ACIANBwQBPDRkgASAEQYACaiADEGEaIAIgAikDiAM3A8ABIAJB\
gAFqIgVBOGogAiACQYgCakGAARBhIgJBgAJqKQMANwMAIAVBMGogAkH4AWopAwA3AwAgBUEoaiACQf\
ABaikDADcDACAFQSBqIAJB6AFqKQMANwMAIAVBGGogAkHgAWopAwA3AwAgBUEQaiACQdgBaikDADcD\
ACAFQQhqIAJB0AFqKQMANwMAIAUgAikDyAE3AwBBACECDC8LIAEoAgQiAigCkAMiA0EASA0TAkACQC\
ADDQBBASEBDAELIAMQFiIBRQ0aIAFBfGotAABBA3FFDQAgAUEAIAMQZhoLAkAgAigCwAFB/wBxIgVF\
DQAgBUGAAUYNACACIAVqQQBBgAEgBWsQZhoLIAJCfxASIARByAJqQRhqIAJBmAFqKQMAIhg3AwAgBE\
HIAmpBEGogAkGQAWopAwAiGTcDACAEQcgCakEIaiACQYgBaikDACIaNwMAIARByAJqQSBqIAJBoAFq\
KQMAIhs3AwAgBEHIAmpBKGogAkGoAWopAwAiHDcDACAEQcgCakEwaiACQbABaikDACIdNwMAIARByA\
JqQThqIAJBuAFqKQMAIh43AwAgBCACKQOAASIfNwPIAiAEQYACakE4aiAeNwMAIARBgAJqQTBqIB03\
AwAgBEGAAmpBKGogHDcDACAEQYACakEgaiAbNwMAIARBgAJqQRhqIBg3AwAgBEGAAmpBEGogGTcDAC\
AEQYACakEIaiAaNwMAIAQgHzcDgAIgA0HBAE8NGiABIARBgAJqIAMQYRogAiACKQOIAzcDwAEgAkGA\
AWoiBUE4aiACIAJBiAJqQYABEGEiAkGAAmopAwA3AwAgBUEwaiACQfgBaikDADcDACAFQShqIAJB8A\
FqKQMANwMAIAVBIGogAkHoAWopAwA3AwAgBUEYaiACQeABaikDADcDACAFQRBqIAJB2AFqKQMANwMA\
IAVBCGogAkHQAWopAwA3AwAgBSACKQPIATcDAEEAIQIMLgsgASgCBCECIARBgAJqQRxqQgA3AgAgBE\
GAAmpBFGpCADcCACAEQYACakEMakIANwIAIARCADcChAIgBEEgNgKAAiAEQcgCakEYaiAEQYACakEY\
aiIDKQMANwMAIARByAJqQRBqIgUgBEGAAmpBEGopAwA3AwAgBEHIAmpBCGogBEGAAmpBCGopAwA3Aw\
AgBEHIAmpBIGogBEGAAmpBIGooAgA2AgAgBCAEKQOAAjcDyAIgBEHAAWpBEGoiBiAEQcgCakEUaikC\
ADcDACAEQcABakEIaiIHIARByAJqQQxqKQIANwMAIARBwAFqQRhqIgggBEHIAmpBHGopAgA3AwAgBC\
AEKQLMAjcDwAECQCACKAIAQT9xIgFFDQAgAUHAAEYNACACIAFqQRBqQQBBwAAgAWsQZhoLIAJBfxAU\
IAUgAkHgAGoiASkCACIYNwMAIAMgAkHoAGoiBSkCACIZNwMAIAcgAkHYAGoiAykCADcDACAGIBg3Aw\
AgCCAZNwMAIAQgAikCUCIYNwOAAiAEIBg3A8ABIAIgAikDCDcDACACIAIpApQBNwIQIAJBGGogAkGc\
AWopAgA3AgAgAkEgaiACQaQBaikCADcCACACQShqIAJBrAFqKQIANwIAIAJBMGogAkG0AWopAgA3Ag\
AgAkE4aiACQbwBaikCADcCACACQcAAaiACQcQBaikCADcCACACQcgAaiACQcwBaikCADcCACACIAIp\
AnQ3AlAgAyACQfwAaikCADcCACABIAJBhAFqKQIANwIAIAUgAkGMAWopAgA3AgBBIBAWIgFFDRogAS\
AEKQPAATcAACABQRhqIARBwAFqQRhqKQMANwAAIAFBEGogBEHAAWpBEGopAwA3AAAgAUEIaiAEQcAB\
akEIaikDADcAACACIAIpAwg3AwAgAkEQaiIFIAJBlAFqIgYpAgA3AgAgBUEIaiAGQQhqKQIANwIAIA\
VBEGogBkEQaikCADcCACAFQRhqIAZBGGopAgA3AgBBICEDIAVBIGogBkEgaikCADcCACAFQShqIAZB\
KGopAgA3AgAgBUEwaiAGQTBqKQIANwIAIAVBOGogBkE4aikCADcCACACQdAAaiIFIAJB9ABqIgIpAg\
A3AgAgBUEIaiACQQhqKQIANwIAIAVBEGogAkEQaikCADcCACAFQRhqIAJBGGopAgA3AgBBACECDC0L\
IANBAEgNESABKAIEIQUCQAJAIAMNAEEBIQEMAQsgAxAWIgFFDRsgAUF8ai0AAEEDcUUNACABQQAgAx\
BmGgsgBEHIAmogBRAgIAVCADcDACAFQSBqIAVBiAFqKQMANwMAIAVBGGogBUGAAWopAwA3AwAgBUEQ\
aiAFQfgAaikDADcDACAFIAUpA3A3AwhBACECIAVBKGpBAEHCABBmGgJAIAUoApABRQ0AIAVBADYCkA\
ELIARByAJqIAEgAxAZDCwLIAEoAgQhAUEcIQNBACECIARBgAJqQRxqQQA2AgAgBEGAAmpBFGpCADcC\
ACAEQYACakEMakIANwIAIARCADcChAIgBEEcNgKAAiAEQcgCakEQaiAEQYACakEQaikDADcDACAEQc\
gCakEIaiAEQYACakEIaikDADcDACAEQcgCakEYaiAEQYACakEYaikDADcDACAEQcABakEIaiIFIARB\
yAJqQQxqKQIANwMAIARBwAFqQRBqIgYgBEHIAmpBFGopAgA3AwAgBEHAAWpBGGoiByAEQcgCakEcai\
gCADYCACAEIAQpA4ACNwPIAiAEIAQpAswCNwPAASABIARBwAFqED4gAUEAQcwBEGYhCEEcEBYiAUUN\
GiABIAQpA8ABNwAAIAFBGGogBygCADYAACABQRBqIAYpAwA3AAAgAUEIaiAFKQMANwAAIAhBAEHMAR\
BmGgwrCyABKAIEIQEgBEGAAmpBHGpCADcCACAEQYACakEUakIANwIAIARBgAJqQQxqQgA3AgAgBEIA\
NwKEAkEgIQMgBEEgNgKAAiAEQcgCakEgaiAEQYACakEgaigCADYCACAEQcgCakEYaiAEQYACakEYai\
kDADcDACAEQcgCakEQaiAEQYACakEQaikDADcDACAEQcgCakEIaiAEQYACakEIaikDADcDACAEIAQp\
A4ACNwPIAiAEQcABakEYaiIFIARByAJqQRxqKQIANwMAIARBwAFqQRBqIgYgBEHIAmpBFGopAgA3Aw\
AgBEHAAWpBCGoiByAEQcgCakEMaikCADcDACAEIAQpAswCNwPAASABIARBwAFqED9BACECIAFBAEHM\
ARBmIQhBIBAWIgFFDRogASAEKQPAATcAACABQRhqIAUpAwA3AAAgAUEQaiAGKQMANwAAIAFBCGogBy\
kDADcAACAIQQBBzAEQZhoMKgsgASgCBCEBIARBgAJqQSxqQgA3AgAgBEGAAmpBJGpCADcCACAEQYAC\
akEcakIANwIAIARBgAJqQRRqQgA3AgAgBEGAAmpBDGpCADcCACAEQgA3AoQCQTAhAyAEQTA2AoACIA\
RByAJqQTBqIARBgAJqQTBqKAIANgIAIARByAJqQShqIARBgAJqQShqKQMANwMAIARByAJqQSBqIARB\
gAJqQSBqKQMANwMAIARByAJqQRhqIARBgAJqQRhqKQMANwMAIARByAJqQRBqIARBgAJqQRBqKQMANw\
MAIARByAJqQQhqIARBgAJqQQhqKQMANwMAIAQgBCkDgAI3A8gCIARBwAFqQShqIgUgBEHIAmpBLGop\
AgA3AwAgBEHAAWpBIGoiBiAEQcgCakEkaikCADcDACAEQcABakEYaiIHIARByAJqQRxqKQIANwMAIA\
RBwAFqQRBqIgggBEHIAmpBFGopAgA3AwAgBEHAAWpBCGoiCSAEQcgCakEMaikCADcDACAEIAQpAswC\
NwPAASABIARBwAFqEDpBACECIAFBAEHMARBmIQpBMBAWIgFFDRogASAEKQPAATcAACABQShqIAUpAw\
A3AAAgAUEgaiAGKQMANwAAIAFBGGogBykDADcAACABQRBqIAgpAwA3AAAgAUEIaiAJKQMANwAAIApB\
AEHMARBmGgwpCyABKAIEIQEgBEGAAmpBDGpCADcCACAEQYACakEUakIANwIAIARBgAJqQRxqQgA3Ag\
AgBEGAAmpBJGpCADcCACAEQYACakEsakIANwIAIARBgAJqQTRqQgA3AgAgBEGAAmpBPGpCADcCACAE\
QgA3AoQCQcAAIQMgBEHAADYCgAIgBEHIAmogBEGAAmpBxAAQYRogBEHAAWpBOGoiBSAEQcgCakE8ai\
kCADcDACAEQcABakEwaiIGIARByAJqQTRqKQIANwMAIARBwAFqQShqIgcgBEHIAmpBLGopAgA3AwAg\
BEHAAWpBIGoiCCAEQcgCakEkaikCADcDACAEQcABakEYaiIJIARByAJqQRxqKQIANwMAIARBwAFqQR\
BqIgogBEHIAmpBFGopAgA3AwAgBEHAAWpBCGoiCyAEQcgCakEMaikCADcDACAEIAQpAswCNwPAASAB\
IARBwAFqEDNBACECIAFBAEHMARBmIQxBwAAQFiIBRQ0aIAEgBCkDwAE3AAAgAUE4aiAFKQMANwAAIA\
FBMGogBikDADcAACABQShqIAcpAwA3AAAgAUEgaiAIKQMANwAAIAFBGGogCSkDADcAACABQRBqIAop\
AwA3AAAgAUEIaiALKQMANwAAIAxBAEHMARBmGgwoCyABKAIEIQUgBEGAAmpBDGpCADcCACAEQgA3Ao\
QCQRAhAyAEQRA2AoACIARByAJqQRBqIARBgAJqQRBqKAIANgIAIARByAJqQQhqIARBgAJqQQhqKQMA\
NwMAIARBwAFqQQhqIgYgBEHIAmpBDGopAgA3AwAgBCAEKQOAAjcDyAIgBCAEKQLMAjcDwAEgBSAEQc\
ABahA9QQAhAiAFQdQAakEAKQKAkUAiGDcCACAFQQApAviQQCIZNwJMIAVBADYCCCAFQgA3AwBBEBAW\
IgFFDRogASAEKQPAATcAACABQQhqIAYpAwA3AAAgBUIANwMAIAVBzABqIgZBCGogGDcCACAGIBk3Ag\
AgBUEANgIIDCcLIAEoAgQhBUEUIQNBACECIARBgAJqQRRqQQA2AgAgBEGAAmpBDGpCADcCACAEQgA3\
AoQCIARBFDYCgAIgBEHIAmpBEGogBEGAAmpBEGopAwA3AwAgBEHIAmpBCGogBEGAAmpBCGopAwA3Aw\
AgBEHAAWpBCGoiBiAEQcgCakEMaikCADcDACAEQcABakEQaiIHIARByAJqQRRqKAIANgIAIAQgBCkD\
gAI3A8gCIAQgBCkCzAI3A8ABIAUgBEHAAWoQOSAFQgA3AwAgBUEANgIcIAVBACkCiJFAIhg3AgggBU\
EQakEAKQKQkUAiGTcCACAFQRhqQQAoApiRQCIINgIAQRQQFiIBRQ0aIAEgBCkDwAE3AAAgAUEQaiAH\
KAIANgAAIAFBCGogBikDADcAACAFQgA3AwAgBUEANgIcIAVBCGoiBSAYNwIAIAVBCGogGTcCACAFQR\
BqIAg2AgAMJgsgASgCBCEFQRQhA0EAIQIgBEGAAmpBFGpBADYCACAEQYACakEMakIANwIAIARCADcC\
hAIgBEEUNgKAAiAEQcgCakEQaiAEQYACakEQaikDADcDACAEQcgCakEIaiAEQYACakEIaikDADcDAC\
AEQcABakEIaiIGIARByAJqQQxqKQIANwMAIARBwAFqQRBqIgcgBEHIAmpBFGooAgA2AgAgBCAEKQOA\
AjcDyAIgBCAEKQLMAjcDwAEgBSAEQcABahApIAVBADYCHCAFQRhqQQAoApiRQCIINgIAIAVBEGpBAC\
kCkJFAIhg3AgAgBUEAKQKIkUAiGTcCCCAFQgA3AwBBFBAWIgFFDRogASAEKQPAATcAACABQRBqIAco\
AgA2AAAgAUEIaiAGKQMANwAAIAVBCGoiBkEQaiAINgIAIAZBCGogGDcCACAGIBk3AgAgBUEANgIcIA\
VCADcDAAwlCyABKAIEIQFBHCEDQQAhAiAEQYACakEcakEANgIAIARBgAJqQRRqQgA3AgAgBEGAAmpB\
DGpCADcCACAEQgA3AoQCIARBHDYCgAIgBEHIAmpBEGogBEGAAmpBEGopAwA3AwAgBEHIAmpBCGogBE\
GAAmpBCGopAwA3AwAgBEHIAmpBGGogBEGAAmpBGGopAwA3AwAgBEHAAWpBCGoiBSAEQcgCakEMaikC\
ADcDACAEQcABakEQaiIGIARByAJqQRRqKQIANwMAIARBwAFqQRhqIgcgBEHIAmpBHGooAgA2AgAgBC\
AEKQOAAjcDyAIgBCAEKQLMAjcDwAEgASAEQcABahBAIAFBAEHMARBmIQhBHBAWIgFFDRogASAEKQPA\
ATcAACABQRhqIAcoAgA2AAAgAUEQaiAGKQMANwAAIAFBCGogBSkDADcAACAIQQBBzAEQZhoMJAsgAS\
gCBCEBIARBgAJqQRxqQgA3AgAgBEGAAmpBFGpCADcCACAEQYACakEMakIANwIAIARCADcChAJBICED\
IARBIDYCgAIgBEHIAmpBIGogBEGAAmpBIGooAgA2AgAgBEHIAmpBGGogBEGAAmpBGGopAwA3AwAgBE\
HIAmpBEGogBEGAAmpBEGopAwA3AwAgBEHIAmpBCGogBEGAAmpBCGopAwA3AwAgBCAEKQOAAjcDyAIg\
BEHAAWpBGGoiBSAEQcgCakEcaikCADcDACAEQcABakEQaiIGIARByAJqQRRqKQIANwMAIARBwAFqQQ\
hqIgcgBEHIAmpBDGopAgA3AwAgBCAEKQLMAjcDwAEgASAEQcABahBBQQAhAiABQQBBzAEQZiEIQSAQ\
FiIBRQ0aIAEgBCkDwAE3AAAgAUEYaiAFKQMANwAAIAFBEGogBikDADcAACABQQhqIAcpAwA3AAAgCE\
EAQcwBEGYaDCMLIAEoAgQhASAEQYACakEsakIANwIAIARBgAJqQSRqQgA3AgAgBEGAAmpBHGpCADcC\
ACAEQYACakEUakIANwIAIARBgAJqQQxqQgA3AgAgBEIANwKEAkEwIQMgBEEwNgKAAiAEQcgCakEwai\
AEQYACakEwaigCADYCACAEQcgCakEoaiAEQYACakEoaikDADcDACAEQcgCakEgaiAEQYACakEgaikD\
ADcDACAEQcgCakEYaiAEQYACakEYaikDADcDACAEQcgCakEQaiAEQYACakEQaikDADcDACAEQcgCak\
EIaiAEQYACakEIaikDADcDACAEIAQpA4ACNwPIAiAEQcABakEoaiIFIARByAJqQSxqKQIANwMAIARB\
wAFqQSBqIgYgBEHIAmpBJGopAgA3AwAgBEHAAWpBGGoiByAEQcgCakEcaikCADcDACAEQcABakEQai\
IIIARByAJqQRRqKQIANwMAIARBwAFqQQhqIgkgBEHIAmpBDGopAgA3AwAgBCAEKQLMAjcDwAEgASAE\
QcABahA7QQAhAiABQQBBzAEQZiEKQTAQFiIBRQ0aIAEgBCkDwAE3AAAgAUEoaiAFKQMANwAAIAFBIG\
ogBikDADcAACABQRhqIAcpAwA3AAAgAUEQaiAIKQMANwAAIAFBCGogCSkDADcAACAKQQBBzAEQZhoM\
IgsgASgCBCEBIARBgAJqQQxqQgA3AgAgBEGAAmpBFGpCADcCACAEQYACakEcakIANwIAIARBgAJqQS\
RqQgA3AgAgBEGAAmpBLGpCADcCACAEQYACakE0akIANwIAIARBgAJqQTxqQgA3AgAgBEIANwKEAkHA\
ACEDIARBwAA2AoACIARByAJqIARBgAJqQcQAEGEaIARBwAFqQThqIgUgBEHIAmpBPGopAgA3AwAgBE\
HAAWpBMGoiBiAEQcgCakE0aikCADcDACAEQcABakEoaiIHIARByAJqQSxqKQIANwMAIARBwAFqQSBq\
IgggBEHIAmpBJGopAgA3AwAgBEHAAWpBGGoiCSAEQcgCakEcaikCADcDACAEQcABakEQaiIKIARByA\
JqQRRqKQIANwMAIARBwAFqQQhqIgsgBEHIAmpBDGopAgA3AwAgBCAEKQLMAjcDwAEgASAEQcABahA0\
QQAhAiABQQBBzAEQZiEMQcAAEBYiAUUNGiABIAQpA8ABNwAAIAFBOGogBSkDADcAACABQTBqIAYpAw\
A3AAAgAUEoaiAHKQMANwAAIAFBIGogCCkDADcAACABQRhqIAkpAwA3AAAgAUEQaiAKKQMANwAAIAFB\
CGogCykDADcAACAMQQBBzAEQZhoMIQsgASgCBCEFQRwhA0EAIQIgBEGAAmpBHGpBADYCACAEQYACak\
EUakIANwIAIARBgAJqQQxqQgA3AgAgBEIANwKEAiAEQRw2AoACIARByAJqQRBqIARBgAJqQRBqKQMA\
NwMAIARByAJqQQhqIARBgAJqQQhqKQMANwMAIARByAJqQRhqIARBgAJqQRhqKQMANwMAIARBwAFqQQ\
hqIgYgBEHIAmpBDGopAgA3AwAgBEHAAWpBEGoiByAEQcgCakEUaikCADcDACAEQcABakEYaiIIIARB\
yAJqQRxqKAIANgIAIAQgBCkDgAI3A8gCIAQgBCkCzAI3A8ABIAUgBEHAAWoQMCAFQgA3AwAgBUEANg\
IIIAVBACkCnJFAIhg3AkwgBUHUAGpBACkCpJFAIhk3AgAgBUHcAGpBACkCrJFAIho3AgAgBUHkAGpB\
ACkCtJFAIhs3AgBBHBAWIgFFDRogASAEKQPAATcAACABQRhqIAgoAgA2AAAgAUEQaiAHKQMANwAAIA\
FBCGogBikDADcAACAFQgA3AwAgBUEANgIIIAVBzABqIgUgGDcCACAFQQhqIBk3AgAgBUEQaiAaNwIA\
IAVBGGogGzcCAAwgCyABKAIEIQUgBEGAAmpBHGpCADcCACAEQYACakEUakIANwIAIARBgAJqQQxqQg\
A3AgAgBEIANwKEAkEgIQMgBEEgNgKAAiAEQcgCakEgaiAEQYACakEgaigCADYCACAEQcgCakEYaiAE\
QYACakEYaikDADcDACAEQcgCakEQaiAEQYACakEQaikDADcDACAEQcgCakEIaiAEQYACakEIaikDAD\
cDACAEIAQpA4ACNwPIAiAEQcABakEYaiIGIARByAJqQRxqKQIANwMAIARBwAFqQRBqIgcgBEHIAmpB\
FGopAgA3AwAgBEHAAWpBCGoiCCAEQcgCakEMaikCADcDACAEIAQpAswCNwPAASAFIARBwAFqEC0gBU\
IANwMAQQAhAiAFQQA2AgggBUEAKQK8kUAiGDcCTCAFQdQAakEAKQLEkUAiGTcCACAFQdwAakEAKQLM\
kUAiGjcCACAFQeQAakEAKQLUkUAiGzcCAEEgEBYiAUUNGiABIAQpA8ABNwAAIAFBGGogBikDADcAAC\
ABQRBqIAcpAwA3AAAgAUEIaiAIKQMANwAAIAVCADcDACAFQQA2AgggBUHMAGoiBSAYNwIAIAVBCGog\
GTcCACAFQRBqIBo3AgAgBUEYaiAbNwIADB8LIAEoAgQhBSAEQYACakEsakIANwIAIARBgAJqQSRqQg\
A3AgAgBEGAAmpBHGpCADcCACAEQYACakEUakIANwIAIARBgAJqQQxqQgA3AgAgBEIANwKEAkEwIQMg\
BEEwNgKAAiAEQcgCakEwaiAEQYACakEwaigCADYCACAEQcgCakEoaiAEQYACakEoaikDADcDACAEQc\
gCakEgaiAEQYACakEgaikDADcDACAEQcgCakEYaiAEQYACakEYaikDADcDACAEQcgCakEQaiAEQYAC\
akEQaikDADcDACAEQcgCakEIaiAEQYACakEIaikDADcDACAEIAQpA4ACNwPIAiAEQcABakEoaiIGIA\
RByAJqQSxqKQIANwMAIARBwAFqQSBqIgcgBEHIAmpBJGopAgA3AwAgBEHAAWpBGGoiCCAEQcgCakEc\
aikCADcDACAEQcABakEQaiIJIARByAJqQRRqKQIANwMAIARBwAFqQQhqIgogBEHIAmpBDGopAgA3Aw\
AgBCAEKQLMAjcDwAEgBSAEQcABahAoIAVCADcDCCAFQgA3AwBBACECIAVBADYCUCAFQQApA+CRQCIY\
NwMQIAVBGGpBACkD6JFAIhk3AwAgBUEgakEAKQPwkUAiGjcDACAFQShqQQApA/iRQCIbNwMAIAVBMG\
pBACkDgJJAIhw3AwAgBUE4akEAKQOIkkAiHTcDACAFQcAAakEAKQOQkkAiHjcDACAFQcgAakEAKQOY\
kkAiHzcDAEEwEBYiAUUNGiABIAQpA8ABNwAAIAFBKGogBikDADcAACABQSBqIAcpAwA3AAAgAUEYai\
AIKQMANwAAIAFBEGogCSkDADcAACABQQhqIAopAwA3AAAgBUIANwMIIAVCADcDACAFQQA2AlAgBUEQ\
aiIFIBg3AwAgBUEIaiAZNwMAIAVBEGogGjcDACAFQRhqIBs3AwAgBUEgaiAcNwMAIAVBKGogHTcDAC\
AFQTBqIB43AwAgBUE4aiAfNwMADB4LIAEoAgQhBSAEQYACakEMakIANwIAIARBgAJqQRRqQgA3AgAg\
BEGAAmpBHGpCADcCACAEQYACakEkakIANwIAIARBgAJqQSxqQgA3AgAgBEGAAmpBNGpCADcCACAEQY\
ACakE8akIANwIAIARCADcChAJBwAAhAyAEQcAANgKAAiAEQcgCaiAEQYACakHEABBhGiAEQcABakE4\
aiIGIARByAJqQTxqKQIANwMAIARBwAFqQTBqIgcgBEHIAmpBNGopAgA3AwAgBEHAAWpBKGoiCCAEQc\
gCakEsaikCADcDACAEQcABakEgaiIJIARByAJqQSRqKQIANwMAIARBwAFqQRhqIgogBEHIAmpBHGop\
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\
ICBzcSATcyALaiAcQR53IBxBE3dzIBxBCndzaiAbIB9BDncgH0EZd3MgH0EDdnNqIBFqICRBD3cgJE\
ENd3MgJEEKdnNqIB5qICIgJWoiGyACICFzcSAhc2ogG0EadyAbQRV3cyAbQQd3c2pB8vHFs3xqIh5q\
IQsgHCAKaiEKICMgCWohCSAgIAhqIQggHSAHaiAeaiEHIBsgBmohBiACIAVqIQUgISAEaiEEIAFBwA\
BqIgEgDEcNAAsLIAAgBDYCHCAAIAU2AhggACAGNgIUIAAgBzYCECAAIAg2AgwgACAJNgIIIAAgCjYC\
BCAAIAs2AgALgEECGn8CfiMAQbACayIDJAACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQA\
JAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAC\
QAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIA\
AoAgAOFhUAAQIDBAUGBwgJCgsMDQ4PEBESExQVCyAAKAIEIAEgAhA8DBULIAAoAgQgASACEDwMFAsg\
ACgCBCIEKQMAIh2nQT9xIQACQAJAIB1QDQAgAEUNAQsgBCAAakEQaiABIAJBwAAgAGsiACAAIAJLGy\
IAEGEaIB0gAK18Ih4gHVQNFSAEIB43AwAgAiAAayECIAEgAGohAQsCQCACQcAASQ0AIARBEGohAANA\
IARBABAUIABBOGogAUE4aikAADcAACAAQTBqIAFBMGopAAA3AAAgAEEoaiABQShqKQAANwAAIABBIG\
ogAUEgaikAADcAACAAQRhqIAFBGGopAAA3AAAgAEEQaiABQRBqKQAANwAAIABBCGogAUEIaikAADcA\
ACAAIAEpAAA3AAAgBCkDACIdQsAAfCIeIB1UDRcgBCAeNwMAIAFBwABqIQEgAkFAaiICQcAATw0ACw\
sgAkUNEyAEQQAQFCAEQRBqIAEgAhBhGiAEKQMAIh0gAq18Ih4gHVQNFiAEIB43AwAMEwsCQCAAKAIE\
IgVB6QBqLQAAQQZ0IAUtAGhqIgBFDQAgBSABIAJBgAggAGsiACAAIAJLGyIEEC8aIAIgBGsiAkUNEy\
ADQfgAakEQaiAFQRBqIgApAwA3AwAgA0H4AGpBGGogBUEYaiIGKQMANwMAIANB+ABqQSBqIAVBIGoi\
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\
IgQgAksNACAADQEgASEHDAILIAAgAmoiBCAASQ0kIARB6ABLDSUgBkHIAWogAGpBBGogASACEGEaIA\
YgBigCyAEgAmo2AsgBDBELIABB6QBPDSUgAiAEayECIAEgBGohByAGIABqQcwBaiABIAQQYRpBACEA\
A0AgBiAAaiIEIAQtAAAgBEHMAWotAABzOgAAIABBAWoiAEHoAEcNAAsgBhAhCyAHIAIgAkHoAHAiBW\
siAWohCAJAIAFB6ABJDQADQCAHQegAaiECIAFBmH9qIQFBACEAA0AgBiAAaiIEIAQtAAAgByAAai0A\
AHM6AAAgAEEBaiIAQegARw0ACyAGECEgAiEHIAFB6ABPDQALCyAGQcwBaiAIIAUQYRogBiAFNgLIAQ\
wPCwJAAkACQEHIACAAKAIEIgYoAsgBIgBrIgQgAksNACAADQEgASEHDAILIAAgAmoiBCAASQ0mIARB\
yABLDScgBkHIAWogAGpBBGogASACEGEaIAYgBigCyAEgAmo2AsgBDBALIABByQBPDScgAiAEayECIA\
EgBGohByAGIABqQcwBaiABIAQQYRpBACEAA0AgBiAAaiIEIAQtAAAgBEHMAWotAABzOgAAIABBAWoi\
AEHIAEcNAAsgBhAhCyAHIAIgAkHIAHAiBWsiAWohCAJAIAFByABJDQADQCAHQcgAaiECIAFBuH9qIQ\
FBACEAA0AgBiAAaiIEIAQtAAAgByAAai0AAHM6AAAgAEEBaiIAQcgARw0ACyAGECEgAiEHIAFByABP\
DQALCyAGQcwBaiAIIAUQYRogBiAFNgLIAQwOCyAAKAIEIgYgBikDACACrXw3AwACQEHAACAGKAIIIg\
BrIgcgAksNACAGQcwAaiEEAkAgAEUNACAAQcEATw0qIAZBDGoiBSAAaiABIAcQYRogBCAFEBsgAiAH\
ayECIAEgB2ohAQsgAkE/cSEHIAEgAkFAcSIAaiECAkAgAEUNAEEAIABrIQADQCAEIAEQGyABQcAAai\
EBIABBwABqIgANAAsLIAZBDGogAiAHEGEaIAYgBzYCCAwOCyAAIAJqIgQgAEkNJiAEQcAASw0nIAZB\
CGogAGpBBGogASACEGEaIAYgBigCCCACajYCCAwNCyAAKAIEIgYgBikDACACrXw3AwACQEHAACAGKA\
IcIgBrIgcgAksNACAGQQhqIQQCQCAARQ0AIABBwQBPDSwgBkEgaiIFIABqIAEgBxBhGiAEIAUQEyAC\
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\
IhhBGHQgGEEIdEGAgPwHcXIgGEEIdkGA/gNxIBhBGHZyciIYNgI8IAggEyAKcyAYcyAMIBBzIBVzIB\
EgDnMgE3MgF3NBAXciGXNBAXciGnNBAXciGyAKIBJzIAJzIBAgD3MgFHMgGHNBAXciHHNBAXciHXMg\
GCACcyAdcyAVIBRzIBxzIBtzQQF3Ih5zQQF3Ih9zIBogHHMgHnMgGSAYcyAbcyAXIBVzIBpzIBYgE3\
MgGXMgCyAMcyAXcyASIBFzIBZzIA8gDXMgC3MgAnNBAXciIHNBAXciIXNBAXciInNBAXciI3NBAXci\
JHNBAXciJXNBAXciJnNBAXciJyAdICFzIAIgFnMgIXMgFCALcyAgcyAdc0EBdyIoc0EBdyIpcyAcIC\
BzIChzIB9zQQF3IipzQQF3IitzIB8gKXMgK3MgHiAocyAqcyAnc0EBdyIsc0EBdyItcyAmICpzICxz\
ICUgH3MgJ3MgJCAecyAmcyAjIBtzICVzICIgGnMgJHMgISAZcyAjcyAgIBdzICJzIClzQQF3Ii5zQQ\
F3Ii9zQQF3IjBzQQF3IjFzQQF3IjJzQQF3IjNzQQF3IjRzQQF3IjUgKyAvcyApICNzIC9zICggInMg\
LnMgK3NBAXciNnNBAXciN3MgKiAucyA2cyAtc0EBdyI4c0EBdyI5cyAtIDdzIDlzICwgNnMgOHMgNX\
NBAXciOnNBAXciO3MgNCA4cyA6cyAzIC1zIDVzIDIgLHMgNHMgMSAncyAzcyAwICZzIDJzIC8gJXMg\
MXMgLiAkcyAwcyA3c0EBdyI8c0EBdyI9c0EBdyI+c0EBdyI/c0EBdyJAc0EBdyJBc0EBdyJCc0EBdy\
JDIDkgPXMgNyAxcyA9cyA2IDBzIDxzIDlzQQF3IkRzQQF3IkVzIDggPHMgRHMgO3NBAXciRnNBAXci\
R3MgOyBFcyBHcyA6IERzIEZzIENzQQF3IkhzQQF3IklzIEIgRnMgSHMgQSA7cyBDcyBAIDpzIEJzID\
8gNXMgQXMgPiA0cyBAcyA9IDNzID9zIDwgMnMgPnMgRXNBAXciSnNBAXciS3NBAXciTHNBAXciTXNB\
AXciTnNBAXciT3NBAXciUHNBAXdqIEYgSnMgRCA+cyBKcyBHc0EBdyJRcyBJc0EBdyJSIEUgP3MgS3\
MgUXNBAXciUyBMIEEgOiA5IDwgMSAmIB8gKCAhIBcgEyAQIAhBHnciVGogDiAFIAdBHnciECAGcyAI\
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\
QQN0QfSawABqIQFBACgChJ5AIQACQAJAQQAoAuyaQCIHQQEgBkEfcXQiBnFFDQAgASgCCCEGDAELQQ\
AgByAGcjYC7JpAIAEhBgsgASAANgIIIAYgADYCDCAAIAE2AgwgACAGNgIIC0EAIAU2AoSeQEEAIAI2\
AvydQCAIDwsgBygCCCIAIAE2AgwgASAANgIIDAMLIAEgB0EQaiAGGyEGA0AgBiEIAkAgACIBQRRqIg\
YoAgAiAA0AIAFBEGohBiABKAIQIQALIAANAAsgCEEANgIADAILAkACQAJAAkACQAJAAkACQAJAAkAC\
QAJAAkBBACgC/J1AIgAgAk8NAEEAKAKAnkAiACACSw0EQQAhASACQa+ABGoiBUEQdkAAIgBBf0YiBw\
0NIABBEHQiBkUNDUEAQQAoAoyeQEEAIAVBgIB8cSAHGyIIaiIANgKMnkBBAEEAKAKQnkAiASAAIAEg\
AEsbNgKQnkBBACgCiJ5AIgFFDQFBlJ7AACEAA0AgACgCACIFIAAoAgQiB2ogBkYNAyAAKAIIIgANAA\
wECwtBACgChJ5AIQECQAJAIAAgAmsiBUEPSw0AQQBBADYChJ5AQQBBADYC/J1AIAEgAEEDcjYCBCAB\
IABqIgAgACgCBEEBcjYCBAwBC0EAIAU2AvydQEEAIAEgAmoiBjYChJ5AIAYgBUEBcjYCBCABIABqIA\
U2AgAgASACQQNyNgIECyABQQhqDwsCQAJAQQAoAqieQCIARQ0AIAAgBk0NAQtBACAGNgKonkALQQBB\
/x82AqyeQEEAIAg2ApieQEEAIAY2ApSeQEEAQfSawAA2AoCbQEEAQfyawAA2AoibQEEAQfSawAA2Av\
yaQEEAQYSbwAA2ApCbQEEAQfyawAA2AoSbQEEAQYybwAA2ApibQEEAQYSbwAA2AoybQEEAQZSbwAA2\
AqCbQEEAQYybwAA2ApSbQEEAQZybwAA2AqibQEEAQZSbwAA2ApybQEEAQaSbwAA2ArCbQEEAQZybwA\
A2AqSbQEEAQaybwAA2AribQEEAQaSbwAA2AqybQEEAQQA2AqCeQEEAQbSbwAA2AsCbQEEAQaybwAA2\
ArSbQEEAQbSbwAA2ArybQEEAQbybwAA2AsibQEEAQbybwAA2AsSbQEEAQcSbwAA2AtCbQEEAQcSbwA\
A2AsybQEEAQcybwAA2AtibQEEAQcybwAA2AtSbQEEAQdSbwAA2AuCbQEEAQdSbwAA2AtybQEEAQdyb\
wAA2AuibQEEAQdybwAA2AuSbQEEAQeSbwAA2AvCbQEEAQeSbwAA2AuybQEEAQeybwAA2AvibQEEAQe\
ybwAA2AvSbQEEAQfSbwAA2AoCcQEEAQfybwAA2AoicQEEAQfSbwAA2AvybQEEAQYScwAA2ApCcQEEA\
QfybwAA2AoScQEEAQYycwAA2ApicQEEAQYScwAA2AoycQEEAQZScwAA2AqCcQEEAQYycwAA2ApScQE\
EAQZycwAA2AqicQEEAQZScwAA2ApycQEEAQaScwAA2ArCcQEEAQZycwAA2AqScQEEAQaycwAA2Aric\
QEEAQaScwAA2AqycQEEAQbScwAA2AsCcQEEAQaycwAA2ArScQEEAQbycwAA2AsicQEEAQbScwAA2Ar\
ycQEEAQcScwAA2AtCcQEEAQbycwAA2AsScQEEAQcycwAA2AticQEEAQcScwAA2AsycQEEAQdScwAA2\
AuCcQEEAQcycwAA2AtScQEEAQdycwAA2AuicQEEAQdScwAA2AtycQEEAQeScwAA2AvCcQEEAQdycwA\
A2AuScQEEAQeycwAA2AvicQEEAQeScwAA2AuycQEEAIAY2AoieQEEAQeycwAA2AvScQEEAIAhBWGoi\
ADYCgJ5AIAYgAEEBcjYCBCAGIABqQSg2AgRBAEGAgIABNgKknkAMCgsgACgCDA0AIAUgAUsNACAGIA\
FLDQILQQBBACgCqJ5AIgAgBiAAIAZJGzYCqJ5AIAYgCGohBUGUnsAAIQACQAJAAkADQCAAKAIAIAVG\
DQEgACgCCCIADQAMAgsLIAAoAgxFDQELQZSewAAhAAJAA0ACQCAAKAIAIgUgAUsNACAFIAAoAgRqIg\
UgAUsNAgsgACgCCCIADQALAAtBACAGNgKInkBBACAIQVhqIgA2AoCeQCAGIABBAXI2AgQgBiAAakEo\
NgIEQQBBgICAATYCpJ5AIAEgBUFgakF4cUF4aiIAIAAgAUEQakkbIgdBGzYCBEEAKQKUnkAhCiAHQR\
BqQQApApyeQDcCACAHIAo3AghBACAINgKYnkBBACAGNgKUnkBBACAHQQhqNgKcnkBBAEEANgKgnkAg\
B0EcaiEAA0AgAEEHNgIAIAUgAEEEaiIASw0ACyAHIAFGDQkgByAHKAIEQX5xNgIEIAEgByABayIGQQ\
FyNgIEIAcgBjYCAAJAIAZBgAJJDQBBHyEAAkAgBkH///8HSw0AIAZBBiAGQQh2ZyIAa0EfcXZBAXEg\
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\
yLmE6wA3A3AgBEIANwMAIARByABqQgA3AwAgBEHAAGpCADcDACAEQThqQgA3AwAgBEEwakIANwMAIA\
RBKGpCADcDACAEQSBqQgA3AwAgBEEYakIANwMAIARBzAFqQgA3AgAgBEIANwMIIARBxAFqQgA3AgAg\
BEG8AWpCADcCACAEQbQBakIANwIAIARBrAFqQgA3AgAgBEGkAWpCADcCACAEQZwBakIANwIAIARCAD\
cClAFBAyEFDCALAkACQAJAAkAgA0GqgMAAQQoQXkUNACADQbSAwABBChBeRQ0BIANBvoDAAEEKEF5F\
DQIgA0HIgMAAQQoQXkUNAyADQdWAwABBChBeDQxB4AAQFiIERQ0VIAJBDGpCADcCACACQRRqQgA3Ag\
AgAkEcakIANwIAIAJBJGpCADcCACACQSxqQgA3AgAgAkE0akIANwIAIAJBPGpCADcCACACQgA3AgQg\
AkHAADYCACACQZgDaiACQcQAEGEaIAJBuAZqQThqIgUgAkGYA2pBPGopAgA3AwAgAkG4BmpBMGoiBi\
ACQZgDakE0aikCADcDACACQbgGakEoaiIHIAJBmANqQSxqKQIANwMAIAJB2AZqIgggAkGYA2pBJGop\
AgA3AwAgAkG4BmpBGGoiCSACQZgDakEcaikCADcDACACQbgGakEQaiIKIAJBmANqQRRqKQIANwMAIA\
JBwAZqIgsgAkGYA2pBDGopAgA3AwAgAiACKQKcAzcDuAYgBEEYakEAKAKYkUA2AgAgBEEQakEAKQKQ\
kUA3AgAgBEEAKQKIkUA3AgggBEEANgIcIARCADcDACAEIAIpA7gGNwIgIARBKGogCykDADcCACAEQT\
BqIAopAwA3AgAgBEE4aiAJKQMANwIAIARBwABqIAgpAwA3AgAgBEHIAGogBykDADcCACAEQdAAaiAG\
KQMANwIAIARB2ABqIAUpAwA3AgBBCiEFDCMLQeACEBYiBEUNDyAEQQBByAEQZiEFIAJBADYCACACQQ\
RyQQBBkAEQZhogAkGQATYCACACQZgDaiACQZQBEGEaIAJBuAZqIAJBmANqQQRyQZABEGEaIAVBADYC\
yAEgBUHMAWogAkG4BmpBkAEQYRpBBSEFDCILQdgCEBYiBEUNDyAEQQBByAEQZiEFIAJBADYCACACQQ\
RyQQBBiAEQZhogAkGIATYCACACQZgDaiACQYwBEGEaIAJBuAZqIAJBmANqQQRyQYgBEGEaIAVBADYC\
yAEgBUHMAWogAkG4BmpBiAEQYRpBBiEFDCELQbgCEBYiBEUNDyAEQQBByAEQZiEFIAJBADYCACACQQ\
RyQQBB6AAQZhogAkHoADYCACACQZgDaiACQewAEGEaIAJBuAZqIAJBmANqQQRyQegAEGEaIAVBADYC\
yAEgBUHMAWogAkG4BmpB6AAQYRpBByEFDCALQZgCEBYiBEUNDyAEQQBByAEQZiEFIAJBADYCACACQQ\
RyQQBByAAQZhogAkHIADYCACACQZgDaiACQcwAEGEaIAJBuAZqIAJBmANqQQRyQcgAEGEaIAVBADYC\
yAEgBUHMAWogAkG4BmpByAAQYRpBCCEFDB8LIANB0oDAAEEDEF4NB0HgABAWIgRFDQ8gAkEMakIANw\
IAIAJBFGpCADcCACACQRxqQgA3AgAgAkEkakIANwIAIAJBLGpCADcCACACQTRqQgA3AgAgAkE8akIA\
NwIAIAJCADcCBCACQcAANgIAIAJBmANqIAJBxAAQYRogAkHwBmoiBSACQZgDakE8aikCADcDACACQe\
gGaiIGIAJBmANqQTRqKQIANwMAIAJB4AZqIgcgAkGYA2pBLGopAgA3AwAgAkHYBmoiCCACQZgDakEk\
aikCADcDACACQdAGaiIJIAJBmANqQRxqKQIANwMAIAJByAZqIgogAkGYA2pBFGopAgA3AwAgAkHABm\
oiCyACQZgDakEMaikCADcDACACIAIpApwDNwO4BiAEQQA2AgggBEIANwMAIAQgAikDuAY3AgwgBEEU\
aiALKQMANwIAIARBHGogCikDADcCACAEQSRqIAkpAwA3AgAgBEEsaiAIKQMANwIAIARBNGogBykDAD\
cCACAEQTxqIAYpAwA3AgAgBEHEAGogBSkDADcCACAEQQApAviQQDcCTCAEQdQAakEAKQKAkUA3AgBB\
CSEFDB4LIANB34DAAEEFEF4NBkHgABAWIgRFDRAgAkEMakIANwIAIAJBFGpCADcCACACQRxqQgA3Ag\
AgAkEkakIANwIAIAJBLGpCADcCACACQTRqQgA3AgAgAkE8akIANwIAIAJCADcCBCACQcAANgIAIAJB\
mANqIAJBxAAQYRogAkG4BmpBOGoiBSACQZgDakE8aikCADcDACACQbgGakEwaiIGIAJBmANqQTRqKQ\
IANwMAIAJBuAZqQShqIgcgAkGYA2pBLGopAgA3AwAgAkHYBmoiCCACQZgDakEkaikCADcDACACQbgG\
akEYaiIJIAJBmANqQRxqKQIANwMAIAJBuAZqQRBqIgogAkGYA2pBFGopAgA3AwAgAkHABmoiCyACQZ\
gDakEMaikCADcDACACIAIpApwDNwO4BiAEQRhqQQAoApiRQDYCACAEQRBqQQApApCRQDcCACAEQQAp\
AoiRQDcCCCAEQQA2AhwgBEIANwMAIAQgAikDuAY3AiAgBEEoaiALKQMANwIAIARBMGogCikDADcCAC\
AEQThqIAkpAwA3AgAgBEHAAGogCCkDADcCACAEQcgAaiAHKQMANwIAIARB0ABqIAYpAwA3AgAgBEHY\
AGogBSkDADcCAEELIQUMHQsCQAJAAkACQCADKQAAQtOQhZrTxYyZNFENACADKQAAQtOQhZrTxcyaNl\
ENASADKQAAQtOQhZrT5YycNFENAiADKQAAQtOQhZrTpc2YMlENAyADKQAAQtOQhdrUqIyZOFENByAD\
KQAAQtOQhdrUyMyaNlINCUHYAhAWIgRFDR0gBEEAQcgBEGYhBSACQQA2AgAgAkEEckEAQYgBEGYaIA\
JBiAE2AgAgAkGYA2ogAkGMARBhGiACQbgGaiACQZgDakEEckGIARBhGiAFQQA2AsgBIAVBzAFqIAJB\
uAZqQYgBEGEaQRUhBQwgC0HgAhAWIgRFDRMgBEEAQcgBEGYhBSACQQA2AgAgAkEEckEAQZABEGYaIA\
JBkAE2AgAgAkGYA2ogAkGUARBhGiACQbgGaiACQZgDakEEckGQARBhGiAFQQA2AsgBIAVBzAFqIAJB\
uAZqQZABEGEaQQwhBQwfC0HYAhAWIgRFDRMgBEEAQcgBEGYhBSACQQA2AgAgAkEEckEAQYgBEGYaIA\
JBiAE2AgAgAkGYA2ogAkGMARBhGiACQbgGaiACQZgDakEEckGIARBhGiAFQQA2AsgBIAVBzAFqIAJB\
uAZqQYgBEGEaQQ0hBQweC0G4AhAWIgRFDRMgBEEAQcgBEGYhBSACQQA2AgAgAkEEckEAQegAEGYaIA\
JB6AA2AgAgAkGYA2ogAkHsABBhGiACQbgGaiACQZgDakEEckHoABBhGiAFQQA2AsgBIAVBzAFqIAJB\
uAZqQegAEGEaQQ4hBQwdC0GYAhAWIgRFDRMgBEEAQcgBEGYhBSACQQA2AgAgAkEEckEAQcgAEGYaIA\
JByAA2AgAgAkGYA2ogAkHMABBhGiACQbgGaiACQZgDakEEckHIABBhGiAFQQA2AsgBIAVBzAFqIAJB\
uAZqQcgAEGEaQQ8hBQwcC0HwABAWIgRFDRMgAkEMakIANwIAIAJBFGpCADcCACACQRxqQgA3AgAgAk\
EkakIANwIAIAJBLGpCADcCACACQTRqQgA3AgAgAkE8akIANwIAIAJCADcCBCACQcAANgIAIAJBmANq\
IAJBxAAQYRogAkHwBmoiBiACQZgDakE8aikCADcDACACQegGaiIHIAJBmANqQTRqKQIANwMAIAJB4A\
ZqIgggAkGYA2pBLGopAgA3AwAgAkHYBmoiCSACQZgDakEkaikCADcDACACQdAGaiIKIAJBmANqQRxq\
KQIANwMAQRAhBSACQbgGakEQaiILIAJBmANqQRRqKQIANwMAIAJBwAZqIgwgAkGYA2pBDGopAgA3Aw\
AgAiACKQKcAzcDuAYgBEEANgIIIARB5ABqQQApArSRQDcCACAEQdwAakEAKQKskUA3AgAgBEHUAGpB\
ACkCpJFANwIAIARBACkCnJFANwJMIARBFGogDCkDADcCACAEIAIpA7gGNwIMIARBHGogCykDADcCAC\
AEQSRqIAopAwA3AgAgBEEsaiAJKQMANwIAIARBNGogCCkDADcCACAEQTxqIAcpAwA3AgAgBEHEAGog\
BikDADcCACAEQgA3AwAMGwtB8AAQFiIERQ0TIAJBDGpCADcCACACQRRqQgA3AgAgAkEcakIANwIAIA\
JBJGpCADcCACACQSxqQgA3AgAgAkE0akIANwIAIAJBPGpCADcCACACQgA3AgQgAkHAADYCACACQZgD\
aiACQcQAEGEaIAJB8AZqIgUgAkGYA2pBPGopAgA3AwAgAkHoBmoiBiACQZgDakE0aikCADcDACACQe\
AGaiIHIAJBmANqQSxqKQIANwMAIAJB2AZqIgggAkGYA2pBJGopAgA3AwAgAkHQBmoiCSACQZgDakEc\
aikCADcDACACQcgGaiIKIAJBmANqQRRqKQIANwMAIAJBwAZqIgsgAkGYA2pBDGopAgA3AwAgAiACKQ\
KcAzcDuAYgBEEANgIIIARB5ABqQQApAtSRQDcCACAEQdwAakEAKQLMkUA3AgAgBEHUAGpBACkCxJFA\
NwIAIARBACkCvJFANwJMIARBFGogCykDADcCACAEIAIpA7gGNwIMIARBHGogCikDADcCACAEQSRqIA\
kpAwA3AgAgBEEsaiAIKQMANwIAIARBNGogBykDADcCACAEQTxqIAYpAwA3AgAgBEHEAGogBSkDADcC\
ACAEQgA3AwBBESEFDBoLQdgBEBYiBEUNEyACQQA2AgAgAkEEckEAQYABEGYaIAJBgAE2AgAgAkGYA2\
ogAkGEARBhGiACQbgGaiACQZgDakEEckGAARBhGiAEQcgAakEAKQOYkkA3AwAgBEHAAGpBACkDkJJA\
NwMAIARBOGpBACkDiJJANwMAIARBMGpBACkDgJJANwMAIARBKGpBACkD+JFANwMAIARBIGpBACkD8J\
FANwMAIARBGGpBACkD6JFANwMAIARBACkD4JFANwMQIARBADYCUCAEQdQAaiACQbgGakGAARBhGiAE\
QgA3AwggBEIANwMAQRIhBQwZC0H4AhAWIgRFDRQgBEEAQcgBEGYhBSACQQA2AgAgAkEEckEAQagBEG\
YaIAJBqAE2AgAgAkGYA2ogAkGsARBhGiACQbgGaiACQZgDakEEckGoARBhGiAFQQA2AsgBIAVBzAFq\
IAJBuAZqQagBEGEaQRQhBQwYCyADQaSAwABBBhBeRQ0VC0EBIQRBgIHAAEEVEAAhBQwXC0GYA0EIQQ\
AoAryeQCICQQQgAhsRBQAAC0GYA0EIQQAoAryeQCICQQQgAhsRBQAAC0HYAUEIQQAoAryeQCICQQQg\
AhsRBQAAC0HgAkEIQQAoAryeQCICQQQgAhsRBQAAC0HYAkEIQQAoAryeQCICQQQgAhsRBQAAC0G4Ak\
EIQQAoAryeQCICQQQgAhsRBQAAC0GYAkEIQQAoAryeQCICQQQgAhsRBQAAC0HgAEEIQQAoAryeQCIC\
QQQgAhsRBQAAC0HgAEEIQQAoAryeQCICQQQgAhsRBQAAC0HgAEEIQQAoAryeQCICQQQgAhsRBQAAC0\
HgAkEIQQAoAryeQCICQQQgAhsRBQAAC0HYAkEIQQAoAryeQCICQQQgAhsRBQAAC0G4AkEIQQAoArye\
QCICQQQgAhsRBQAAC0GYAkEIQQAoAryeQCICQQQgAhsRBQAAC0HwAEEIQQAoAryeQCICQQQgAhsRBQ\
AAC0HwAEEIQQAoAryeQCICQQQgAhsRBQAAC0HYAUEIQQAoAryeQCICQQQgAhsRBQAAC0HYAUEIQQAo\
AryeQCICQQQgAhsRBQAAC0H4AkEIQQAoAryeQCICQQQgAhsRBQAAC0HYAkEIQQAoAryeQCICQQQgAh\
sRBQAACwJAQfgOEBYiBEUNACAEQQA2ApABIARBiAFqQQApAtSRQCINNwIAIARBgAFqQQApAsyRQCIO\
NwIAIARB+ABqQQApAsSRQCIPNwIAIARBACkCvJFAIhA3AnAgBEIANwMAIAQgEDcCCCAEQRBqIA83Ag\
AgBEEYaiAONwIAIARBIGogDTcCACAEQShqQQBBwwAQZhpBBCEFDAILQfgOQQhBACgCvJ5AIgJBBCAC\
GxEFAAALQZgDEBYiBEUNAiAEQcAAEDhBACEFCyAAQQhqIAQ2AgBBACEECwJAIAFBBGooAgBFDQAgAx\
AdCyAAIAQ2AgAgACAFNgIEIAJB4AdqJAAPC0GYA0EIQQAoAryeQCICQQQgAhsRBQAAC6YqAgx/An4j\
AEHQEGsiASQAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAk\
ACQAJAIABFDQAgACgCACICQX9GDQEgACACQQFqNgIAIABBBGohAgJAAkACQAJAAkACQAJAAkACQAJA\
AkACQAJAAkACQAJAAkACQAJAAkACQAJAIAAoAgQOFgABAgMEBQYHCAkKCwwNDg8QERITFBUACyACKA\
IEIQNBmAMQFiICRQ0XIAFBwAFqIANBgAEQYRogAUHAAWpBuAFqIANBuAFqKQMANwMAIAFBwAFqQbAB\
aiADQbABaikDADcDACABQcABakGoAWogA0GoAWopAwA3AwAgAUHAAWpBoAFqIANBoAFqKQMANwMAIA\
FBwAFqQZgBaiADQZgBaikDADcDACABQcABakGQAWogA0GQAWopAwA3AwAgAUHAAWpBiAFqIANBiAFq\
KQMANwMAIAEgAykDgAE3A8ACIAMpA4gDIQ0gAygCkAMhBCADKQPAASEOIAIgASABQcABakHAARBhQc\
ABEGEiBSAONwPAASAFIAMpA8gBNwPIASAFQdABaiADQdABaikDADcDACAFQdgBaiADQdgBaikDADcD\
ACAFQeABaiADQeABaikDADcDACAFQegBaiADQegBaikDADcDACAFQfABaiADQfABaikDADcDACAFQf\
gBaiADQfgBaikDADcDACAFQYACaiADQYACaikDADcDACAFQYgCaiADQYgCakGAARBhGiAFIAQ2ApAD\
IAUgDTcDiANBACEDDC8LIAIoAgQhA0GYAxAWIgJFDRcgAUHAAWogA0GAARBhGiABQcABakG4AWogA0\
G4AWopAwA3AwAgAUHAAWpBsAFqIANBsAFqKQMANwMAIAFBwAFqQagBaiADQagBaikDADcDACABQcAB\
akGgAWogA0GgAWopAwA3AwAgAUHAAWpBmAFqIANBmAFqKQMANwMAIAFBwAFqQZABaiADQZABaikDAD\
cDACABQcABakGIAWogA0GIAWopAwA3AwAgASADKQOAATcDwAIgAykDiAMhDSADKAKQAyEEIAMpA8AB\
IQ4gAiABQcABakHAARBhIgUgDjcDwAEgBSADKQPIATcDyAEgBUHQAWogA0HQAWopAwA3AwAgBUHYAW\
ogA0HYAWopAwA3AwAgBUHgAWogA0HgAWopAwA3AwAgBUHoAWogA0HoAWopAwA3AwAgBUHwAWogA0Hw\
AWopAwA3AwAgBUH4AWogA0H4AWopAwA3AwAgBUGAAmogA0GAAmopAwA3AwAgBUGIAmogA0GIAmpBgA\
EQYRogBSAENgKQAyAFIA03A4gDQQEhAwwuCyACKAIEIQNBmAMQFiICRQ0XIAFBwAFqIANBgAEQYRog\
AUHAAWpBuAFqIANBuAFqKQMANwMAIAFBwAFqQbABaiADQbABaikDADcDACABQcABakGoAWogA0GoAW\
opAwA3AwAgAUHAAWpBoAFqIANBoAFqKQMANwMAIAFBwAFqQZgBaiADQZgBaikDADcDACABQcABakGQ\
AWogA0GQAWopAwA3AwAgAUHAAWpBiAFqIANBiAFqKQMANwMAIAEgAykDgAE3A8ACIAMpA4gDIQ0gAy\
gCkAMhBCADKQPAASEOIAIgAUHAAWpBwAEQYSIFIA43A8ABIAUgAykDyAE3A8gBIAVB0AFqIANB0AFq\
KQMANwMAIAVB2AFqIANB2AFqKQMANwMAIAVB4AFqIANB4AFqKQMANwMAIAVB6AFqIANB6AFqKQMANw\
MAIAVB8AFqIANB8AFqKQMANwMAIAVB+AFqIANB+AFqKQMANwMAIAVBgAJqIANBgAJqKQMANwMAIAVB\
iAJqIANBiAJqQYABEGEaIAUgBDYCkAMgBSANNwOIA0ECIQMMLQsgAigCBCEDQdgBEBYiAkUNFyACIA\
MpAwg3AwggAiADKQMANwMAIAMoAnAhBSACQcgAaiADQcgAaikDADcDACACQcAAaiADQcAAaikDADcD\
ACACQThqIANBOGopAwA3AwAgAkEwaiADQTBqKQMANwMAIAJBKGogA0EoaikDADcDACACQSBqIANBIG\
opAwA3AwAgAkEYaiADQRhqKQMANwMAIAIgAykDEDcDECACIAMpA1A3A1AgAkHYAGogA0HYAGopAwA3\
AwAgAkHgAGogA0HgAGopAwA3AwAgAkHoAGogA0HoAGopAwA3AwAgAiAFNgJwIAJBjAFqIANBjAFqKQ\
IANwIAIAJBhAFqIANBhAFqKQIANwIAIAJB/ABqIANB/ABqKQIANwIAIAIgAykCdDcCdCACQcwBaiAD\
QcwBaikCADcCACACQcQBaiADQcQBaikCADcCACACQbwBaiADQbwBaikCADcCACACQbQBaiADQbQBai\
kCADcCACACQawBaiADQawBaikCADcCACACQaQBaiADQaQBaikCADcCACACQZwBaiADQZwBaikCADcC\
ACACIAMpApQBNwKUAUEDIQMMLAsgAigCBCEDQfgOEBYiAkUNFyABQcABakGIAWogA0GIAWopAwA3Aw\
AgAUHAAWpBgAFqIANBgAFqKQMANwMAIAFBwAFqQfgAaiADQfgAaikDADcDACABQcABakEQaiADQRBq\
KQMANwMAIAFBwAFqQRhqIANBGGopAwA3AwAgAUHAAWpBIGogA0EgaikDADcDACABQcABakEwaiADQT\
BqKQMANwMAIAFBwAFqQThqIANBOGopAwA3AwAgAUHAAWpBwABqIANBwABqKQMANwMAIAFBwAFqQcgA\
aiADQcgAaikDADcDACABQcABakHQAGogA0HQAGopAwA3AwAgAUHAAWpB2ABqIANB2ABqKQMANwMAIA\
FBwAFqQeAAaiADQeAAaikDADcDACABIAMpA3A3A7ACIAEgAykDCDcDyAEgASADKQMoNwPoASADKQMA\
IQ0gAy0AaiEGIAMtAGkhByADLQBoIQgCQCADKAKQAUEFdCIEDQBBACEEDCsLIAFBGGoiCSADQZQBai\
IDQRhqKQAANwMAIAFBEGoiCiADQRBqKQAANwMAIAFBCGoiCyADQQhqKQAANwMAIAEgAykAADcDACAD\
QSBqIQUgBEFgaiEMIAFBwAFqQZQBaiEDQQEhBANAIARBOEYNGSADIAEpAwA3AAAgA0EYaiAJKQMANw\
AAIANBEGogCikDADcAACADQQhqIAspAwA3AAAgDEUNKyAJIAVBGGopAAA3AwAgCiAFQRBqKQAANwMA\
IAsgBUEIaikAADcDACABIAUpAAA3AwAgA0EgaiEDIARBAWohBCAMQWBqIQwgBUEgaiEFDAALCyACKA\
IEIQNB4AIQFiICRQ0YIAFBwAFqIANByAEQYRogAUEEciADQcwBahBEIAEgAygCyAE2AgAgAUHAAWpB\
yAFqIAFBlAEQYRogAiABQcABakHgAhBhGkEFIQMMKgsgAigCBCEDQdgCEBYiAkUNGCABQcABaiADQc\
gBEGEaIAFBBHIgA0HMAWoQRSABIAMoAsgBNgIAIAFBwAFqQcgBaiABQYwBEGEaIAIgAUHAAWpB2AIQ\
YRpBBiEDDCkLIAIoAgQhA0G4AhAWIgJFDRggAUHAAWogA0HIARBhGiABQQRyIANBzAFqEEYgASADKA\
LIATYCACABQcABakHIAWogAUHsABBhGiACIAFBwAFqQbgCEGEaQQchAwwoCyACKAIEIQNBmAIQFiIC\
RQ0YIAFBwAFqIANByAEQYRogAUEEciADQcwBahBHIAEgAygCyAE2AgAgAUHAAWpByAFqIAFBzAAQYR\
ogAiABQcABakGYAhBhGkEIIQMMJwsgAigCBCEDQeAAEBYiAkUNGCADKQMAIQ0gAUHAAWpBBHIgA0EM\
ahA1IAEgAygCCDYCwAEgASABQcABakHEABBhIQUgAiANNwMAIAJBCGogBUHEABBhGiACQdQAaiADQd\
QAaikCADcCACACIAMpAkw3AkxBCSEDDCYLIAIoAgQhA0HgABAWIgJFDRggAUHAEGoiBSADQRBqKQMA\
NwMAIAFBuBBqQRBqIgQgA0EYaigCADYCACABIAMpAwg3A7gQIAMpAwAhDSABQcABakEEciADQSBqED\
UgASADKAIcNgLAASABIAFBwAFqQcQAEGEhAyACIA03AwAgAiADKQO4EDcDCCACQRBqIAUpAwA3AwAg\
AkEYaiAEKAIANgIAIAJBHGogA0HEABBhGkEKIQMMJQsgAigCBCEDQeAAEBYiAkUNGCABQcAQaiIFIA\
NBEGopAwA3AwAgAUG4EGpBEGoiBCADQRhqKAIANgIAIAEgAykDCDcDuBAgAykDACENIAFBwAFqQQRy\
IANBIGoQNSABIAMoAhw2AsABIAEgAUHAAWpBxAAQYSEDIAIgDTcDACACIAMpA7gQNwMIIAJBEGogBS\
kDADcDACACQRhqIAQoAgA2AgAgAkEcaiADQcQAEGEaQQshAwwkCyACKAIEIQNB4AIQFiICRQ0YIAFB\
wAFqIANByAEQYRogAUEEciADQcwBahBEIAEgAygCyAE2AgAgAUHAAWpByAFqIAFBlAEQYRogAiABQc\
ABakHgAhBhGkEMIQMMIwsgAigCBCEDQdgCEBYiAkUNGCABQcABaiADQcgBEGEaIAFBBHIgA0HMAWoQ\
RSABIAMoAsgBNgIAIAFBwAFqQcgBaiABQYwBEGEaIAIgAUHAAWpB2AIQYRpBDSEDDCILIAIoAgQhA0\
G4AhAWIgJFDRggAUHAAWogA0HIARBhGiABQQRyIANBzAFqEEYgASADKALIATYCACABQcABakHIAWog\
AUHsABBhGiACIAFBwAFqQbgCEGEaQQ4hAwwhCyACKAIEIQNBmAIQFiICRQ0YIAFBwAFqIANByAEQYR\
ogAUEEciADQcwBahBHIAEgAygCyAE2AgAgAUHAAWpByAFqIAFBzAAQYRogAiABQcABakGYAhBhGkEP\
IQMMIAsgAigCBCEDQfAAEBYiAkUNGCADKQMAIQ0gAUHAAWpBBHIgA0EMahA1IAEgAygCCDYCwAEgAS\
ABQcABakHEABBhIQUgAiANNwMAIAJBCGogBUHEABBhGiACQeQAaiADQeQAaikCADcCACACQdwAaiAD\
QdwAaikCADcCACACQdQAaiADQdQAaikCADcCACACIAMpAkw3AkxBECEDDB8LIAIoAgQhA0HwABAWIg\
JFDRggAykDACENIAFBwAFqQQRyIANBDGoQNSABIAMoAgg2AsABIAEgAUHAAWpBxAAQYSEFIAIgDTcD\
ACACQQhqIAVBxAAQYRogAkHkAGogA0HkAGopAgA3AgAgAkHcAGogA0HcAGopAgA3AgAgAkHUAGogA0\
HUAGopAgA3AgAgAiADKQJMNwJMQREhAwweCyACKAIEIQNB2AEQFiICRQ0YIANBCGopAwAhDSADKQMA\
IQ4gAUHAAWpBBHIgA0HUAGoQSCABIAMoAlA2AsABIAEgAUHAAWpBhAEQYSEFIAIgDTcDCCACIA43Aw\
AgAiADKQMQNwMQIAJBGGogA0EYaikDADcDACACQSBqIANBIGopAwA3AwAgAkEoaiADQShqKQMANwMA\
IAJBMGogA0EwaikDADcDACACQThqIANBOGopAwA3AwAgAkHAAGogA0HAAGopAwA3AwAgAkHIAGogA0\
HIAGopAwA3AwAgAkHQAGogBUGEARBhGkESIQMMHQsgAigCBCEDQdgBEBYiAkUNGCADQQhqKQMAIQ0g\
AykDACEOIAFBwAFqQQRyIANB1ABqEEggASADKAJQNgLAASABIAFBwAFqQYQBEGEhBSACIA03AwggAi\
AONwMAIAIgAykDEDcDECACQRhqIANBGGopAwA3AwAgAkEgaiADQSBqKQMANwMAIAJBKGogA0EoaikD\
ADcDACACQTBqIANBMGopAwA3AwAgAkE4aiADQThqKQMANwMAIAJBwABqIANBwABqKQMANwMAIAJByA\
BqIANByABqKQMANwMAIAJB0ABqIAVBhAEQYRpBEyEDDBwLIAIoAgQhA0H4AhAWIgJFDRggAUHAAWog\
A0HIARBhGiABQQRyIANBzAFqEEkgASADKALIATYCACABQcABakHIAWogAUGsARBhGiACIAFBwAFqQf\
gCEGEaQRQhAwwbCyACKAIEIQNB2AIQFiICRQ0YIAFBwAFqIANByAEQYRogAUEEciADQcwBahBFIAEg\
AygCyAE2AgAgAUHAAWpByAFqIAFBjAEQYRogAiABQcABakHYAhBhGkEVIQMMGgsQgQEACxCCAQALQZ\
gDQQhBACgCvJ5AIgFBBCABGxEFAAALQZgDQQhBACgCvJ5AIgFBBCABGxEFAAALQZgDQQhBACgCvJ5A\
IgFBBCABGxEFAAALQdgBQQhBACgCvJ5AIgFBBCABGxEFAAALQfgOQQhBACgCvJ5AIgFBBCABGxEFAA\
ALEH0AC0HgAkEIQQAoAryeQCIBQQQgARsRBQAAC0HYAkEIQQAoAryeQCIBQQQgARsRBQAAC0G4AkEI\
QQAoAryeQCIBQQQgARsRBQAAC0GYAkEIQQAoAryeQCIBQQQgARsRBQAAC0HgAEEIQQAoAryeQCIBQQ\
QgARsRBQAAC0HgAEEIQQAoAryeQCIBQQQgARsRBQAAC0HgAEEIQQAoAryeQCIBQQQgARsRBQAAC0Hg\
AkEIQQAoAryeQCIBQQQgARsRBQAAC0HYAkEIQQAoAryeQCIBQQQgARsRBQAAC0G4AkEIQQAoAryeQC\
IBQQQgARsRBQAAC0GYAkEIQQAoAryeQCIBQQQgARsRBQAAC0HwAEEIQQAoAryeQCIBQQQgARsRBQAA\
C0HwAEEIQQAoAryeQCIBQQQgARsRBQAAC0HYAUEIQQAoAryeQCIBQQQgARsRBQAAC0HYAUEIQQAoAr\
yeQCIBQQQgARsRBQAAC0H4AkEIQQAoAryeQCIBQQQgARsRBQAAC0HYAkEIQQAoAryeQCIBQQQgARsR\
BQAACyABIAQ2AtACIAEgBjoAqgIgASAHOgCpAiABIAg6AKgCIAEgDTcDwAEgAiABQcABakH4DhBhGk\
EEIQMLIAAgACgCAEF/ajYCAAJAQQwQFiIARQ0AIAAgAjYCCCAAIAM2AgQgAEEANgIAIAFB0BBqJAAg\
AA8LQQxBBEEAKAK8nkAiAUEEIAEbEQUAAAv2HQI5fwF+IwBBwABrIgMkAAJAAkAgAkUNACAAQRBqKA\
IAIgQgAEE4aigCACIFaiAAQSBqKAIAIgZqIgcgAEE8aigCACIIaiAHIAAtAGhzQRB0IAdBEHZyIgdB\
8ua74wNqIgkgBnNBFHciCmoiCyAHc0EYdyIMIAlqIg0gCnNBGXchDiALIABB2ABqKAIAIg9qIABBFG\
ooAgAiECAAQcAAaigCACIRaiAAQSRqKAIAIhJqIgcgAEHEAGooAgAiE2ogByAALQBpQQhyc0EQdCAH\
QRB2ciIHQbrqv6p6aiIJIBJzQRR3IgpqIgsgB3NBGHciFCAJaiIVIApzQRl3IhZqIhcgAEHcAGooAg\
AiGGohGSALIABB4ABqKAIAIhpqIRsgACgCCCIcIAAoAigiHWogAEEYaigCACIeaiIfIABBLGooAgAi\
IGohISAAQQxqKAIAIiIgAEEwaigCACIjaiAAQRxqKAIAIiRqIiUgAEE0aigCACImaiEnIABB5ABqKA\
IAIQcgAEHUAGooAgAhCSAAQdAAaigCACEKIABBzABqKAIAIQsgAEHIAGooAgAhKANAIAMgGSAXICcg\
JSAAKQMAIjxCIIinc0EQdyIpQYXdntt7aiIqICRzQRR3IitqIiwgKXNBGHciKXNBEHciLSAhIB8gPK\
dzQRB3Ii5B58yn0AZqIi8gHnNBFHciMGoiMSAuc0EYdyIuIC9qIi9qIjIgFnNBFHciM2oiNCATaiAs\
IApqIA5qIiwgCWogLCAuc0EQdyIsIBVqIi4gDnNBFHciNWoiNiAsc0EYdyIsIC5qIi4gNXNBGXciNW\
oiNyAdaiA3IBsgLyAwc0EZdyIvaiIwIAdqIDAgDHNBEHciMCApICpqIilqIiogL3NBFHciL2oiOCAw\
c0EYdyIwc0EQdyI3IDEgKGogKSArc0EZdyIpaiIrIAtqICsgFHNBEHciKyANaiIxIClzQRR3IilqIj\
kgK3NBGHciKyAxaiIxaiI6IDVzQRR3IjVqIjsgC2ogOCAFaiA0IC1zQRh3Ii0gMmoiMiAzc0EZdyIz\
aiI0IBhqIDQgK3NBEHciKyAuaiIuIDNzQRR3IjNqIjQgK3NBGHciKyAuaiIuIDNzQRl3IjNqIjggGm\
ogOCA2ICZqIDEgKXNBGXciKWoiMSAKaiAxIC1zQRB3Ii0gMCAqaiIqaiIwIClzQRR3IilqIjEgLXNB\
GHciLXNBEHciNiA5ICNqICogL3NBGXciKmoiLyARaiAvICxzQRB3IiwgMmoiLyAqc0EUdyIqaiIyIC\
xzQRh3IiwgL2oiL2oiOCAzc0EUdyIzaiI5IBhqIDEgD2ogOyA3c0EYdyIxIDpqIjcgNXNBGXciNWoi\
OiAIaiA6ICxzQRB3IiwgLmoiLiA1c0EUdyI1aiI6ICxzQRh3IiwgLmoiLiA1c0EZdyI1aiI7ICNqID\
sgNCAHaiAvICpzQRl3IipqIi8gKGogLyAxc0EQdyIvIC0gMGoiLWoiMCAqc0EUdyIqaiIxIC9zQRh3\
Ii9zQRB3IjQgMiAgaiAtIClzQRl3IilqIi0gCWogLSArc0EQdyIrIDdqIi0gKXNBFHciKWoiMiArc0\
EYdyIrIC1qIi1qIjcgNXNBFHciNWoiOyAJaiAxIBNqIDkgNnNBGHciMSA4aiI2IDNzQRl3IjNqIjgg\
GmogOCArc0EQdyIrIC5qIi4gM3NBFHciM2oiOCArc0EYdyIrIC5qIi4gM3NBGXciM2oiOSAHaiA5ID\
ogCmogLSApc0EZdyIpaiItIA9qIC0gMXNBEHciLSAvIDBqIi9qIjAgKXNBFHciKWoiMSAtc0EYdyIt\
c0EQdyI5IDIgJmogLyAqc0EZdyIqaiIvIAVqIC8gLHNBEHciLCA2aiIvICpzQRR3IipqIjIgLHNBGH\
ciLCAvaiIvaiI2IDNzQRR3IjNqIjogGmogMSALaiA7IDRzQRh3IjEgN2oiNCA1c0EZdyI1aiI3IB1q\
IDcgLHNBEHciLCAuaiIuIDVzQRR3IjVqIjcgLHNBGHciLCAuaiIuIDVzQRl3IjVqIjsgJmogOyA4IC\
hqIC8gKnNBGXciKmoiLyAgaiAvIDFzQRB3Ii8gLSAwaiItaiIwICpzQRR3IipqIjEgL3NBGHciL3NB\
EHciOCAyIBFqIC0gKXNBGXciKWoiLSAIaiAtICtzQRB3IisgNGoiLSApc0EUdyIpaiIyICtzQRh3Ii\
sgLWoiLWoiNCA1c0EUdyI1aiI7IAhqIDEgGGogOiA5c0EYdyIxIDZqIjYgM3NBGXciM2oiOSAHaiA5\
ICtzQRB3IisgLmoiLiAzc0EUdyIzaiI5ICtzQRh3IisgLmoiLiAzc0EZdyIzaiI6IChqIDogNyAPai\
AtIClzQRl3IilqIi0gC2ogLSAxc0EQdyItIC8gMGoiL2oiMCApc0EUdyIpaiIxIC1zQRh3Ii1zQRB3\
IjcgMiAKaiAvICpzQRl3IipqIi8gE2ogLyAsc0EQdyIsIDZqIi8gKnNBFHciKmoiMiAsc0EYdyIsIC\
9qIi9qIjYgM3NBFHciM2oiOiAHaiAxIAlqIDsgOHNBGHciMSA0aiI0IDVzQRl3IjVqIjggI2ogOCAs\
c0EQdyIsIC5qIi4gNXNBFHciNWoiOCAsc0EYdyIsIC5qIi4gNXNBGXciNWoiOyAKaiA7IDkgIGogLy\
Aqc0EZdyIqaiIvIBFqIC8gMXNBEHciLyAtIDBqIi1qIjAgKnNBFHciKmoiMSAvc0EYdyIvc0EQdyI5\
IDIgBWogLSApc0EZdyIpaiItIB1qIC0gK3NBEHciKyA0aiItIClzQRR3IilqIjIgK3NBGHciKyAtai\
ItaiI0IDVzQRR3IjVqIjsgHWogMSAaaiA6IDdzQRh3IjEgNmoiNiAzc0EZdyIzaiI3IChqIDcgK3NB\
EHciKyAuaiIuIDNzQRR3IjNqIjcgK3NBGHciKyAuaiIuIDNzQRl3IjNqIjogIGogOiA4IAtqIC0gKX\
NBGXciKWoiLSAJaiAtIDFzQRB3Ii0gLyAwaiIvaiIwIClzQRR3IilqIjEgLXNBGHciLXNBEHciOCAy\
IA9qIC8gKnNBGXciKmoiLyAYaiAvICxzQRB3IiwgNmoiLyAqc0EUdyIqaiIyICxzQRh3IiwgL2oiL2\
oiNiAzc0EUdyIzaiI6IChqIDEgCGogOyA5c0EYdyIxIDRqIjQgNXNBGXciNWoiOSAmaiA5ICxzQRB3\
IiwgLmoiLiA1c0EUdyI1aiI5ICxzQRh3IiwgLmoiLiA1c0EZdyI1aiI7IA9qIDsgNyARaiAvICpzQR\
l3IipqIi8gBWogLyAxc0EQdyIvIC0gMGoiLWoiMCAqc0EUdyIqaiIxIC9zQRh3Ii9zQRB3IjcgMiAT\
aiAtIClzQRl3IilqIi0gI2ogLSArc0EQdyIrIDRqIi0gKXNBFHciKWoiMiArc0EYdyIrIC1qIi1qIj\
QgNXNBFHciNWoiOyAjaiAxIAdqIDogOHNBGHciMSA2aiI2IDNzQRl3IjNqIjggIGogOCArc0EQdyIr\
IC5qIi4gM3NBFHciM2oiOCArc0EYdyIrIC5qIi4gM3NBGXciM2oiOiARaiA6IDkgCWogLSApc0EZdy\
IpaiItIAhqIC0gMXNBEHciLSAvIDBqIi9qIjAgKXNBFHciKWoiMSAtc0EYdyItc0EQdyI5IDIgC2og\
LyAqc0EZdyIqaiIvIBpqIC8gLHNBEHciLCA2aiIvICpzQRR3IipqIjIgLHNBGHciLCAvaiIvaiI2ID\
NzQRR3IjNqIjogIGogMSAdaiA7IDdzQRh3IjEgNGoiNCA1c0EZdyI1aiI3IApqIDcgLHNBEHciLCAu\
aiIuIDVzQRR3IjVqIjcgLHNBGHciLCAuaiIuIDVzQRl3IjVqIjsgC2ogOyA4IAVqIC8gKnNBGXciKm\
oiLyATaiAvIDFzQRB3Ii8gLSAwaiItaiIwICpzQRR3IipqIjEgL3NBGHciL3NBEHciOCAyIBhqIC0g\
KXNBGXciKWoiLSAmaiAtICtzQRB3IisgNGoiLSApc0EUdyIpaiIyICtzQRh3IisgLWoiLWoiNCA1c0\
EUdyI1aiI7ICZqIDEgKGogOiA5c0EYdyIxIDZqIjYgM3NBGXciM2oiOSARaiA5ICtzQRB3IisgLmoi\
LiAzc0EUdyIzaiI5ICtzQRh3IjogLmoiKyAzc0EZdyIuaiIzIAVqIDMgNyAIaiAtIClzQRl3IilqIi\
0gHWogLSAxc0EQdyItIC8gMGoiL2oiMCApc0EUdyIxaiI3IC1zQRh3Ii1zQRB3IikgMiAJaiAvICpz\
QRl3IipqIi8gB2ogLyAsc0EQdyIsIDZqIi8gKnNBFHciMmoiMyAsc0EYdyIqIC9qIi9qIiwgLnNBFH\
ciLmoiNiApc0EYdyIpICRzNgI0IAMgNyAjaiA7IDhzQRh3IjcgNGoiNCA1c0EZdyI1aiI4IA9qIDgg\
KnNBEHciKiAraiIrIDVzQRR3IjVqIjggKnNBGHciKiAeczYCMCADICogK2oiKyAQczYCLCADICkgLG\
oiLCAcczYCICADICsgOSATaiAvIDJzQRl3Ii9qIjIgGGogMiA3c0EQdyIyIC0gMGoiLWoiMCAvc0EU\
dyIvaiI3czYCDCADICwgMyAaaiAtIDFzQRl3Ii1qIjEgCmogMSA6c0EQdyIxIDRqIjMgLXNBFHciNG\
oiOXM2AgAgAyA3IDJzQRh3Ii0gBnM2AjggAyArIDVzQRl3IC1zNgIYIAMgOSAxc0EYdyIrIBJzNgI8\
IAMgLSAwaiItICJzNgIkIAMgLCAuc0EZdyArczYCHCADIC0gOHM2AgQgAyArIDNqIisgBHM2AiggAy\
ArIDZzNgIIIAMgLSAvc0EZdyAqczYCECADICsgNHNBGXcgKXM2AhQgAC0AcCIpQcEATw0CIAEgAyAp\
akHAACApayIqIAIgAiAqSxsiKhBhISsgACApICpqIik6AHAgAiAqayECAkAgKUH/AXFBwABHDQAgAE\
EAOgBwIAAgACkDAEIBfDcDAAsgKyAqaiEBIAINAAsLIANBwABqJAAPCyApQcAAQbyHwAAQVgALlRsB\
IH8gACAAKAIAIAEoAAAiBWogACgCECIGaiIHIAEoAAQiCGogByADp3NBEHciCUHnzKfQBmoiCiAGc0\
EUdyILaiIMIAEoACAiBmogACgCBCABKAAIIgdqIAAoAhQiDWoiDiABKAAMIg9qIA4gA0IgiKdzQRB3\
Ig5Bhd2e23tqIhAgDXNBFHciDWoiESAOc0EYdyISIBBqIhMgDXNBGXciFGoiFSABKAAkIg1qIBUgAC\
gCDCABKAAYIg5qIAAoAhwiFmoiFyABKAAcIhBqIBcgBEH/AXFzQRB0IBdBEHZyIhdBuuq/qnpqIhgg\
FnNBFHciFmoiGSAXc0EYdyIac0EQdyIbIAAoAgggASgAECIXaiAAKAIYIhxqIhUgASgAFCIEaiAVIA\
JB/wFxc0EQdCAVQRB2ciIVQfLmu+MDaiICIBxzQRR3IhxqIh0gFXNBGHciHiACaiIfaiIgIBRzQRR3\
IhRqIiEgB2ogGSABKAA4IhVqIAwgCXNBGHciDCAKaiIZIAtzQRl3IglqIgogASgAPCICaiAKIB5zQR\
B3IgogE2oiCyAJc0EUdyIJaiITIApzQRh3Ih4gC2oiIiAJc0EZdyIjaiILIA5qIAsgESABKAAoIglq\
IB8gHHNBGXciEWoiHCABKAAsIgpqIBwgDHNBEHciDCAaIBhqIhhqIhogEXNBFHciEWoiHCAMc0EYdy\
IMc0EQdyIfIB0gASgAMCILaiAYIBZzQRl3IhZqIhggASgANCIBaiAYIBJzQRB3IhIgGWoiGCAWc0EU\
dyIWaiIZIBJzQRh3IhIgGGoiGGoiHSAjc0EUdyIjaiIkIAhqIBwgD2ogISAbc0EYdyIbICBqIhwgFH\
NBGXciFGoiICAJaiAgIBJzQRB3IhIgImoiICAUc0EUdyIUaiIhIBJzQRh3IhIgIGoiICAUc0EZdyIU\
aiIiIApqICIgEyAXaiAYIBZzQRl3IhNqIhYgAWogFiAbc0EQdyIWIAwgGmoiDGoiGCATc0EUdyITai\
IaIBZzQRh3IhZzQRB3IhsgGSAQaiAMIBFzQRl3IgxqIhEgBWogESAec0EQdyIRIBxqIhkgDHNBFHci\
DGoiHCARc0EYdyIRIBlqIhlqIh4gFHNBFHciFGoiIiAPaiAaIAJqICQgH3NBGHciGiAdaiIdICNzQR\
l3Ih9qIiMgBmogIyARc0EQdyIRICBqIiAgH3NBFHciH2oiIyARc0EYdyIRICBqIiAgH3NBGXciH2oi\
JCAXaiAkICEgC2ogGSAMc0EZdyIMaiIZIARqIBkgGnNBEHciGSAWIBhqIhZqIhggDHNBFHciDGoiGi\
AZc0EYdyIZc0EQdyIhIBwgDWogFiATc0EZdyITaiIWIBVqIBYgEnNBEHciEiAdaiIWIBNzQRR3IhNq\
IhwgEnNBGHciEiAWaiIWaiIdIB9zQRR3Ih9qIiQgDmogGiAJaiAiIBtzQRh3IhogHmoiGyAUc0EZdy\
IUaiIeIAtqIB4gEnNBEHciEiAgaiIeIBRzQRR3IhRqIiAgEnNBGHciEiAeaiIeIBRzQRl3IhRqIiIg\
BGogIiAjIBBqIBYgE3NBGXciE2oiFiAVaiAWIBpzQRB3IhYgGSAYaiIYaiIZIBNzQRR3IhNqIhogFn\
NBGHciFnNBEHciIiAcIAFqIBggDHNBGXciDGoiGCAHaiAYIBFzQRB3IhEgG2oiGCAMc0EUdyIMaiIb\
IBFzQRh3IhEgGGoiGGoiHCAUc0EUdyIUaiIjIAlqIBogBmogJCAhc0EYdyIaIB1qIh0gH3NBGXciH2\
oiISAIaiAhIBFzQRB3IhEgHmoiHiAfc0EUdyIfaiIhIBFzQRh3IhEgHmoiHiAfc0EZdyIfaiIkIBBq\
ICQgICANaiAYIAxzQRl3IgxqIhggBWogGCAac0EQdyIYIBYgGWoiFmoiGSAMc0EUdyIMaiIaIBhzQR\
h3IhhzQRB3IiAgGyAKaiAWIBNzQRl3IhNqIhYgAmogFiASc0EQdyISIB1qIhYgE3NBFHciE2oiGyAS\
c0EYdyISIBZqIhZqIh0gH3NBFHciH2oiJCAXaiAaIAtqICMgInNBGHciGiAcaiIcIBRzQRl3IhRqIi\
IgDWogIiASc0EQdyISIB5qIh4gFHNBFHciFGoiIiASc0EYdyISIB5qIh4gFHNBGXciFGoiIyAFaiAj\
ICEgAWogFiATc0EZdyITaiIWIAJqIBYgGnNBEHciFiAYIBlqIhhqIhkgE3NBFHciE2oiGiAWc0EYdy\
IWc0EQdyIhIBsgFWogGCAMc0EZdyIMaiIYIA9qIBggEXNBEHciESAcaiIYIAxzQRR3IgxqIhsgEXNB\
GHciESAYaiIYaiIcIBRzQRR3IhRqIiMgC2ogGiAIaiAkICBzQRh3IhogHWoiHSAfc0EZdyIfaiIgIA\
5qICAgEXNBEHciESAeaiIeIB9zQRR3Ih9qIiAgEXNBGHciESAeaiIeIB9zQRl3Ih9qIiQgAWogJCAi\
IApqIBggDHNBGXciDGoiGCAHaiAYIBpzQRB3IhggFiAZaiIWaiIZIAxzQRR3IgxqIhogGHNBGHciGH\
NBEHciIiAbIARqIBYgE3NBGXciE2oiFiAGaiAWIBJzQRB3IhIgHWoiFiATc0EUdyITaiIbIBJzQRh3\
IhIgFmoiFmoiHSAfc0EUdyIfaiIkIBBqIBogDWogIyAhc0EYdyIaIBxqIhwgFHNBGXciFGoiISAKai\
AhIBJzQRB3IhIgHmoiHiAUc0EUdyIUaiIhIBJzQRh3IhIgHmoiHiAUc0EZdyIUaiIjIAdqICMgICAV\
aiAWIBNzQRl3IhNqIhYgBmogFiAac0EQdyIWIBggGWoiGGoiGSATc0EUdyITaiIaIBZzQRh3IhZzQR\
B3IiAgGyACaiAYIAxzQRl3IgxqIhggCWogGCARc0EQdyIRIBxqIhggDHNBFHciDGoiGyARc0EYdyIR\
IBhqIhhqIhwgFHNBFHciFGoiIyANaiAaIA5qICQgInNBGHciGiAdaiIdIB9zQRl3Ih9qIiIgF2ogIi\
ARc0EQdyIRIB5qIh4gH3NBFHciH2oiIiARc0EYdyIRIB5qIh4gH3NBGXciH2oiJCAVaiAkICEgBGog\
GCAMc0EZdyIMaiIYIA9qIBggGnNBEHciGCAWIBlqIhZqIhkgDHNBFHciDGoiGiAYc0EYdyIYc0EQdy\
IhIBsgBWogFiATc0EZdyITaiIWIAhqIBYgEnNBEHciEiAdaiIWIBNzQRR3IhNqIhsgEnNBGHciEiAW\
aiIWaiIdIB9zQRR3Ih9qIiQgAWogGiAKaiAjICBzQRh3IhogHGoiHCAUc0EZdyIUaiIgIARqICAgEn\
NBEHciEiAeaiIeIBRzQRR3IhRqIiAgEnNBGHciEiAeaiIeIBRzQRl3IhRqIiMgD2ogIyAiIAJqIBYg\
E3NBGXciE2oiFiAIaiAWIBpzQRB3IhYgGCAZaiIYaiIZIBNzQRR3IhNqIhogFnNBGHciFnNBEHciIi\
AbIAZqIBggDHNBGXciDGoiGCALaiAYIBFzQRB3IhEgHGoiGCAMc0EUdyIMaiIbIBFzQRh3IhEgGGoi\
GGoiHCAUc0EUdyIUaiIjIApqIBogF2ogJCAhc0EYdyIKIB1qIhogH3NBGXciHWoiHyAQaiAfIBFzQR\
B3IhEgHmoiHiAdc0EUdyIdaiIfIBFzQRh3IhEgHmoiHiAdc0EZdyIdaiIhIAJqICEgICAFaiAYIAxz\
QRl3IgJqIgwgCWogDCAKc0EQdyIKIBYgGWoiDGoiFiACc0EUdyICaiIYIApzQRh3IgpzQRB3IhkgGy\
AHaiAMIBNzQRl3IgxqIhMgDmogEyASc0EQdyISIBpqIhMgDHNBFHciDGoiGiASc0EYdyISIBNqIhNq\
IhsgHXNBFHciHWoiICAVaiAYIARqICMgInNBGHciBCAcaiIVIBRzQRl3IhRqIhggBWogGCASc0EQdy\
IFIB5qIhIgFHNBFHciFGoiGCAFc0EYdyIFIBJqIhIgFHNBGXciFGoiHCAJaiAcIB8gBmogEyAMc0EZ\
dyIGaiIJIA5qIAkgBHNBEHciDiAKIBZqIgRqIgkgBnNBFHciBmoiCiAOc0EYdyIOc0EQdyIMIBogCG\
ogBCACc0EZdyIIaiIEIA1qIAQgEXNBEHciDSAVaiIEIAhzQRR3IghqIhUgDXNBGHciDSAEaiIEaiIC\
IBRzQRR3IhFqIhMgDHNBGHciDCACaiICIBUgD2ogDiAJaiIPIAZzQRl3IgZqIg4gF2ogDiAFc0EQdy\
IFICAgGXNBGHciDiAbaiIXaiIVIAZzQRR3IgZqIglzNgIIIAAgASAKIBBqIBcgHXNBGXciEGoiF2og\
FyANc0EQdyIBIBJqIg0gEHNBFHciEGoiFyABc0EYdyIBIA1qIg0gCyAYIAdqIAQgCHNBGXciCGoiB2\
ogByAOc0EQdyIHIA9qIg8gCHNBFHciCGoiDnM2AgQgACAOIAdzQRh3IgcgD2oiDyAXczYCDCAAIAkg\
BXNBGHciBSAVaiIOIBNzNgIAIAAgAiARc0EZdyAFczYCFCAAIA0gEHNBGXcgB3M2AhAgACAOIAZzQR\
l3IAxzNgIcIAAgDyAIc0EZdyABczYCGAvqEQEYfyMAIQIgACgCACEDIAAoAgghBCAAKAIMIQUgACgC\
BCEGIAJBwABrIgJBGGoiB0IANwMAIAJBIGoiCEIANwMAIAJBOGoiCUIANwMAIAJBMGoiCkIANwMAIA\
JBKGoiC0IANwMAIAJBCGoiDCABKQAINwMAIAJBEGoiDSABKQAQNwMAIAcgASgAGCIONgIAIAggASgA\
ICIPNgIAIAIgASkAADcDACACIAEoABwiEDYCHCACIAEoACQiETYCJCALIAEoACgiEjYCACACIAEoAC\
wiCzYCLCAKIAEoADAiEzYCACACIAEoADQiCjYCNCAJIAEoADgiFDYCACACIAEoADwiCTYCPCAAIAMg\
DSgCACINIA8gEyACKAIAIhUgESAKIAIoAgQiFiACKAIUIhcgCiARIBcgFiATIA8gDSAGIBUgAyAEIA\
ZxaiAFIAZBf3NxampB+Miqu31qQQd3aiIBaiAGIAIoAgwiGGogBCAMKAIAIgxqIAUgFmogASAGcWog\
BCABQX9zcWpB1u6exn5qQQx3IAFqIgIgAXFqIAYgAkF/c3FqQdvhgaECakERdyACaiIHIAJxaiABIA\
dBf3NxakHunfeNfGpBFncgB2oiASAHcWogAiABQX9zcWpBr5/wq39qQQd3IAFqIghqIBAgAWogDiAH\
aiAXIAJqIAggAXFqIAcgCEF/c3FqQaqMn7wEakEMdyAIaiICIAhxaiABIAJBf3NxakGTjMHBempBEX\
cgAmoiASACcWogCCABQX9zcWpBgaqaampBFncgAWoiByABcWogAiAHQX9zcWpB2LGCzAZqQQd3IAdq\
IghqIAsgB2ogEiABaiARIAJqIAggB3FqIAEgCEF/c3FqQa/vk9p4akEMdyAIaiICIAhxaiAHIAJBf3\
NxakGxt31qQRF3IAJqIgEgAnFqIAggAUF/c3FqQb6v88p4akEWdyABaiIHIAFxaiACIAdBf3NxakGi\
osDcBmpBB3cgB2oiCGogFCABaiAKIAJqIAggB3FqIAEgCEF/c3FqQZPj4WxqQQx3IAhqIgIgCHFqIA\
cgAkF/cyIZcWpBjofls3pqQRF3IAJqIgEgGXFqIAkgB2ogASACcWogCCABQX9zIhlxakGhkNDNBGpB\
FncgAWoiByACcWpB4sr4sH9qQQV3IAdqIghqIAsgAWogCCAHQX9zcWogDiACaiAHIBlxaiAIIAFxak\
HA5oKCfGpBCXcgCGoiAiAHcWpB0bT5sgJqQQ53IAJqIgEgAkF/c3FqIBUgB2ogAiAIQX9zcWogASAI\
cWpBqo/bzX5qQRR3IAFqIgcgAnFqQd2gvLF9akEFdyAHaiIIaiAJIAFqIAggB0F/c3FqIBIgAmogBy\
ABQX9zcWogCCABcWpB06iQEmpBCXcgCGoiAiAHcWpBgc2HxX1qQQ53IAJqIgEgAkF/c3FqIA0gB2og\
AiAIQX9zcWogASAIcWpByPfPvn5qQRR3IAFqIgcgAnFqQeabh48CakEFdyAHaiIIaiAYIAFqIAggB0\
F/c3FqIBQgAmogByABQX9zcWogCCABcWpB1o/cmXxqQQl3IAhqIgIgB3FqQYeb1KZ/akEOdyACaiIB\
IAJBf3NxaiAPIAdqIAIgCEF/c3FqIAEgCHFqQe2p6KoEakEUdyABaiIHIAJxakGF0o/PempBBXcgB2\
oiCGogEyAHaiAMIAJqIAcgAUF/c3FqIAggAXFqQfjHvmdqQQl3IAhqIgIgCEF/c3FqIBAgAWogCCAH\
QX9zcWogAiAHcWpB2YW8uwZqQQ53IAJqIgcgCHFqQYqZqel4akEUdyAHaiIIIAdzIhkgAnNqQcLyaG\
pBBHcgCGoiAWogCyAHaiABIAhzIA8gAmogGSABc2pBge3Hu3hqQQt3IAFqIgJzakGiwvXsBmpBEHcg\
AmoiByACcyAUIAhqIAIgAXMgB3NqQYzwlG9qQRd3IAdqIgFzakHE1PulempBBHcgAWoiCGogECAHai\
AIIAFzIA0gAmogASAHcyAIc2pBqZ/73gRqQQt3IAhqIgJzakHglu21f2pBEHcgAmoiByACcyASIAFq\
IAIgCHMgB3NqQfD4/vV7akEXdyAHaiIBc2pBxv3txAJqQQR3IAFqIghqIBggB2ogCCABcyAVIAJqIA\
EgB3MgCHNqQfrPhNV+akELdyAIaiICc2pBheG8p31qQRB3IAJqIgcgAnMgDiABaiACIAhzIAdzakGF\
uqAkakEXdyAHaiIBc2pBuaDTzn1qQQR3IAFqIghqIAwgAWogEyACaiABIAdzIAhzakHls+62fmpBC3\
cgCGoiAiAIcyAJIAdqIAggAXMgAnNqQfj5if0BakEQdyACaiIBc2pB5ayxpXxqQRd3IAFqIgcgAkF/\
c3IgAXNqQcTEpKF/akEGdyAHaiIIaiAXIAdqIBQgAWogECACaiAIIAFBf3NyIAdzakGX/6uZBGpBCn\
cgCGoiAiAHQX9zciAIc2pBp8fQ3HpqQQ93IAJqIgEgCEF/c3IgAnNqQbnAzmRqQRV3IAFqIgcgAkF/\
c3IgAXNqQcOz7aoGakEGdyAHaiIIaiAWIAdqIBIgAWogGCACaiAIIAFBf3NyIAdzakGSmbP4eGpBCn\
cgCGoiAiAHQX9zciAIc2pB/ei/f2pBD3cgAmoiASAIQX9zciACc2pB0buRrHhqQRV3IAFqIgcgAkF/\
c3IgAXNqQc/8of0GakEGdyAHaiIIaiAKIAdqIA4gAWogCSACaiAIIAFBf3NyIAdzakHgzbNxakEKdy\
AIaiICIAdBf3NyIAhzakGUhoWYempBD3cgAmoiASAIQX9zciACc2pBoaOg8ARqQRV3IAFqIgcgAkF/\
c3IgAXNqQYL9zbp/akEGdyAHaiIIajYCACAAIAUgCyACaiAIIAFBf3NyIAdzakG15Ovpe2pBCncgCG\
oiAmo2AgwgACAEIAwgAWogAiAHQX9zciAIc2pBu6Xf1gJqQQ93IAJqIgFqNgIIIAAgASAGaiARIAdq\
IAEgCEF/c3IgAnNqQZGnm9x+akEVd2o2AgQLxw4CDX8BfiMAQaACayIHJAACQAJAAkACQAJAAkACQA\
JAAkACQAJAAkAgAUGBCEkNAEF/IAFBf2pBC3YiCGd2QQp0QYAIakGACCAIGyIIIAFLDQMgB0EIakEA\
QYABEGYaIAEgCGshCSAAIAhqIQogCEEKdq0gA3whFCAIQYAIRw0BIAdBCGpBIGohAUHgACELIABBgA\
ggAiADIAQgB0EIakEgEBwhCAwCCyAHQgA3A4gBAkAgAUGAeHEiCw0AQQAhCEEAIQkMCAtBACALayEK\
QQEhCSAAIQgDQCAJQQFxRQ0EIAdBATYCjAEgByAINgKIASAIQYAIaiEIQQAhCSAKQYAIaiIKRQ0HDA\
ALC0HAACELIAdBCGpBwABqIQEgACAIIAIgAyAEIAdBCGpBwAAQHCEICyAKIAkgAiAUIAQgASALEBwh\
CQJAIAhBAUcNACAGQT9NDQMgBSAHKQAINwAAIAVBOGogB0EIakE4aikAADcAACAFQTBqIAdBCGpBMG\
opAAA3AAAgBUEoaiAHQQhqQShqKQAANwAAIAVBIGogB0EIakEgaikAADcAACAFQRhqIAdBCGpBGGop\
AAA3AAAgBUEQaiAHQQhqQRBqKQAANwAAIAVBCGogB0EIakEIaikAADcAAEECIQkMBwsgCSAIakEFdC\
IIQYEBTw0DIAdBCGogCCACIAQgBSAGECohCQwGC0GIhsAAQSNBrIbAABBgAAsgByAINgIIQeCSwABB\
KyAHQQhqQcSIwABB3IfAABBSAAtBwAAgBkHMhsAAEFUACyAIQYABQdyGwAAQVQALIAhBgHhqIQhBAS\
EJCyABQf8HcSEKAkAgBkEFdiIBIAkgCSABSxtFDQAgB0EIakEYaiIJIAJBGGopAgA3AwAgB0EIakEQ\
aiIBIAJBEGopAgA3AwAgB0EIakEIaiIMIAJBCGopAgA3AwAgByACKQIANwMIIAdBCGogCEHAACADIA\
RBAXIQGiAHQQhqIAhBwABqQcAAIAMgBBAaIAdBCGogCEGAAWpBwAAgAyAEEBogB0EIaiAIQcABakHA\
ACADIAQQGiAHQQhqIAhBgAJqQcAAIAMgBBAaIAdBCGogCEHAAmpBwAAgAyAEEBogB0EIaiAIQYADak\
HAACADIAQQGiAHQQhqIAhBwANqQcAAIAMgBBAaIAdBCGogCEGABGpBwAAgAyAEEBogB0EIaiAIQcAE\
akHAACADIAQQGiAHQQhqIAhBgAVqQcAAIAMgBBAaIAdBCGogCEHABWpBwAAgAyAEEBogB0EIaiAIQY\
AGakHAACADIAQQGiAHQQhqIAhBwAZqQcAAIAMgBBAaIAdBCGogCEGAB2pBwAAgAyAEEBogB0EIaiAI\
QcAHakHAACADIARBAnIQGiAFIAkpAwA3ABggBSABKQMANwAQIAUgDCkDADcACCAFIAcpAwg3AAAgBy\
gCjAEhCQsgCkUNACAHQZABakEwaiINQgA3AwAgB0GQAWpBOGoiDkIANwMAIAdBkAFqQcAAaiIPQgA3\
AwAgB0GQAWpByABqIhBCADcDACAHQZABakHQAGoiEUIANwMAIAdBkAFqQdgAaiISQgA3AwAgB0GQAW\
pB4ABqIhNCADcDACAHQZABakEgaiIIIAJBGGopAgA3AwAgB0GQAWpBGGoiASACQRBqKQIANwMAIAdB\
kAFqQRBqIgwgAkEIaikCADcDACAHQgA3A7gBIAcgBDoA+gEgB0EAOwH4ASAHIAIpAgA3A5gBIAcgCa\
0gA3w3A5ABIAdBkAFqIAAgC2ogChAvGiAHQQhqQRBqIAwpAwA3AwAgB0EIakEYaiABKQMANwMAIAdB\
CGpBIGogCCkDADcDACAHQQhqQTBqIA0pAwA3AwAgB0EIakE4aiAOKQMANwMAIAdBCGpBwABqIA8pAw\
A3AwAgB0EIakHIAGogECkDADcDACAHQQhqQdAAaiARKQMANwMAIAdBCGpB2ABqIBIpAwA3AwAgB0EI\
akHgAGogEykDADcDACAHIAcpA5gBNwMQIAcgBykDuAE3AzAgBy0A+gEhCiAHLQD5ASEEIAcgBy0A+A\
EiAjoAcCAHIAcpA5ABIgM3AwggByAKIARFckECciIKOgBxIAdBgAJqQRhqIgQgCCkDADcDACAHQYAC\
akEQaiIAIAEpAwA3AwAgB0GAAmpBCGoiASAMKQMANwMAIAcgBykDmAE3A4ACIAdBgAJqIAdBMGogAi\
ADIAoQGiAJQQV0IghBIGohCiAIQWBGDQEgCiAGSw0CIAQoAgAhCiAAKAIAIQQgASgCACECIAcoApQC\
IQEgBygCjAIhACAHKAKEAiEGIAcoAoACIQsgBSAIaiIIIAcoApwCNgAcIAggCjYAGCAIIAE2ABQgCC\
AENgAQIAggADYADCAIIAI2AAggCCAGNgAEIAggCzYAACAJQQFqIQkLIAdBoAJqJAAgCQ8LQWAgCkG8\
hsAAEFcACyAKIAZBvIbAABBVAAvMDgEHfyAAQXhqIgEgAEF8aigCACICQXhxIgBqIQMCQAJAIAJBAX\
ENACACQQNxRQ0BIAEoAgAiAiAAaiEAAkBBACgChJ5AIAEgAmsiAUcNACADKAIEQQNxQQNHDQFBACAA\
NgL8nUAgAyADKAIEQX5xNgIEIAEgAEEBcjYCBCABIABqIAA2AgAPCwJAAkAgAkGAAkkNACABKAIYIQ\
QCQAJAIAEoAgwiBSABRw0AIAFBFEEQIAEoAhQiBRtqKAIAIgINAUEAIQUMAwsgASgCCCICIAU2Agwg\
BSACNgIIDAILIAFBFGogAUEQaiAFGyEGA0AgBiEHAkAgAiIFQRRqIgYoAgAiAg0AIAVBEGohBiAFKA\
IQIQILIAINAAsgB0EANgIADAELAkAgAUEMaigCACIFIAFBCGooAgAiBkYNACAGIAU2AgwgBSAGNgII\
DAILQQBBACgC7JpAQX4gAkEDdndxNgLsmkAMAQsgBEUNAAJAAkAgASgCHEECdEH8nMAAaiICKAIAIA\
FGDQAgBEEQQRQgBCgCECABRhtqIAU2AgAgBUUNAgwBCyACIAU2AgAgBQ0AQQBBACgC8JpAQX4gASgC\
HHdxNgLwmkAMAQsgBSAENgIYAkAgASgCECICRQ0AIAUgAjYCECACIAU2AhgLIAEoAhQiAkUNACAFQR\
RqIAI2AgAgAiAFNgIYCwJAAkAgAygCBCICQQJxRQ0AIAMgAkF+cTYCBCABIABBAXI2AgQgASAAaiAA\
NgIADAELAkACQEEAKAKInkAgA0YNAEEAKAKEnkAgA0cNAUEAIAE2AoSeQEEAQQAoAvydQCAAaiIANg\
L8nUAgASAAQQFyNgIEIAEgAGogADYCAA8LQQAgATYCiJ5AQQBBACgCgJ5AIABqIgA2AoCeQCABIABB\
AXI2AgQCQCABQQAoAoSeQEcNAEEAQQA2AvydQEEAQQA2AoSeQAtBACgCpJ5AIgIgAE8NAkEAKAKInk\
AiAEUNAgJAQQAoAoCeQCIFQSlJDQBBlJ7AACEBA0ACQCABKAIAIgMgAEsNACADIAEoAgRqIABLDQIL\
IAEoAggiAQ0ACwsCQAJAQQAoApyeQCIADQBB/x8hAQwBC0EAIQEDQCABQQFqIQEgACgCCCIADQALIA\
FB/x8gAUH/H0sbIQELQQAgATYCrJ5AIAUgAk0NAkEAQX82AqSeQA8LIAJBeHEiBSAAaiEAAkACQAJA\
IAVBgAJJDQAgAygCGCEEAkACQCADKAIMIgUgA0cNACADQRRBECADKAIUIgUbaigCACICDQFBACEFDA\
MLIAMoAggiAiAFNgIMIAUgAjYCCAwCCyADQRRqIANBEGogBRshBgNAIAYhBwJAIAIiBUEUaiIGKAIA\
IgINACAFQRBqIQYgBSgCECECCyACDQALIAdBADYCAAwBCwJAIANBDGooAgAiBSADQQhqKAIAIgNGDQ\
AgAyAFNgIMIAUgAzYCCAwCC0EAQQAoAuyaQEF+IAJBA3Z3cTYC7JpADAELIARFDQACQAJAIAMoAhxB\
AnRB/JzAAGoiAigCACADRg0AIARBEEEUIAQoAhAgA0YbaiAFNgIAIAVFDQIMAQsgAiAFNgIAIAUNAE\
EAQQAoAvCaQEF+IAMoAhx3cTYC8JpADAELIAUgBDYCGAJAIAMoAhAiAkUNACAFIAI2AhAgAiAFNgIY\
CyADKAIUIgNFDQAgBUEUaiADNgIAIAMgBTYCGAsgASAAQQFyNgIEIAEgAGogADYCACABQQAoAoSeQE\
cNAEEAIAA2AvydQAwBCwJAAkACQCAAQYACSQ0AQR8hAwJAIABB////B0sNACAAQQYgAEEIdmciA2tB\
H3F2QQFxIANBAXRrQT5qIQMLIAFCADcCECABQRxqIAM2AgAgA0ECdEH8nMAAaiECAkACQAJAAkACQA\
JAQQAoAvCaQCIFQQEgA0EfcXQiBnFFDQAgAigCACIFKAIEQXhxIABHDQEgBSEDDAILQQAgBSAGcjYC\
8JpAIAIgATYCACABQRhqIAI2AgAMAwsgAEEAQRkgA0EBdmtBH3EgA0EfRht0IQIDQCAFIAJBHXZBBH\
FqQRBqIgYoAgAiA0UNAiACQQF0IQIgAyEFIAMoAgRBeHEgAEcNAAsLIAMoAggiACABNgIMIAMgATYC\
CCABQRhqQQA2AgAgASADNgIMIAEgADYCCAwCCyAGIAE2AgAgAUEYaiAFNgIACyABIAE2AgwgASABNg\
IIC0EAQQAoAqyeQEF/aiIBNgKsnkAgAQ0DQQAoApyeQCIADQFB/x8hAQwCCyAAQQN2IgNBA3RB9JrA\
AGohAAJAAkBBACgC7JpAIgJBASADdCIDcUUNACAAKAIIIQMMAQtBACACIANyNgLsmkAgACEDCyAAIA\
E2AgggAyABNgIMIAEgADYCDCABIAM2AggPC0EAIQEDQCABQQFqIQEgACgCCCIADQALIAFB/x8gAUH/\
H0sbIQELQQAgATYCrJ5ADwsLpgwBBn8gACABaiECAkACQAJAIAAoAgQiA0EBcQ0AIANBA3FFDQEgAC\
gCACIDIAFqIQECQEEAKAKEnkAgACADayIARw0AIAIoAgRBA3FBA0cNAUEAIAE2AvydQCACIAIoAgRB\
fnE2AgQgACABQQFyNgIEIAIgATYCAA8LAkACQCADQYACSQ0AIAAoAhghBAJAAkAgACgCDCIFIABHDQ\
AgAEEUQRAgACgCFCIFG2ooAgAiAw0BQQAhBQwDCyAAKAIIIgMgBTYCDCAFIAM2AggMAgsgAEEUaiAA\
QRBqIAUbIQYDQCAGIQcCQCADIgVBFGoiBigCACIDDQAgBUEQaiEGIAUoAhAhAwsgAw0ACyAHQQA2Ag\
AMAQsCQCAAQQxqKAIAIgUgAEEIaigCACIGRg0AIAYgBTYCDCAFIAY2AggMAgtBAEEAKALsmkBBfiAD\
QQN2d3E2AuyaQAwBCyAERQ0AAkACQCAAKAIcQQJ0QfycwABqIgMoAgAgAEYNACAEQRBBFCAEKAIQIA\
BGG2ogBTYCACAFRQ0CDAELIAMgBTYCACAFDQBBAEEAKALwmkBBfiAAKAIcd3E2AvCaQAwBCyAFIAQ2\
AhgCQCAAKAIQIgNFDQAgBSADNgIQIAMgBTYCGAsgACgCFCIDRQ0AIAVBFGogAzYCACADIAU2AhgLAk\
AgAigCBCIDQQJxRQ0AIAIgA0F+cTYCBCAAIAFBAXI2AgQgACABaiABNgIADAILAkACQEEAKAKInkAg\
AkYNAEEAKAKEnkAgAkcNAUEAIAA2AoSeQEEAQQAoAvydQCABaiIBNgL8nUAgACABQQFyNgIEIAAgAW\
ogATYCAA8LQQAgADYCiJ5AQQBBACgCgJ5AIAFqIgE2AoCeQCAAIAFBAXI2AgQgAEEAKAKEnkBHDQFB\
AEEANgL8nUBBAEEANgKEnkAPCyADQXhxIgUgAWohAQJAAkACQCAFQYACSQ0AIAIoAhghBAJAAkAgAi\
gCDCIFIAJHDQAgAkEUQRAgAigCFCIFG2ooAgAiAw0BQQAhBQwDCyACKAIIIgMgBTYCDCAFIAM2AggM\
AgsgAkEUaiACQRBqIAUbIQYDQCAGIQcCQCADIgVBFGoiBigCACIDDQAgBUEQaiEGIAUoAhAhAwsgAw\
0ACyAHQQA2AgAMAQsCQCACQQxqKAIAIgUgAkEIaigCACICRg0AIAIgBTYCDCAFIAI2AggMAgtBAEEA\
KALsmkBBfiADQQN2d3E2AuyaQAwBCyAERQ0AAkACQCACKAIcQQJ0QfycwABqIgMoAgAgAkYNACAEQR\
BBFCAEKAIQIAJGG2ogBTYCACAFRQ0CDAELIAMgBTYCACAFDQBBAEEAKALwmkBBfiACKAIcd3E2AvCa\
QAwBCyAFIAQ2AhgCQCACKAIQIgNFDQAgBSADNgIQIAMgBTYCGAsgAigCFCICRQ0AIAVBFGogAjYCAC\
ACIAU2AhgLIAAgAUEBcjYCBCAAIAFqIAE2AgAgAEEAKAKEnkBHDQFBACABNgL8nUALDwsCQCABQYAC\
SQ0AQR8hAgJAIAFB////B0sNACABQQYgAUEIdmciAmtBH3F2QQFxIAJBAXRrQT5qIQILIABCADcCEC\
AAQRxqIAI2AgAgAkECdEH8nMAAaiEDAkACQAJAAkACQEEAKALwmkAiBUEBIAJBH3F0IgZxRQ0AIAMo\
AgAiBSgCBEF4cSABRw0BIAUhAgwCC0EAIAUgBnI2AvCaQCADIAA2AgAgAEEYaiADNgIADAMLIAFBAE\
EZIAJBAXZrQR9xIAJBH0YbdCEDA0AgBSADQR12QQRxakEQaiIGKAIAIgJFDQIgA0EBdCEDIAIhBSAC\
KAIEQXhxIAFHDQALCyACKAIIIgEgADYCDCACIAA2AgggAEEYakEANgIAIAAgAjYCDCAAIAE2AggPCy\
AGIAA2AgAgAEEYaiAFNgIACyAAIAA2AgwgACAANgIIDwsgAUEDdiICQQN0QfSawABqIQECQAJAQQAo\
AuyaQCIDQQEgAnQiAnFFDQAgASgCCCECDAELQQAgAyACcjYC7JpAIAEhAgsgASAANgIIIAIgADYCDC\
AAIAE2AgwgACACNgIIC94NAQF/AkACQCAARQ0AIAAoAgANASAAQX82AgAgAEEEaiEBAkACQAJAAkAC\
QAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAAKAIEDhYAAQIDBAUGBwgJCgsMDQ\
4PEBESExQVAAsgASgCBCIBIAEpA4gDNwPAASABIAFBiAJqQYABEGEiAUG4AWogAUGAAmopAwA3AwAg\
AUGwAWogAUH4AWopAwA3AwAgAUGoAWogAUHwAWopAwA3AwAgAUGgAWogAUHoAWopAwA3AwAgAUGYAW\
ogAUHgAWopAwA3AwAgAUGQAWogAUHYAWopAwA3AwAgAUGIAWogAUHQAWopAwA3AwAgASABKQPIATcD\
gAEMFQsgASgCBCIBIAEpA4gDNwPAASABIAFBiAJqQYABEGEiAUG4AWogAUGAAmopAwA3AwAgAUGwAW\
ogAUH4AWopAwA3AwAgAUGoAWogAUHwAWopAwA3AwAgAUGgAWogAUHoAWopAwA3AwAgAUGYAWogAUHg\
AWopAwA3AwAgAUGQAWogAUHYAWopAwA3AwAgAUGIAWogAUHQAWopAwA3AwAgASABKQPIATcDgAEMFA\
sgASgCBCIBIAEpA4gDNwPAASABIAFBiAJqQYABEGEiAUG4AWogAUGAAmopAwA3AwAgAUGwAWogAUH4\
AWopAwA3AwAgAUGoAWogAUHwAWopAwA3AwAgAUGgAWogAUHoAWopAwA3AwAgAUGYAWogAUHgAWopAw\
A3AwAgAUGQAWogAUHYAWopAwA3AwAgAUGIAWogAUHQAWopAwA3AwAgASABKQPIATcDgAEMEwsgASgC\
BCIBIAEpAwg3AwAgASABKQKUATcCECABQRhqIAFBnAFqKQIANwIAIAFBIGogAUGkAWopAgA3AgAgAU\
EoaiABQawBaikCADcCACABQTBqIAFBtAFqKQIANwIAIAFBOGogAUG8AWopAgA3AgAgAUHAAGogAUHE\
AWopAgA3AgAgAUHIAGogAUHMAWopAgA3AgAgAUHoAGogAUGMAWopAgA3AgAgAUHgAGogAUGEAWopAg\
A3AgAgAUHYAGogAUH8AGopAgA3AgAgASABKQJ0NwJQDBILIAEoAgQiAUIANwMAIAEgASkDcDcDCCAB\
QSBqIAFBiAFqKQMANwMAIAFBGGogAUGAAWopAwA3AwAgAUEQaiABQfgAaikDADcDACABQShqQQBBwg\
AQZhogASgCkAFFDREgAUEANgKQAQwRCyABKAIEQQBBzAEQZhoMEAsgASgCBEEAQcwBEGYaDA8LIAEo\
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\
ACADC70CAgV/An4jAEEQayIDJAAgACAAKQMAIgggAq1CA4Z8Igk3AwAgAEEIaiIEIAQpAwAgCSAIVK\
18NwMAAkACQAJAAkACQEGAASAAKAJQIgRrIgUgAksNACAAQRBqIQYCQCAERQ0AIARBgQFPDQUgAEHU\
AGoiByAEaiABIAUQYRogAEEANgJQIANBCGogBxB5IAYgAygCCCADKAIMEA0gAiAFayECIAEgBWohAQ\
sgBiABIAJBB3YQDSAAQdQAaiABIAJBgH9xaiACQf8AcSICEGEaDAELIAQgAmoiBSAESQ0BIAVBgAFL\
DQIgAEHQAGogBGpBBGogASACEGEaIAAoAlAgAmohAgsgACACNgJQIANBEGokAA8LIAQgBUGMk8AAEF\
cACyAFQYABQYyTwAAQVQALIARBgAFBnJPAABBWAAu4AgEDfyMAQRBrIgIkAAJAIAAoAsgBIgNBxwBL\
DQAgACADakHMAWpBAToAAAJAIANBAWoiBEHIAEYNACAAIARqQcwBakEAQccAIANrEGYaC0EAIQMgAE\
EANgLIASAAQZMCaiIEIAQtAABBgAFyOgAAA0AgACADaiIEIAQtAAAgBEHMAWotAABzOgAAIANBAWoi\
A0HIAEcNAAsgABAhIAEgACkAADcAACABQThqIABBOGopAAA3AAAgAUEwaiAAQTBqKQAANwAAIAFBKG\
ogAEEoaikAADcAACABQSBqIABBIGopAAA3AAAgAUEYaiAAQRhqKQAANwAAIAFBEGogAEEQaikAADcA\
ACABQQhqIABBCGopAAA3AAAgAkEQaiQADwtBxZXAAEEXIAJBCGpB3JXAAEHUl8AAEFIAC7gCAQN/Iw\
BBEGsiAiQAAkAgACgCyAEiA0HHAEsNACAAIANqQcwBakEGOgAAAkAgA0EBaiIEQcgARg0AIAAgBGpB\
zAFqQQBBxwAgA2sQZhoLQQAhAyAAQQA2AsgBIABBkwJqIgQgBC0AAEGAAXI6AAADQCAAIANqIgQgBC\
0AACAEQcwBai0AAHM6AAAgA0EBaiIDQcgARw0ACyAAECEgASAAKQAANwAAIAFBOGogAEE4aikAADcA\
ACABQTBqIABBMGopAAA3AAAgAUEoaiAAQShqKQAANwAAIAFBIGogAEEgaikAADcAACABQRhqIABBGG\
opAAA3AAAgAUEQaiAAQRBqKQAANwAAIAFBCGogAEEIaikAADcAACACQRBqJAAPC0HFlcAAQRcgAkEI\
akHclcAAQZSYwAAQUgALsgIBBX8jAEGgAWsiAiQAIAJBADYCECACQQhqIAJBEGpBBHIgAkHUAGoQeC\
ACKAIQIQMCQCACKAIMIAIoAggiBGsiBUHAACAFQcAASRsiBkUNACAGIQUDQCAEIAEtAAA6AAAgBEEB\
aiEEIAFBAWohASAFQX9qIgUNAAsgAiADIAZqIgM2AhALAkAgA0E/Sw0AIANBwAAQWgALIAJB2ABqIA\
JBEGpBxAAQYRogAEE4aiACQZQBaikCADcAACAAQTBqIAJBjAFqKQIANwAAIABBKGogAkGEAWopAgA3\
AAAgAEEgaiACQfwAaikCADcAACAAQRhqIAJB9ABqKQIANwAAIABBEGogAkHsAGopAgA3AAAgAEEIai\
ACQeQAaikCADcAACAAIAIpAlw3AAAgAkGgAWokAAudAgEFfyMAQRBrIgMkACAAIAApAwAgAq1CA4Z8\
NwMAAkACQAJAAkACQEHAACAAKAIIIgRrIgUgAksNACAAQcwAaiEGAkAgBEUNACAEQcEATw0FIABBDG\
oiByAEaiABIAUQYRogAEEANgIIIANBCGogBxB6IAYgAygCCCADKAIMEBAgAiAFayECIAEgBWohAQsg\
BiABIAJBBnYQECAAQQxqIAEgAkFAcWogAkE/cSICEGEaDAELIAQgAmoiBSAESQ0BIAVBwABLDQIgAE\
EIaiAEakEEaiABIAIQYRogACgCCCACaiECCyAAIAI2AgggA0EQaiQADwsgBCAFQYyTwAAQVwALIAVB\
wABBjJPAABBVAAsgBEHAAEGck8AAEFYAC60CAQN/AkACQAJAAkACQAJAAkAgACgCyAEiAyAAKALMAS\
IEayIFIAJNDQAgBCACaiIDIARJDQEgA0HIAUsNAiABIAAgBGogAhBhGiAAIAM2AswBDwsgAyAESQ0C\
IANByAFLDQMgASAFaiEDIAEgACAEaiAFEGEaIAAQIQJAIAIgBWsiAiAAKALIASIESQ0AA0AgBEHJAU\
8NByADIAAgBBBhIQMgABAhIAMgBGohAyACIARrIgIgACgCyAEiBE8NAAsLIAAgAjYCzAEgAkHJAU8N\
BCADIAAgAhBhGg8LIAQgA0Hck8AAEFcACyADQcgBQdyTwAAQVQALIAQgA0Hsk8AAEFcACyADQcgBQe\
yTwAAQVQALIAJByAFB/JPAABBVAAsgBEHIAUGMlMAAEFUAC7UDAgJ/AX4jAEEwayICJAACQAJAIAFB\
/wFxIgNBf2pBP0sNACABrSIEQoD+A4NCgIABVg0BIABBAEGAARBmIgEgAzYCkAMgAUIANwPAASABQb\
gBakL5wvibkaOz8NsANwMAIAFBsAFqQuv6htq/tfbBHzcDACABQagBakKf2PnZwpHagpt/NwMAIAFB\
oAFqQtGFmu/6z5SH0QA3AwAgAUGYAWpC8e30+KWn/aelfzcDACABQZABakKr8NP0r+68tzw3AwAgAU\
GIAWpCu86qptjQ67O7fzcDACABIARCiJL3lf/M+YTqAIUiBDcDgAEgAUGAAmpC+cL4m5Gjs/DbADcD\
ACABQfgBakLr+obav7X2wR83AwAgAUHwAWpCn9j52cKR2oKbfzcDACABQegBakLRhZrv+s+Uh9EANw\
MAIAFB4AFqQvHt9Pilp/2npX83AwAgAUHYAWpCq/DT9K/uvLc8NwMAIAFB0AFqQrvOqqbY0Ouzu383\
AwAgASAENwPIASABQYgCakEAQYgBEGYaIAJBMGokAA8LQcODwABBMkHMjcAAEGAAC0Gcg8AAQSdBzI\
3AABBgAAufAgIEfwF+IABBCGohAiAAKQMAIQYCQAJAAkACQCAAKAIcIgNBwABHDQAgAiAAQSBqEBNB\
ACEDIABBADYCHAwBCyADQT9LDQELIABBIGoiBCADakGAAToAACAAIAAoAhwiBUEBaiIDNgIcAkAgA0\
HBAE8NACAAQRxqIANqQQRqQQBBPyAFaxBmGgJAQcAAIAAoAhxrQQhPDQAgAiAEEBMgACgCHCIDQcEA\
Tw0DIARBACADEGYaCyAAQdgAaiAGQgOGNwMAIAIgBBATIABBADYCHCABIAAoAgg2AAAgASAAQQxqKQ\
IANwAEIAEgAEEUaikCADcADA8LIANBwABBrJPAABBWAAsgA0HAAEG8k8AAEFkACyADQcAAQcyTwAAQ\
VQALmAIBA38jAEEQayICJAACQCAAKALIASIDQecASw0AIAAgA2pBzAFqQQE6AAACQCADQQFqIgRB6A\
BGDQAgACAEakHMAWpBAEHnACADaxBmGgtBACEDIABBADYCyAEgAEGzAmoiBCAELQAAQYABcjoAAANA\
IAAgA2oiBCAELQAAIARBzAFqLQAAczoAACADQQFqIgNB6ABHDQALIAAQISABIAApAAA3AAAgAUEoai\
AAQShqKQAANwAAIAFBIGogAEEgaikAADcAACABQRhqIABBGGopAAA3AAAgAUEQaiAAQRBqKQAANwAA\
IAFBCGogAEEIaikAADcAACACQRBqJAAPC0HFlcAAQRcgAkEIakHclcAAQcSXwAAQUgALmAIBA38jAE\
EQayICJAACQCAAKALIASIDQecASw0AIAAgA2pBzAFqQQY6AAACQCADQQFqIgRB6ABGDQAgACAEakHM\
AWpBAEHnACADaxBmGgtBACEDIABBADYCyAEgAEGzAmoiBCAELQAAQYABcjoAAANAIAAgA2oiBCAELQ\
AAIARBzAFqLQAAczoAACADQQFqIgNB6ABHDQALIAAQISABIAApAAA3AAAgAUEoaiAAQShqKQAANwAA\
IAFBIGogAEEgaikAADcAACABQRhqIABBGGopAAA3AAAgAUEQaiAAQRBqKQAANwAAIAFBCGogAEEIai\
kAADcAACACQRBqJAAPC0HFlcAAQRcgAkEIakHclcAAQYSYwAAQUgALmgICAX8CfiAAKQPAASIEp0H/\
AHEhAwJAAkACQAJAAkAgBFANACADRQ0BCyAAIANqIAEgAkGAASADayIDIAMgAksbIgMQYRogACkDwA\
EiBCADrXwiBSAEVA0BIAAgBTcDwAEgAiADayECIAEgA2ohAQsCQCACQYABSQ0AA0AgAEIAEBIgACAB\
QYABEGEiAykDwAEiBEKAAXwiBSAEVA0DIAMgBTcDwAEgAUGAAWohASACQYB/aiICQYABTw0ACwsCQC\
ACRQ0AIABCABASIAAgASACEGEiASkDwAEiBCACrXwiBSAEVA0DIAEgBTcDwAELDwtB1YTAAEHMjcAA\
EFwAC0HVhMAAQcyNwAAQXAALQdWEwABBzI3AABBcAAuUAgIEfwF+IABBzABqIQIgACkDACEGAkACQA\
JAAkAgACgCCCIDQcAARw0AIAIgAEEMahAbQQAhAyAAQQA2AggMAQsgA0E/Sw0BCyAAQQxqIgQgA2pB\
gAE6AAAgACAAKAIIIgVBAWoiAzYCCAJAIANBwQBPDQAgAEEIaiADakEEakEAQT8gBWsQZhoCQEHAAC\
AAKAIIa0EITw0AIAIgBBAbIAAoAggiA0HBAE8NAyAEQQAgAxBmGgsgAEHEAGogBkIDhjcCACACIAQQ\
GyAAQQA2AgggASAAKQJMNwAAIAEgAEHUAGopAgA3AAgPCyADQcAAQayTwAAQVgALIANBwABBvJPAAB\
BZAAsgA0HAAEHMk8AAEFUAC/gBAQN/IwBBEGsiAiQAAkAgACgCyAEiA0GPAUsNACAAIANqQcwBakEB\
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\
4IHAABBgAAsRAEGMgsAAQS9BvILAABBgAAsNACAAKAIAGgN/DAALCwsAIAAjAGokACMACwsAIAA1Ag\
AgARAxCw0AQfiZwABBGxCDAQALDgBBk5rAAEHPABCDAQALCQAgACABEAsACwcAIAAQDAALDABCk72/\
j/7t1N8DCwMAAAsCAAsCAAsL7JqAgAABAEGAgMAAC+IaQkxBS0UyQkJMQUtFMkItMjU2QkxBS0UyQi\
0zODRCTEFLRTJTQkxBS0UzS0VDQ0FLLTIyNEtFQ0NBSy0yNTZLRUNDQUstMzg0S0VDQ0FLLTUxMk1E\
NVJJUEVNRC0xNjBTSEEtMVNIQS0yMjRTSEEtMjU2U0hBLTM4NFNIQS01MTJ1bnN1cHBvcnRlZCBhbG\
dvcml0aG1ub24tZGVmYXVsdCBsZW5ndGggc3BlY2lmaWVkIGZvciBub24tZXh0ZW5kYWJsZSBhbGdv\
cml0aG1jYXBhY2l0eSBvdmVyZmxvdwDwABAAHAAAADACAAAFAAAAbGlicmFyeS9hbGxvYy9zcmMvcm\
F3X3ZlYy5yc0FycmF5VmVjOiBjYXBhY2l0eSBleGNlZWRlZCBpbiBleHRlbmQvZnJvbV9pdGVyAEwB\
EABQAAAA8AMAAAUAAAB+Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOW\
VjODIzL2FycmF5dmVjLTAuNy4xL3NyYy9hcnJheXZlYy5yc2Fzc2VydGlvbiBmYWlsZWQ6IGtrIDw9\
IFU2NDo6dG9fdXNpemUoKWFzc2VydGlvbiBmYWlsZWQ6IG5uID49IDEgJiYgbm4gPD0gVTY0Ojp0b1\
91c2l6ZSgpAAAACAIQAE0AAAAEAAAAAQAAAH4vLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29t\
LTFlY2M2Mjk5ZGI5ZWM4MjMvYmxha2UyLTAuOS4xL3NyYy9ibGFrZTJzLnJzaGFzaCBkYXRhIGxlbm\
d0aCBvdmVyZmxvd34vLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4\
MjMvYmxha2UzLTEuMC4wL3NyYy9saWIucnMAbgIQAEkAAAC7AQAACQAAAG4CEABJAAAAAwMAABkAAA\
BuAhAASQAAAAUDAAAJAAAAbgIQAEkAAAAFAwAAOAAAAG4CEABJAAAAjwIAAAkAAABhc3NlcnRpb24g\
ZmFpbGVkOiBtaWQgPD0gc2VsZi5sZW4oKQB4ChAATQAAAOMFAAAJAAAAbgIQAEkAAABhAgAACgAAAG\
4CEABJAAAA2AIAAAkAAABuAhAASQAAAN8CAAAKAAAAbgIQAEkAAACtBAAAFgAAAG4CEABJAAAAvwQA\
ABYAAABuAhAASQAAAPsDAAAyAAAAbgIQAEkAAADwBAAAEgAAAG4CEABJAAAA+gQAABIAAABuAhAASQ\
AAAGcFAAAhAAAAEQAAAAQAAAAEAAAAEgAAAOwDEABVAAAAJwAAACAAAAB+Ly5jYXJnby9yZWdpc3Ry\
eS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL2FycmF5dmVjLTAuNy4xL3NyYy9hcnJheX\
ZlY19pbXBsLnJzAAAAEQAAAAQAAAAEAAAAEgAAABEAAAAgAAAAAQAAABMAAACJBBAADQAAAHQEEAAV\
AAAAaW5zdWZmaWNpZW50IGNhcGFjaXR5Q2FwYWNpdHlFcnJvclBhZEVycm9yAADABBAAIAAAAOAEEA\
ASAAAAEQAAAAAAAAABAAAAFAAAAGluZGV4IG91dCBvZiBib3VuZHM6IHRoZSBsZW4gaXMgIGJ1dCB0\
aGUgaW5kZXggaXMgMDAwMTAyMDMwNDA1MDYwNzA4MDkxMDExMTIxMzE0MTUxNjE3MTgxOTIwMjEyMj\
IzMjQyNTI2MjcyODI5MzAzMTMyMzMzNDM1MzYzNzM4Mzk0MDQxNDI0MzQ0NDU0NjQ3NDg0OTUwNTE1\
MjUzNTQ1NTU2NTc1ODU5NjA2MTYyNjM2NDY1NjY2NzY4Njk3MDcxNzI3Mzc0NzU3Njc3Nzg3OTgwOD\
E4MjgzODQ4NTg2ODc4ODg5OTA5MTkyOTM5NDk1OTY5Nzk4OTkAAMwFEAAQAAAA3AUQACIAAAByYW5n\
ZSBlbmQgaW5kZXggIG91dCBvZiByYW5nZSBmb3Igc2xpY2Ugb2YgbGVuZ3RoIAAAEAYQABIAAADcBR\
AAIgAAAHJhbmdlIHN0YXJ0IGluZGV4IAAANAYQABYAAABKBhAADQAAAHNsaWNlIGluZGV4IHN0YXJ0\
cyBhdCAgYnV0IGVuZHMgYXQgAJgMEAAAAAAAmAwQAAAAAABwBhAAAgAAADogKQCMBhAAFQAAAKEGEA\
ArAAAAcgYQAAEAAABzb3VyY2Ugc2xpY2UgbGVuZ3RoICgpIGRvZXMgbm90IG1hdGNoIGRlc3RpbmF0\
aW9uIHNsaWNlIGxlbmd0aCAo3AYQAE0AAAAEAAAAAQAAAH4vLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naX\
RodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvYmxha2UyLTAuOS4xL3NyYy9ibGFrZTJiLnJzAAAATAcQ\
ACEAAABtBxAAFwAAAEQMEABRAAAAZwEAAAUAAABHZW5lcmljQXJyYXk6OmZyb21faXRlciByZWNlaX\
ZlZCAgZWxlbWVudHMgYnV0IGV4cGVjdGVkIGNsb3N1cmUgaW52b2tlZCByZWN1cnNpdmVseSBvciBk\
ZXN0cm95ZWQgYWxyZWFkeQAAAAABAAAAAAAAAIKAAAAAAAAAioAAAAAAAIAAgACAAAAAgIuAAAAAAA\
AAAQAAgAAAAACBgACAAAAAgAmAAAAAAACAigAAAAAAAACIAAAAAAAAAAmAAIAAAAAACgAAgAAAAACL\
gACAAAAAAIsAAAAAAACAiYAAAAAAAIADgAAAAAAAgAKAAAAAAACAgAAAAAAAAIAKgAAAAAAAAAoAAI\
AAAACAgYAAgAAAAICAgAAAAAAAgAEAAIAAAAAACIAAgAAAAIABI0VniavN7/7cuph2VDIQASNFZ4mr\
ze/+3LqYdlQyEPDh0sPYngXBB9V8NhfdcDA5WQ73MQvA/xEVWGinj/lkpE/6vmfmCWqFrme7cvNuPD\
r1T6V/Ug5RjGgFm6vZgx8ZzeBbAAAAANieBcFdnbvLB9V8NiopmmIX3XAwWgFZkTlZDvfY7C8VMQvA\
/2cmM2cRFVhoh0q0jqeP+WQNLgzbpE/6vh1ItUcIybzzZ+YJajunyoSFrme7K/iU/nLzbjzxNh1fOv\
VPpdGC5q1/Ug5RH2w+K4xoBZtrvUH7q9mDH3khfhMZzeBbY2FsbGVkIGBSZXN1bHQ6OnVud3JhcCgp\
YCBvbiBhbiBgRXJyYCB2YWx1ZQBkCxAATwAAADoAAAANAAAAZAsQAE8AAABBAAAADQAAAGQLEABPAA\
AAhwAAABcAAABkCxAATwAAAIQAAAAJAAAAZAsQAE8AAACLAAAAGwAAABwKEABKAAAAJAAAACkAAAAc\
ChAASgAAAB8AAAAkAAAAHAoQAEoAAAA3AAAAJQAAABwKEABKAAAALwAAACQAAAB+Ly5jYXJnby9yZW\
dpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3NoYTMtMC45LjEvc3JjL3JlYWRl\
ci5ycwAAeAoQAE0AAADyCwAADQAAAC9ydXN0Yy9hMTc4ZDAzMjJjZTIwZTMzZWFjMTI0NzU4ZTgzN2\
NiZDgwYTZmNjMzL2xpYnJhcnkvY29yZS9zcmMvc2xpY2UvbW9kLnJzd2UgbmV2ZXIgdXNlIGlucHV0\
X2xhenkRAAAAAAAAAAEAAAAVAAAA/AoQAEcAAABBAAAAAQAAAH4vLmNhcmdvL3JlZ2lzdHJ5L3NyYy\
9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvc2hhMy0wLjkuMS9zcmMvbGliLnJzAGQLEABPAAAA\
GwAAAA0AAABkCxAATwAAACIAAAANAAAAfi8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi5jb20tMW\
VjYzYyOTlkYjllYzgyMy9ibG9jay1idWZmZXItMC45LjAvc3JjL2xpYi5ycwD8ChAARwAAAEgAAAAB\
AAAA/AoQAEcAAABPAAAAAQAAAPwKEABHAAAAVgAAAAEAAAD8ChAARwAAAGYAAAABAAAA/AoQAEcAAA\
BtAAAAAQAAAPwKEABHAAAAdAAAAAEAAAD8ChAARwAAAHsAAAABAAAA/AoQAEcAAACDAAAAAQAAAPwK\
EABHAAAAiQAAAAEAAAB+Ly5jYXJnby9yZWdpc3RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOW\
VjODIzL2dlbmVyaWMtYXJyYXktMC4xNC40L3NyYy9saWIucnMAAABjYWxsZWQgYE9wdGlvbjo6dW53\
cmFwKClgIG9uIGEgYE5vbmVgIHZhbHVlANQMEAAcAAAAAgIAAB4AAABsaWJyYXJ5L3N0ZC9zcmMvcG\
FuaWNraW5nLnJzBAAAAAAAAABudWxsIHBvaW50ZXIgcGFzc2VkIHRvIHJ1c3RyZWN1cnNpdmUgdXNl\
IG9mIGFuIG9iamVjdCBkZXRlY3RlZCB3aGljaCB3b3VsZCBsZWFkIHRvIHVuc2FmZSBhbGlhc2luZy\
BpbiBydXN0AL3CgIAABG5hbWUBssKAgACJAQBFanNfc3lzOjpUeXBlRXJyb3I6Om5ldzo6X193Ymdf\
bmV3X2Y4NWRiZGZiOWNkYmUyZWM6Omg3MDlkY2EyNzFmN2JhYTE2ATt3YXNtX2JpbmRnZW46Ol9fd2\
JpbmRnZW5fb2JqZWN0X2Ryb3BfcmVmOjpoYmQ5MmI3MDA0NDU4MDI2YQJVanNfc3lzOjpVaW50OEFy\
cmF5OjpieXRlX2xlbmd0aDo6X193YmdfYnl0ZUxlbmd0aF9lMDUxNWJjOTRjZmM1ZGVlOjpoNjVhOD\
c1ZDY3NDNkNWRhYwNVanNfc3lzOjpVaW50OEFycmF5OjpieXRlX29mZnNldDo6X193YmdfYnl0ZU9m\
ZnNldF83N2VlYzg0NzE2YTJlNzM3OjpoMjY1Y2E5ODI5MTFjNzQ1YwRManNfc3lzOjpVaW50OEFycm\
F5OjpidWZmZXI6Ol9fd2JnX2J1ZmZlcl8xYzU5MThhNGFiNjU2ZmY3OjpoOWYzNzNkMWY1YWIxY2Mz\
NwV5anNfc3lzOjpVaW50OEFycmF5OjpuZXdfd2l0aF9ieXRlX29mZnNldF9hbmRfbGVuZ3RoOjpfX3\
diZ19uZXd3aXRoYnl0ZW9mZnNldGFuZGxlbmd0aF9lNTdhZDFmMmNlODEyYzAzOjpoOTI4ODg0ZGNk\
MGQ4NGVkOQZManNfc3lzOjpVaW50OEFycmF5OjpsZW5ndGg6Ol9fd2JnX2xlbmd0aF8yZDU2Y2IzNz\
A3NWZjZmIxOjpoNjg1ZjJkMDRmZjU4MWI2Mgcyd2FzbV9iaW5kZ2VuOjpfX3diaW5kZ2VuX21lbW9y\
eTo6aDRmMDFkZTFlYzAwZTRjNDgIVWpzX3N5czo6V2ViQXNzZW1ibHk6Ok1lbW9yeTo6YnVmZmVyOj\
pfX3diZ19idWZmZXJfOWUxODRkNmY3ODVkZTVlZDo6aDM1ZTVhYmQyYTA4ZjQ4NzEJRmpzX3N5czo6\
VWludDhBcnJheTo6bmV3OjpfX3diZ19uZXdfZTgxMDEzMTllNGNmOTVmYzo6aGEyZWJkOWZjM2JmNm\
MwN2MKRmpzX3N5czo6VWludDhBcnJheTo6c2V0OjpfX3diZ19zZXRfZThhZTdiMjczMTRlOGI5ODo6\
aDNhZmEzODc1YTIxZWQxNDkLMXdhc21fYmluZGdlbjo6X193YmluZGdlbl90aHJvdzo6aGIzZjk1NG\
FjZWQxZmRjNDcMM3dhc21fYmluZGdlbjo6X193YmluZGdlbl9yZXRocm93OjpoN2RhMGI4MTY1NjEy\
N2VhYw0vc2hhMjo6c2hhNTEyOjpzb2Z0Ojpjb21wcmVzczo6aDNlNTYyZGI2NWI5NjJiOTQOQGRlbm\
9fc3RkX3dhc21fY3J5cHRvOjpkaWdlc3Q6OkNvbnRleHQ6OmRpZ2VzdDo6aGM4OGI2YzYyOGYyNTJm\
MGIPSmRlbm9fc3RkX3dhc21fY3J5cHRvOjpkaWdlc3Q6OkNvbnRleHQ6OmRpZ2VzdF9hbmRfcmVzZX\
Q6Omg2ODBhY2YyZWVmM2NlMzU4EC9zaGEyOjpzaGEyNTY6OnNvZnQ6OmNvbXByZXNzOjpoYWQzN2Jj\
N2JhNjFhMzUxYRFAZGVub19zdGRfd2FzbV9jcnlwdG86OmRpZ2VzdDo6Q29udGV4dDo6dXBkYXRlOj\
poMTQzODVjNTZkMzUyOTg4ORI4Ymxha2UyOjpibGFrZTJiOjpWYXJCbGFrZTJiOjpjb21wcmVzczo6\
aGIyMzliOTc5YTUyZjU2YTATNnJpcGVtZDE2MDo6YmxvY2s6OnByb2Nlc3NfbXNnX2Jsb2NrOjpoMD\
QyZDgzNDEwNWVlMjJhYRQ4Ymxha2UyOjpibGFrZTJzOjpWYXJCbGFrZTJzOjpjb21wcmVzczo6aGJk\
NGFhMjljMmY1ZWQ1N2EVK3NoYTE6OmNvbXByZXNzOjpjb21wcmVzczo6aDRmMDQ5MTJmYWNhOWFmMz\
cWOmRsbWFsbG9jOjpkbG1hbGxvYzo6RGxtYWxsb2M8QT46Om1hbGxvYzo6aDQ3Nzk3YTUxNjJmOWYw\
NjcXO2Rlbm9fc3RkX3dhc21fY3J5cHRvOjpEaWdlc3RDb250ZXh0OjpuZXc6Omg5MzBiOTFkZjNhMz\
Q5N2I0GBNkaWdlc3Rjb250ZXh0X2Nsb25lGS1ibGFrZTM6Ok91dHB1dFJlYWRlcjo6ZmlsbDo6aDkx\
ZDAxM2RhMzU1ZWE3M2QaNmJsYWtlMzo6cG9ydGFibGU6OmNvbXByZXNzX2luX3BsYWNlOjpoZjUwZT\
MxZWQ1OTczMjA2MRsnbWQ1Ojp1dGlsczo6Y29tcHJlc3M6OmhjN2UyN2I1MGFjZTk0YWE0HDBibGFr\
ZTM6OmNvbXByZXNzX3N1YnRyZWVfd2lkZTo6aGE1NWY0OWYzYjM2NWIyOGIdOGRsbWFsbG9jOjpkbG\
1hbGxvYzo6RGxtYWxsb2M8QT46OmZyZWU6OmhlMWIwZmJjYTNmZmQ0YjExHkFkbG1hbGxvYzo6ZGxt\
YWxsb2M6OkRsbWFsbG9jPEE+OjpkaXNwb3NlX2NodW5rOjpoYjQ4OGJkYzllMTQwM2I1ZB8TZGlnZX\
N0Y29udGV4dF9yZXNldCAvYmxha2UzOjpIYXNoZXI6OmZpbmFsaXplX3hvZjo6aGNlMTE5MmIxOTIx\
MmY4YzYhIGtlY2Nhazo6ZjE2MDA6Omg5MjVlNzU3MWUxMGIwOTdkIixjb3JlOjpmbXQ6OkZvcm1hdH\
Rlcjo6cGFkOjpoOTdkZjJiY2Y2YzIzNDBiMCMOX19ydXN0X3JlYWxsb2MkYTxzaGEyOjpzaGE1MTI6\
OlNoYTUxMiBhcyBkaWdlc3Q6OmZpeGVkOjpGaXhlZE91dHB1dERpcnR5Pjo6ZmluYWxpemVfaW50b1\
9kaXJ0eTo6aGExNDE3YzRmYzRjNTdmN2ElMWJsYWtlMzo6SGFzaGVyOjptZXJnZV9jdl9zdGFjazo6\
aDk3NTcwNzdiNWM0Zjg5ZjgmI2NvcmU6OmZtdDo6d3JpdGU6OmhlNGIyY2QxOWQxMjFhMzk5JzVjb3\
JlOjpmbXQ6OkZvcm1hdHRlcjo6cGFkX2ludGVncmFsOjpoOTNkNDQxMTdlMGQwMzU3MihhPHNoYTI6\
OnNoYTUxMjo6U2hhMzg0IGFzIGRpZ2VzdDo6Zml4ZWQ6OkZpeGVkT3V0cHV0RGlydHk+OjpmaW5hbG\
l6ZV9pbnRvX2RpcnR5OjpoM2Y2NzBjMWJmMzEwMjU1ZilXPHNoYTE6OlNoYTEgYXMgZGlnZXN0Ojpm\
aXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZpbmFsaXplX2ludG9fZGlydHk6OmhiM2Y0MDQ0MWEwNj\
UxZThjKjRibGFrZTM6OmNvbXByZXNzX3BhcmVudHNfcGFyYWxsZWw6OmgwZGFmZTk2YjY5OGIwNjk2\
K0NkaWdlc3Q6OnZhcmlhYmxlOjpWYXJpYWJsZU91dHB1dDo6ZmluYWxpemVfYm94ZWQ6OmgzM2QxNz\
UyZmJjZTI1ZWNmLDJzaGEyOjpzaGE1MTI6OkVuZ2luZTUxMjo6ZmluaXNoOjpoNjRiMTllNjgzZDc1\
YWNlNC1hPHNoYTI6OnNoYTI1Njo6U2hhMjU2IGFzIGRpZ2VzdDo6Zml4ZWQ6OkZpeGVkT3V0cHV0RG\
lydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoN2RkMjZjNzFhN2FmNDZjYy4yc2hhMjo6c2hhMjU2\
OjpFbmdpbmUyNTY6OmZpbmlzaDo6aGFkNjE5NWQ0NTA2ZWQ0YmUvLWJsYWtlMzo6Q2h1bmtTdGF0ZT\
o6dXBkYXRlOjpoYWM4NGNjMWM3YjFkMGMzZDBhPHNoYTI6OnNoYTI1Njo6U2hhMjI0IGFzIGRpZ2Vz\
dDo6Zml4ZWQ6OkZpeGVkT3V0cHV0RGlydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoYTY5YmU2Ym\
UwYTA1OThhNTEvY29yZTo6Zm10OjpudW06OmltcDo6Zm10X3U2NDo6aDcxZTYyNGMyZDM5Yjc3MWUy\
ODxEIGFzIGRpZ2VzdDo6ZGlnZXN0OjpEaWdlc3Q+Ojp1cGRhdGU6OmgyOTlhODc2YTZmYWM1ODc3M1\
w8c2hhMzo6S2VjY2FrNTEyIGFzIGRpZ2VzdDo6Zml4ZWQ6OkZpeGVkT3V0cHV0RGlydHk+OjpmaW5h\
bGl6ZV9pbnRvX2RpcnR5OjpoYmE0ZjRkNzAxYWViOTAxYTRbPHNoYTM6OlNoYTNfNTEyIGFzIGRpZ2\
VzdDo6Zml4ZWQ6OkZpeGVkT3V0cHV0RGlydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoNjZlNzAy\
NGQ4ZjE0OTZlNzVuZ2VuZXJpY19hcnJheTo6aW1wbHM6OjxpbXBsIGNvcmU6OmNsb25lOjpDbG9uZS\
Bmb3IgZ2VuZXJpY19hcnJheTo6R2VuZXJpY0FycmF5PFQsTj4+OjpjbG9uZTo6aGJjZjUyZmI5ZDc2\
NTQyN2M2ODxEIGFzIGRpZ2VzdDo6ZGlnZXN0OjpEaWdlc3Q+Ojp1cGRhdGU6OmhjMjM2OTI5MmE1Yj\
ExMGRkN1A8c2hhMzo6cmVhZGVyOjpTaGEzWG9mUmVhZGVyIGFzIGRpZ2VzdDo6eG9mOjpYb2ZSZWFk\
ZXI+OjpyZWFkOjpoOTUwZGVhMDUzOWQ1OTQyYTg7Ymxha2UyOjpibGFrZTJiOjpWYXJCbGFrZTJiOj\
p3aXRoX3BhcmFtczo6aGFjYjVjODIwMmY5NTI0OWY5YTxyaXBlbWQxNjA6OlJpcGVtZDE2MCBhcyBk\
aWdlc3Q6OmZpeGVkOjpGaXhlZE91dHB1dERpcnR5Pjo6ZmluYWxpemVfaW50b19kaXJ0eTo6aDcyYz\
IxZGU5YTJmYjA3OTI6XDxzaGEzOjpLZWNjYWszODQgYXMgZGlnZXN0OjpmaXhlZDo6Rml4ZWRPdXRw\
dXREaXJ0eT46OmZpbmFsaXplX2ludG9fZGlydHk6OmgyOTM5NzMyNGI1NjMzOTMwO1s8c2hhMzo6U2\
hhM18zODQgYXMgZGlnZXN0OjpmaXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZpbmFsaXplX2ludG9f\
ZGlydHk6OmhlMTBjNWZjZjE1NmQyNzU3PDZibGFrZTI6OmJsYWtlMmI6OlZhckJsYWtlMmI6OnVwZG\
F0ZTo6aDIyNTAyYzM1YjhiM2EyNmE9VTxtZDU6Ok1kNSBhcyBkaWdlc3Q6OmZpeGVkOjpGaXhlZE91\
dHB1dERpcnR5Pjo6ZmluYWxpemVfaW50b19kaXJ0eTo6aDI3Mzk0OTRiMmNmODFlMjU+XDxzaGEzOj\
pLZWNjYWsyMjQgYXMgZGlnZXN0OjpmaXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZpbmFsaXplX2lu\
dG9fZGlydHk6OmgwMDJmYzdlMzJkMTczN2U0P1w8c2hhMzo6S2VjY2FrMjU2IGFzIGRpZ2VzdDo6Zm\
l4ZWQ6OkZpeGVkT3V0cHV0RGlydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoNjQzODI3OTBlYmE2\
MzUzMUBbPHNoYTM6OlNoYTNfMjI0IGFzIGRpZ2VzdDo6Zml4ZWQ6OkZpeGVkT3V0cHV0RGlydHk+Oj\
pmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoZWI2NzkzZWE1NjFkNDVlMEFbPHNoYTM6OlNoYTNfMjU2IGFz\
IGRpZ2VzdDo6Zml4ZWQ6OkZpeGVkT3V0cHV0RGlydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoYm\
M5ZTdhOTg0ODNmZjg2YUIGZGlnZXN0Qz5kZW5vX3N0ZF93YXNtX2NyeXB0bzo6RGlnZXN0Q29udGV4\
dDo6dXBkYXRlOjpoYjdlYTNiN2NkMjE0OTNmYURuZ2VuZXJpY19hcnJheTo6aW1wbHM6OjxpbXBsIG\
NvcmU6OmNsb25lOjpDbG9uZSBmb3IgZ2VuZXJpY19hcnJheTo6R2VuZXJpY0FycmF5PFQsTj4+Ojpj\
bG9uZTo6aDM5NTdhYzJmNzMyZWM4OTRFbmdlbmVyaWNfYXJyYXk6OmltcGxzOjo8aW1wbCBjb3JlOj\
pjbG9uZTo6Q2xvbmUgZm9yIGdlbmVyaWNfYXJyYXk6OkdlbmVyaWNBcnJheTxULE4+Pjo6Y2xvbmU6\
OmhkZWVjMGM1Nzg2M2Y4NDU0Rm5nZW5lcmljX2FycmF5OjppbXBsczo6PGltcGwgY29yZTo6Y2xvbm\
U6OkNsb25lIGZvciBnZW5lcmljX2FycmF5OjpHZW5lcmljQXJyYXk8VCxOPj46OmNsb25lOjpoNjNk\
YThlYjYyYTliOTcxM0duZ2VuZXJpY19hcnJheTo6aW1wbHM6OjxpbXBsIGNvcmU6OmNsb25lOjpDbG\
9uZSBmb3IgZ2VuZXJpY19hcnJheTo6R2VuZXJpY0FycmF5PFQsTj4+OjpjbG9uZTo6aDkwNDk2YWM3\
ZTI4NDc1NTJIbmdlbmVyaWNfYXJyYXk6OmltcGxzOjo8aW1wbCBjb3JlOjpjbG9uZTo6Q2xvbmUgZm\
9yIGdlbmVyaWNfYXJyYXk6OkdlbmVyaWNBcnJheTxULE4+Pjo6Y2xvbmU6Omg2MTEzOTkwZjljNThj\
YzMzSW5nZW5lcmljX2FycmF5OjppbXBsczo6PGltcGwgY29yZTo6Y2xvbmU6OkNsb25lIGZvciBnZW\
5lcmljX2FycmF5OjpHZW5lcmljQXJyYXk8VCxOPj46OmNsb25lOjpoZDYwODQ5NTllYjY0YjQ3OEpd\
PHNoYTM6OlNoYWtlMTI4IGFzIGRpZ2VzdDo6eG9mOjpFeHRlbmRhYmxlT3V0cHV0RGlydHk+OjpmaW\
5hbGl6ZV94b2ZfZGlydHk6Omg1MjMxNTEzODA5MzQ5ZjZjS108c2hhMzo6U2hha2UyNTYgYXMgZGln\
ZXN0Ojp4b2Y6OkV4dGVuZGFibGVPdXRwdXREaXJ0eT46OmZpbmFsaXplX3hvZl9kaXJ0eTo6aDk4Mz\
liN2M5YzNjNDY5Y2VMG2RpZ2VzdGNvbnRleHRfZGlnZXN0QW5kRHJvcE0tanNfc3lzOjpVaW50OEFy\
cmF5Ojp0b192ZWM6Omg1Y2U2YjY2NDY0MTIxMWMzTj93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3\
N1cmVzOjppbnZva2UzX211dDo6aGJjZWViODU0YzdiMThlYTZPFGRpZ2VzdGNvbnRleHRfZGlnZXN0\
UBxkaWdlc3Rjb250ZXh0X2RpZ2VzdEFuZFJlc2V0URFkaWdlc3Rjb250ZXh0X25ld1IuY29yZTo6cm\
VzdWx0Ojp1bndyYXBfZmFpbGVkOjpoZTg3YzRkYTQ4NzQ2ZTg5NlNQPGFycmF5dmVjOjplcnJvcnM6\
OkNhcGFjaXR5RXJyb3I8VD4gYXMgY29yZTo6Zm10OjpEZWJ1Zz46OmZtdDo6aDc4ZTEwNjA4MTVjMT\
kwOTVUUDxhcnJheXZlYzo6ZXJyb3JzOjpDYXBhY2l0eUVycm9yPFQ+IGFzIGNvcmU6OmZtdDo6RGVi\
dWc+OjpmbXQ6Omg5YTdkOThjNTFmYzVmY2U1VT9jb3JlOjpzbGljZTo6aW5kZXg6OnNsaWNlX2VuZF\
9pbmRleF9sZW5fZmFpbDo6aDdlZmIwZjAwZmJjYzkyOGJWQWNvcmU6OnNsaWNlOjppbmRleDo6c2xp\
Y2Vfc3RhcnRfaW5kZXhfbGVuX2ZhaWw6Omg3MDg2MDViYjhmZWJkMmY0Vz1jb3JlOjpzbGljZTo6aW\
5kZXg6OnNsaWNlX2luZGV4X29yZGVyX2ZhaWw6Omg5OThlNjA1YjRhZjk0YjdiWE5jb3JlOjpzbGlj\
ZTo6PGltcGwgW1RdPjo6Y29weV9mcm9tX3NsaWNlOjpsZW5fbWlzbWF0Y2hfZmFpbDo6aGMxZDE4Zm\
UxZDU4NWMzZTFZNmNvcmU6OnBhbmlja2luZzo6cGFuaWNfYm91bmRzX2NoZWNrOjpoYWFlYzg4OWJh\
MThkZDY4NVo3Z2VuZXJpY19hcnJheTo6ZnJvbV9pdGVyX2xlbmd0aF9mYWlsOjpoMjU2MTVmNzUzMj\
ViMTgzZls3c3RkOjpwYW5pY2tpbmc6OnJ1c3RfcGFuaWNfd2l0aF9ob29rOjpoMmQ5MDc5NDI3YTJk\
OTk2YVwuY29yZTo6b3B0aW9uOjpleHBlY3RfZmFpbGVkOjpoNWE5NDhjNTQ5YWU1Mzc0YV0YX193Ym\
dfZGlnZXN0Y29udGV4dF9mcmVlXgZtZW1jbXBfQ2NvcmU6OmZtdDo6Rm9ybWF0dGVyOjpwYWRfaW50\
ZWdyYWw6OndyaXRlX3ByZWZpeDo6aDQ3ZmE5MWE3YWZmOTRmNWJgKWNvcmU6OnBhbmlja2luZzo6cG\
FuaWM6OmgzOGNhYzcxMGI1MDQ4Y2EwYQZtZW1jcHliEXJ1c3RfYmVnaW5fdW53aW5kYxRkaWdlc3Rj\
b250ZXh0X3VwZGF0ZWQtY29yZTo6cGFuaWNraW5nOjpwYW5pY19mbXQ6OmgxZmVhNjIzNzU1ZmZmZW\
Q3ZUlzdGQ6OnN5c19jb21tb246OmJhY2t0cmFjZTo6X19ydXN0X2VuZF9zaG9ydF9iYWNrdHJhY2U6\
Omg5MWU3MTE2MDdkOTFiZTUyZgZtZW1zZXRnEV9fd2JpbmRnZW5fbWFsbG9jaD93YXNtX2JpbmRnZW\
46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2U0X211dDo6aGY3ZGRhZDU4NmMzNWE2NDBpP3dhc21f\
YmluZGdlbjo6Y29udmVydDo6Y2xvc3VyZXM6Omludm9rZTNfbXV0OjpoNTQwYmUwOTk2MTZkNzI4MG\
o/d2FzbV9iaW5kZ2VuOjpjb252ZXJ0OjpjbG9zdXJlczo6aW52b2tlM19tdXQ6Omg0YTEzOTg3Mzhh\
MGQ3NWJkaz93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cmVzOjppbnZva2UzX211dDo6aDFmY2\
Y1ZjljZjA5Mzg1M2RsP3dhc21fYmluZGdlbjo6Y29udmVydDo6Y2xvc3VyZXM6Omludm9rZTNfbXV0\
OjpoMGZiMzM3NzZkYmI4NGFiYW0/d2FzbV9iaW5kZ2VuOjpjb252ZXJ0OjpjbG9zdXJlczo6aW52b2\
tlM19tdXQ6OmgyMzkwZjRhNTFkMDQ3MmE5bj93YXNtX2JpbmRnZW46OmNvbnZlcnQ6OmNsb3N1cmVz\
OjppbnZva2UzX211dDo6aDM1ZTYzNTIzNDE5ODU1MjdvP3dhc21fYmluZGdlbjo6Y29udmVydDo6Y2\
xvc3VyZXM6Omludm9rZTNfbXV0OjpoM2E2NmRkYTVjY2RkZjE4NnA/d2FzbV9iaW5kZ2VuOjpjb252\
ZXJ0OjpjbG9zdXJlczo6aW52b2tlMl9tdXQ6Omg5NGEwYjM1MTEwMThkNjI3cUNzdGQ6OnBhbmlja2\
luZzo6YmVnaW5fcGFuaWNfaGFuZGxlcjo6e3tjbG9zdXJlfX06Omg0ZTQ5ZjM1MGQ5ZjRkZTM2chJf\
X3diaW5kZ2VuX3JlYWxsb2NzP3dhc21fYmluZGdlbjo6Y29udmVydDo6Y2xvc3VyZXM6Omludm9rZT\
FfbXV0OjpoMmE0YWVhM2VhM2EyMjZhM3RFPGJsb2NrX3BhZGRpbmc6OlBhZEVycm9yIGFzIGNvcmU6\
OmZtdDo6RGVidWc+OjpmbXQ6Omg3MGZjZDBmNWVhZmM1MTRmdTJjb3JlOjpvcHRpb246Ok9wdGlvbj\
xUPjo6dW53cmFwOjpoNTg4NDZlYTljYjc2NjZmMXYwPCZUIGFzIGNvcmU6OmZtdDo6RGVidWc+Ojpm\
bXQ6OmhkNjBjYTNmZTQ4MDBlM2NldzI8JlQgYXMgY29yZTo6Zm10OjpEaXNwbGF5Pjo6Zm10OjpoOG\
VjZDI2Mjc5MTBhMjE4OXhOPEkgYXMgY29yZTo6aXRlcjo6dHJhaXRzOjpjb2xsZWN0OjpJbnRvSXRl\
cmF0b3I+OjppbnRvX2l0ZXI6OmgzZTMwODVmZjc3OGI5ZTFleS1jb3JlOjpzbGljZTo6cmF3Ojpmcm\
9tX3JlZjo6aGZlNjZiNjMzZTBkMGM3N2R6LWNvcmU6OnNsaWNlOjpyYXc6OmZyb21fcmVmOjpoYTA5\
OGI4MGJkZTAyODBkM3sPX193YmluZGdlbl9mcmVlfDRhbGxvYzo6cmF3X3ZlYzo6Y2FwYWNpdHlfb3\
ZlcmZsb3c6OmhkNjEyZTdlZmExMmMzN2RmfTNhcnJheXZlYzo6YXJyYXl2ZWM6OmV4dGVuZF9wYW5p\
Yzo6aDM1OTExZTY0NzIzZTlkOWR+OWNvcmU6Om9wczo6ZnVuY3Rpb246OkZuT25jZTo6Y2FsbF9vbm\
NlOjpoZGRlOTUzNDE1ODJlOGEyYX8fX193YmluZGdlbl9hZGRfdG9fc3RhY2tfcG9pbnRlcoABTmNv\
cmU6OmZtdDo6bnVtOjppbXA6OjxpbXBsIGNvcmU6OmZtdDo6RGlzcGxheSBmb3IgdTMyPjo6Zm10Oj\
poZGM0MTczNmM1M2ZjNzk3NIEBMXdhc21fYmluZGdlbjo6X19ydDo6dGhyb3dfbnVsbDo6aDQzYTIw\
NDMzNTE3ZjdhYTGCATJ3YXNtX2JpbmRnZW46Ol9fcnQ6OmJvcnJvd19mYWlsOjpoZjM2YjBlNjMzMT\
dlY2Q5ZoMBKndhc21fYmluZGdlbjo6dGhyb3dfc3RyOjpoZjUxYjAyYmU3YzJjODgwY4QBKndhc21f\
YmluZGdlbjo6dGhyb3dfdmFsOjpoMjU1NTUyOGM3MzYxMTdiYYUBMTxUIGFzIGNvcmU6OmFueTo6QW\
55Pjo6dHlwZV9pZDo6aDJkNDcxYjk2YmM0Y2JjZmOGAQpydXN0X3BhbmljhwE3c3RkOjphbGxvYzo6\
ZGVmYXVsdF9hbGxvY19lcnJvcl9ob29rOjpoMGVjY2RhYzI0ZmRhMzc4ZogBb2NvcmU6OnB0cjo6ZH\
JvcF9pbl9wbGFjZTwmY29yZTo6aXRlcjo6YWRhcHRlcnM6OmNvcGllZDo6Q29waWVkPGNvcmU6OnNs\
aWNlOjppdGVyOjpJdGVyPHU4Pj4+OjpoZjdiZDA0MzdjM2U4ODYzOQDvgICAAAlwcm9kdWNlcnMCCG\
xhbmd1YWdlAQRSdXN0AAxwcm9jZXNzZWQtYnkDBXJ1c3RjHTEuNTQuMCAoYTE3OGQwMzIyIDIwMjEt\
MDctMjYpBndhbHJ1cwYwLjE5LjAMd2FzbS1iaW5kZ2VuBjAuMi43NA==\
");
const heap = new Array(32).fill(undefined);
heap.push(undefined, null, true, false);
function getObject(idx) {
    return heap[idx];
}
let heap_next = heap.length;
function dropObject(idx) {
    if (idx < 36) return;
    heap[idx] = heap_next;
    heap_next = idx;
}
function takeObject(idx) {
    const ret = getObject(idx);
    dropObject(idx);
    return ret;
}
function addHeapObject(obj) {
    if (heap_next === heap.length) heap.push(heap.length + 1);
    const idx = heap_next;
    heap_next = heap[idx];
    heap[idx] = obj;
    return idx;
}
let cachedTextDecoder = new TextDecoder("utf-8", {
    ignoreBOM: true,
    fatal: true
});
cachedTextDecoder.decode();
let cachegetUint8Memory0 = null;
function getUint8Memory0() {
    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm2.memory.buffer) {
        cachegetUint8Memory0 = new Uint8Array(wasm2.memory.buffer);
    }
    return cachegetUint8Memory0;
}
function getStringFromWasm0(ptr, len) {
    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
}
let WASM_VECTOR_LEN = 0;
let cachedTextEncoder = new TextEncoder("utf-8");
const encodeString = function(arg, view) {
    return cachedTextEncoder.encodeInto(arg, view);
};
function passStringToWasm0(arg, malloc, realloc) {
    if (realloc === undefined) {
        const buf = cachedTextEncoder.encode(arg);
        const ptr = malloc(buf.length);
        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);
        WASM_VECTOR_LEN = buf.length;
        return ptr;
    }
    let len = arg.length;
    let ptr = malloc(len);
    const mem = getUint8Memory0();
    let offset = 0;
    for(; offset < len; offset++){
        const code = arg.charCodeAt(offset);
        if (code > 127) break;
        mem[ptr + offset] = code;
    }
    if (offset !== len) {
        if (offset !== 0) {
            arg = arg.slice(offset);
        }
        ptr = realloc(ptr, len, len = offset + arg.length * 3);
        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);
        const ret = encodeString(arg, view);
        offset += ret.written;
    }
    WASM_VECTOR_LEN = offset;
    return ptr;
}
function isLikeNone(x) {
    return x === undefined || x === null;
}
let cachegetInt32Memory0 = null;
function getInt32Memory0() {
    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm2.memory.buffer) {
        cachegetInt32Memory0 = new Int32Array(wasm2.memory.buffer);
    }
    return cachegetInt32Memory0;
}
function getArrayU8FromWasm0(ptr, len) {
    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);
}
function digest1(algorithm, data1, length) {
    try {
        const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
        var ptr0 = passStringToWasm0(algorithm, wasm2.__wbindgen_malloc, wasm2.__wbindgen_realloc);
        var len0 = WASM_VECTOR_LEN;
        wasm2.digest(retptr, ptr0, len0, addHeapObject(data1), !isLikeNone(length), isLikeNone(length) ? 0 : length);
        var r0 = getInt32Memory0()[retptr / 4 + 0];
        var r11 = getInt32Memory0()[retptr / 4 + 1];
        var v1 = getArrayU8FromWasm0(r0, r11).slice();
        wasm2.__wbindgen_free(r0, r11 * 1);
        return v1;
    } finally{
        wasm2.__wbindgen_add_to_stack_pointer(16);
    }
}
const DigestContextFinalization = new FinalizationRegistry((ptr)=>wasm2.__wbg_digestcontext_free(ptr)
);
class DigestContext {
    static __wrap(ptr) {
        const obj = Object.create(DigestContext.prototype);
        obj.ptr = ptr;
        DigestContextFinalization.register(obj, obj.ptr, obj);
        return obj;
    }
    __destroy_into_raw() {
        const ptr = this.ptr;
        this.ptr = 0;
        DigestContextFinalization.unregister(this);
        return ptr;
    }
    free() {
        const ptr = this.__destroy_into_raw();
        wasm2.__wbg_digestcontext_free(ptr);
    }
    constructor(algorithm1){
        var ptr0 = passStringToWasm0(algorithm1, wasm2.__wbindgen_malloc, wasm2.__wbindgen_realloc);
        var len0 = WASM_VECTOR_LEN;
        var ret = wasm2.digestcontext_new(ptr0, len0);
        return DigestContext.__wrap(ret);
    }
    update(data) {
        wasm2.digestcontext_update(this.ptr, addHeapObject(data));
    }
    digest(length) {
        try {
            const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
            wasm2.digestcontext_digest(retptr, this.ptr, !isLikeNone(length), isLikeNone(length) ? 0 : length);
            var r0 = getInt32Memory0()[retptr / 4 + 0];
            var r11 = getInt32Memory0()[retptr / 4 + 1];
            var v0 = getArrayU8FromWasm0(r0, r11).slice();
            wasm2.__wbindgen_free(r0, r11 * 1);
            return v0;
        } finally{
            wasm2.__wbindgen_add_to_stack_pointer(16);
        }
    }
    digestAndReset(length) {
        try {
            const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
            wasm2.digestcontext_digestAndReset(retptr, this.ptr, !isLikeNone(length), isLikeNone(length) ? 0 : length);
            var r0 = getInt32Memory0()[retptr / 4 + 0];
            var r12 = getInt32Memory0()[retptr / 4 + 1];
            var v0 = getArrayU8FromWasm0(r0, r12).slice();
            wasm2.__wbindgen_free(r0, r12 * 1);
            return v0;
        } finally{
            wasm2.__wbindgen_add_to_stack_pointer(16);
        }
    }
    digestAndDrop(length) {
        try {
            const ptr = this.__destroy_into_raw();
            const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
            wasm2.digestcontext_digestAndDrop(retptr, ptr, !isLikeNone(length), isLikeNone(length) ? 0 : length);
            var r0 = getInt32Memory0()[retptr / 4 + 0];
            var r13 = getInt32Memory0()[retptr / 4 + 1];
            var v0 = getArrayU8FromWasm0(r0, r13).slice();
            wasm2.__wbindgen_free(r0, r13 * 1);
            return v0;
        } finally{
            wasm2.__wbindgen_add_to_stack_pointer(16);
        }
    }
    reset() {
        wasm2.digestcontext_reset(this.ptr);
    }
    clone() {
        var ret1 = wasm2.digestcontext_clone(this.ptr);
        return DigestContext.__wrap(ret1);
    }
}
const imports = {
    __wbindgen_placeholder__: {
        __wbg_new_f85dbdfb9cdbe2ec: function(arg0, arg1) {
            var ret2 = new TypeError(getStringFromWasm0(arg0, arg1));
            return addHeapObject(ret2);
        },
        __wbindgen_object_drop_ref: function(arg0) {
            takeObject(arg0);
        },
        __wbg_byteLength_e0515bc94cfc5dee: function(arg0) {
            var ret2 = getObject(arg0).byteLength;
            return ret2;
        },
        __wbg_byteOffset_77eec84716a2e737: function(arg0) {
            var ret2 = getObject(arg0).byteOffset;
            return ret2;
        },
        __wbg_buffer_1c5918a4ab656ff7: function(arg0) {
            var ret2 = getObject(arg0).buffer;
            return addHeapObject(ret2);
        },
        __wbg_newwithbyteoffsetandlength_e57ad1f2ce812c03: function(arg0, arg1, arg2) {
            var ret2 = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);
            return addHeapObject(ret2);
        },
        __wbg_length_2d56cb37075fcfb1: function(arg0) {
            var ret2 = getObject(arg0).length;
            return ret2;
        },
        __wbindgen_memory: function() {
            var ret2 = wasm2.memory;
            return addHeapObject(ret2);
        },
        __wbg_buffer_9e184d6f785de5ed: function(arg0) {
            var ret2 = getObject(arg0).buffer;
            return addHeapObject(ret2);
        },
        __wbg_new_e8101319e4cf95fc: function(arg0) {
            var ret2 = new Uint8Array(getObject(arg0));
            return addHeapObject(ret2);
        },
        __wbg_set_e8ae7b27314e8b98: function(arg0, arg1, arg2) {
            getObject(arg0).set(getObject(arg1), arg2 >>> 0);
        },
        __wbindgen_throw: function(arg0, arg1) {
            throw new Error(getStringFromWasm0(arg0, arg1));
        },
        __wbindgen_rethrow: function(arg0) {
            throw takeObject(arg0);
        }
    }
};
const wasmModule = new WebAssembly.Module(data1);
const wasmInstance = new WebAssembly.Instance(wasmModule, imports);
const wasm2 = wasmInstance.exports;
const _wasm = wasm2;
const _wasmModule = wasmModule;
const _wasmInstance = wasmInstance;
const mod3 = function() {
    return {
        digest: digest1,
        DigestContext: DigestContext,
        _wasm: _wasm,
        _wasmModule: _wasmModule,
        _wasmInstance: _wasmInstance,
        _wasmBytes: data1
    };
}();
const digestAlgorithms = [
    "BLAKE2B-256",
    "BLAKE2B-384",
    "BLAKE2B",
    "BLAKE2S",
    "BLAKE3",
    "KECCAK-224",
    "KECCAK-256",
    "KECCAK-384",
    "KECCAK-512",
    "SHA-384",
    "SHA3-224",
    "SHA3-256",
    "SHA3-384",
    "SHA3-512",
    "SHAKE128",
    "SHAKE256",
    "RIPEMD-160",
    "SHA-224",
    "SHA-256",
    "SHA-512",
    "MD5",
    "SHA-1", 
];
const webCrypto = ((crypto)=>({
        getRandomValues: crypto.getRandomValues?.bind(crypto),
        randomUUID: crypto.randomUUID?.bind(crypto),
        subtle: {
            decrypt: crypto.subtle?.decrypt?.bind(crypto.subtle),
            deriveBits: crypto.subtle?.deriveBits?.bind(crypto.subtle),
            deriveKey: crypto.subtle?.deriveKey?.bind(crypto.subtle),
            digest: crypto.subtle?.digest?.bind(crypto.subtle),
            encrypt: crypto.subtle?.encrypt?.bind(crypto.subtle),
            exportKey: crypto.subtle?.exportKey?.bind(crypto.subtle),
            generateKey: crypto.subtle?.generateKey?.bind(crypto.subtle),
            importKey: crypto.subtle?.importKey?.bind(crypto.subtle),
            sign: crypto.subtle?.sign?.bind(crypto.subtle),
            unwrapKey: crypto.subtle?.unwrapKey?.bind(crypto.subtle),
            verify: crypto.subtle?.verify?.bind(crypto.subtle),
            wrapKey: crypto.subtle?.wrapKey?.bind(crypto.subtle)
        }
    })
)(globalThis.crypto);
const bufferSourceBytes = (data2)=>{
    let bytes;
    if (data2 instanceof Uint8Array) {
        bytes = data2;
    } else if (ArrayBuffer.isView(data2)) {
        bytes = new Uint8Array(data2.buffer, data2.byteOffset, data2.byteLength);
    } else if (data2 instanceof ArrayBuffer) {
        bytes = new Uint8Array(data2);
    }
    return bytes;
};
const stdCrypto = ((x)=>x
)({
    ...webCrypto,
    subtle: {
        ...webCrypto.subtle,
        async digest (algorithm, data) {
            const { name: name2 , length  } = normalizeAlgorithm(algorithm);
            const bytes = bufferSourceBytes(data);
            if (webCrypto.subtle?.digest && webCryptoDigestAlgorithms.includes(name2) && bytes) {
                return webCrypto.subtle.digest(algorithm, bytes);
            } else if (digestAlgorithms.includes(name2)) {
                if (bytes) {
                    return stdCrypto.subtle.digestSync(algorithm, bytes);
                } else if (data[Symbol.iterator]) {
                    return stdCrypto.subtle.digestSync(algorithm, data);
                } else if (data[Symbol.asyncIterator]) {
                    const context = new mod3.DigestContext(name2);
                    for await (const chunk of data){
                        const chunkBytes = bufferSourceBytes(chunk);
                        if (!chunkBytes) {
                            throw new TypeError("data contained chunk of the wrong type");
                        }
                        context.update(chunkBytes);
                    }
                    return context.digestAndDrop(length);
                } else {
                    throw new TypeError("data must be a BufferSource or [Async]Iterable<BufferSource>");
                }
            } else if (webCrypto.subtle?.digest) {
                return await webCrypto.subtle.digest(algorithm, data);
            } else {
                throw new TypeError(`unsupported digest algorithm: ${algorithm}`);
            }
        },
        digestSync (algorithm, data) {
            algorithm = normalizeAlgorithm(algorithm);
            const bytes = bufferSourceBytes(data);
            if (bytes) {
                return mod3.digest(algorithm.name, bytes, undefined);
            } else if (data[Symbol.iterator]) {
                const context = new mod3.DigestContext(algorithm.name);
                for (const chunk of data){
                    const chunkBytes = bufferSourceBytes(chunk);
                    if (!chunkBytes) {
                        throw new TypeError("data contained chunk of the wrong type");
                    }
                    context.update(chunkBytes);
                }
                return context.digestAndDrop(algorithm.length);
            } else {
                throw new TypeError("data must be a BufferSource or Iterable<BufferSource>");
            }
        }
    }
});
const webCryptoDigestAlgorithms = [
    "SHA-384",
    "SHA-256",
    "SHA-512",
    "SHA-1", 
];
const normalizeAlgorithm = (algorithm2)=>typeof algorithm2 === "string" ? {
        name: algorithm2.toUpperCase()
    } : {
        ...algorithm2,
        name: algorithm2.name.toUpperCase()
    }
;
var OpCode;
(function(OpCode1) {
    OpCode1[OpCode1["Continue"] = 0] = "Continue";
    OpCode1[OpCode1["TextFrame"] = 1] = "TextFrame";
    OpCode1[OpCode1["BinaryFrame"] = 2] = "BinaryFrame";
    OpCode1[OpCode1["Close"] = 8] = "Close";
    OpCode1[OpCode1["Ping"] = 9] = "Ping";
    OpCode1[OpCode1["Pong"] = 10] = "Pong";
})(OpCode || (OpCode = {
}));
function isWebSocketCloseEvent(a) {
    return hasOwnProperty(a, "code");
}
function isWebSocketPingEvent(a) {
    return Array.isArray(a) && a[0] === "ping" && a[1] instanceof Uint8Array;
}
function isWebSocketPongEvent(a) {
    return Array.isArray(a) && a[0] === "pong" && a[1] instanceof Uint8Array;
}
function unmask(payload, mask) {
    if (mask) {
        for(let i = 0, len = payload.length; i < len; i++){
            payload[i] ^= mask[i & 3];
        }
    }
}
async function writeFrame(frame, writer3) {
    const payloadLength = frame.payload.byteLength;
    let header;
    const hasMask = frame.mask ? 128 : 0;
    if (frame.mask && frame.mask.byteLength !== 4) {
        throw new Error("invalid mask. mask must be 4 bytes: length=" + frame.mask.byteLength);
    }
    if (payloadLength < 126) {
        header = new Uint8Array([
            128 | frame.opcode,
            hasMask | payloadLength
        ]);
    } else if (payloadLength < 65535) {
        header = new Uint8Array([
            128 | frame.opcode,
            hasMask | 126,
            payloadLength >>> 8,
            payloadLength & 255, 
        ]);
    } else {
        header = new Uint8Array([
            128 | frame.opcode,
            hasMask | 127,
            ...sliceLongToBytes(payloadLength), 
        ]);
    }
    if (frame.mask) {
        header = concat(header, frame.mask);
    }
    unmask(frame.payload, frame.mask);
    header = concat(header, frame.payload);
    const w = BufWriter.create(writer3);
    await w.write(header);
    await w.flush();
}
async function readFrame(buf) {
    let b = await buf.readByte();
    assert(b !== null);
    let isLastFrame = false;
    switch(b >>> 4){
        case 8:
            isLastFrame = true;
            break;
        case 0:
            isLastFrame = false;
            break;
        default:
            throw new Error("invalid signature");
    }
    const opcode = b & 15;
    b = await buf.readByte();
    assert(b !== null);
    const hasMask = b >>> 7;
    let payloadLength = b & 127;
    if (payloadLength === 126) {
        const l = await readShort(buf);
        assert(l !== null);
        payloadLength = l;
    } else if (payloadLength === 127) {
        const l = await readLong(buf);
        assert(l !== null);
        payloadLength = Number(l);
    }
    let mask;
    if (hasMask) {
        mask = new Uint8Array(4);
        assert(await buf.readFull(mask) !== null);
    }
    const payload = new Uint8Array(payloadLength);
    assert(await buf.readFull(payload) !== null);
    return {
        isLastFrame,
        opcode,
        mask,
        payload
    };
}
class WebSocketImpl {
    conn;
    mask;
    bufReader;
    bufWriter;
    sendQueue = [];
    constructor({ conn: conn2 , bufReader , bufWriter , mask  }){
        this.conn = conn2;
        this.mask = mask;
        this.bufReader = bufReader || new BufReader(conn2);
        this.bufWriter = bufWriter || new BufWriter(conn2);
    }
    async *[Symbol.asyncIterator]() {
        const decoder1 = new TextDecoder();
        let frames = [];
        let payloadsLength = 0;
        while(!this._isClosed){
            let frame;
            try {
                frame = await readFrame(this.bufReader);
            } catch  {
                this.ensureSocketClosed();
                break;
            }
            unmask(frame.payload, frame.mask);
            switch(frame.opcode){
                case OpCode.TextFrame:
                case OpCode.BinaryFrame:
                case OpCode.Continue:
                    frames.push(frame);
                    payloadsLength += frame.payload.length;
                    if (frame.isLastFrame) {
                        const concat1 = new Uint8Array(payloadsLength);
                        let offs = 0;
                        for (const frame1 of frames){
                            concat1.set(frame1.payload, offs);
                            offs += frame1.payload.length;
                        }
                        if (frames[0].opcode === OpCode.TextFrame) {
                            yield decoder1.decode(concat1);
                        } else {
                            yield concat1;
                        }
                        frames = [];
                        payloadsLength = 0;
                    }
                    break;
                case OpCode.Close:
                    {
                        const code = frame.payload[0] << 8 | frame.payload[1];
                        const reason = decoder1.decode(frame.payload.subarray(2, frame.payload.length));
                        await this.close(code, reason);
                        yield {
                            code,
                            reason
                        };
                        return;
                    }
                case OpCode.Ping:
                    await this.enqueue({
                        opcode: OpCode.Pong,
                        payload: frame.payload,
                        isLastFrame: true
                    });
                    yield [
                        "ping",
                        frame.payload
                    ];
                    break;
                case OpCode.Pong:
                    yield [
                        "pong",
                        frame.payload
                    ];
                    break;
                default:
            }
        }
    }
    dequeue() {
        const [entry] = this.sendQueue;
        if (!entry) return;
        if (this._isClosed) return;
        const { d , frame  } = entry;
        writeFrame(frame, this.bufWriter).then(()=>d.resolve()
        ).catch((e)=>d.reject(e)
        ).finally(()=>{
            this.sendQueue.shift();
            this.dequeue();
        });
    }
    enqueue(frame) {
        if (this._isClosed) {
            throw new Deno.errors.ConnectionReset("Socket has already been closed");
        }
        const d = deferred();
        this.sendQueue.push({
            d,
            frame
        });
        if (this.sendQueue.length === 1) {
            this.dequeue();
        }
        return d;
    }
    send(data) {
        const opcode = typeof data === "string" ? OpCode.TextFrame : OpCode.BinaryFrame;
        const payload = typeof data === "string" ? new TextEncoder().encode(data) : data;
        const isLastFrame = true;
        const frame = {
            isLastFrame: true,
            opcode,
            payload,
            mask: this.mask
        };
        return this.enqueue(frame);
    }
    ping(data = "") {
        const payload = typeof data === "string" ? new TextEncoder().encode(data) : data;
        const frame = {
            isLastFrame: true,
            opcode: OpCode.Ping,
            mask: this.mask,
            payload
        };
        return this.enqueue(frame);
    }
    _isClosed = false;
    get isClosed() {
        return this._isClosed;
    }
    async close(code = 1000, reason) {
        try {
            const header = [
                code >>> 8,
                code & 255
            ];
            let payload;
            if (reason) {
                const reasonBytes = new TextEncoder().encode(reason);
                payload = new Uint8Array(2 + reasonBytes.byteLength);
                payload.set(header);
                payload.set(reasonBytes, 2);
            } else {
                payload = new Uint8Array(header);
            }
            await this.enqueue({
                isLastFrame: true,
                opcode: OpCode.Close,
                mask: this.mask,
                payload
            });
        } catch (e) {
            throw e;
        } finally{
            this.ensureSocketClosed();
        }
    }
    closeForce() {
        this.ensureSocketClosed();
    }
    ensureSocketClosed() {
        if (this.isClosed) return;
        try {
            this.conn.close();
        } catch (e) {
            console.error(e);
        } finally{
            this._isClosed = true;
            const rest = this.sendQueue;
            this.sendQueue = [];
            rest.forEach((e)=>e.d.reject(new Deno.errors.ConnectionReset("Socket has already been closed"))
            );
        }
    }
}
function acceptable(req) {
    const upgrade = req.headers.get("upgrade");
    if (!upgrade || upgrade.toLowerCase() !== "websocket") {
        return false;
    }
    const secKey = req.headers.get("sec-websocket-key");
    return req.headers.has("sec-websocket-key") && typeof secKey === "string" && secKey.length > 0;
}
const kGUID = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";
function createSecAccept(nonce) {
    return encode(stdCrypto.subtle.digestSync("SHA-1", new TextEncoder().encode(nonce + kGUID)));
}
async function acceptWebSocket(req) {
    const { conn: conn1 , headers , bufReader: bufReader1 , bufWriter: bufWriter1  } = req;
    if (acceptable(req)) {
        const sock = new WebSocketImpl({
            conn: conn1,
            bufReader: bufReader1,
            bufWriter: bufWriter1
        });
        const secKey = headers.get("sec-websocket-key");
        if (typeof secKey !== "string") {
            throw new Error("sec-websocket-key is not provided");
        }
        const secAccept = createSecAccept(secKey);
        const newHeaders = new Headers({
            Upgrade: "websocket",
            Connection: "Upgrade",
            "Sec-WebSocket-Accept": secAccept
        });
        const secProtocol = headers.get("sec-websocket-protocol");
        if (typeof secProtocol === "string") {
            newHeaders.set("Sec-WebSocket-Protocol", secProtocol);
        }
        const secVersion = headers.get("sec-websocket-version");
        if (typeof secVersion === "string") {
            newHeaders.set("Sec-WebSocket-Version", secVersion);
        }
        await writeResponse(bufWriter1, {
            status: 101,
            headers: newHeaders
        });
        return sock;
    }
    throw new Error("request is not acceptable");
}
const db1 = JSON.parse(`{
  "application/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "application/3gpdash-qoe-report+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/3gpp-ims+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/3gpphal+json": {
    "source": "iana",
    "compressible": true
  },
  "application/3gpphalforms+json": {
    "source": "iana",
    "compressible": true
  },
  "application/a2l": {
    "source": "iana"
  },
  "application/activemessage": {
    "source": "iana"
  },
  "application/activity+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-costmap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-costmapfilter+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-directory+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointcost+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointcostparams+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointprop+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-endpointpropparams+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-error+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-networkmap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-networkmapfilter+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-updatestreamcontrol+json": {
    "source": "iana",
    "compressible": true
  },
  "application/alto-updatestreamparams+json": {
    "source": "iana",
    "compressible": true
  },
  "application/aml": {
    "source": "iana"
  },
  "application/andrew-inset": {
    "source": "iana",
    "extensions": ["ez"]
  },
  "application/applefile": {
    "source": "iana"
  },
  "application/applixware": {
    "source": "apache",
    "extensions": ["aw"]
  },
  "application/atf": {
    "source": "iana"
  },
  "application/atfx": {
    "source": "iana"
  },
  "application/atom+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["atom"]
  },
  "application/atomcat+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["atomcat"]
  },
  "application/atomdeleted+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["atomdeleted"]
  },
  "application/atomicmail": {
    "source": "iana"
  },
  "application/atomsvc+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["atomsvc"]
  },
  "application/atsc-dwd+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["dwd"]
  },
  "application/atsc-dynamic-event-message": {
    "source": "iana"
  },
  "application/atsc-held+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["held"]
  },
  "application/atsc-rdt+json": {
    "source": "iana",
    "compressible": true
  },
  "application/atsc-rsat+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rsat"]
  },
  "application/atxml": {
    "source": "iana"
  },
  "application/auth-policy+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/bacnet-xdd+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/batch-smtp": {
    "source": "iana"
  },
  "application/bdoc": {
    "compressible": false,
    "extensions": ["bdoc"]
  },
  "application/beep+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/calendar+json": {
    "source": "iana",
    "compressible": true
  },
  "application/calendar+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xcs"]
  },
  "application/call-completion": {
    "source": "iana"
  },
  "application/cals-1840": {
    "source": "iana"
  },
  "application/captive+json": {
    "source": "iana",
    "compressible": true
  },
  "application/cbor": {
    "source": "iana"
  },
  "application/cbor-seq": {
    "source": "iana"
  },
  "application/cccex": {
    "source": "iana"
  },
  "application/ccmp+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/ccxml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ccxml"]
  },
  "application/cdfx+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["cdfx"]
  },
  "application/cdmi-capability": {
    "source": "iana",
    "extensions": ["cdmia"]
  },
  "application/cdmi-container": {
    "source": "iana",
    "extensions": ["cdmic"]
  },
  "application/cdmi-domain": {
    "source": "iana",
    "extensions": ["cdmid"]
  },
  "application/cdmi-object": {
    "source": "iana",
    "extensions": ["cdmio"]
  },
  "application/cdmi-queue": {
    "source": "iana",
    "extensions": ["cdmiq"]
  },
  "application/cdni": {
    "source": "iana"
  },
  "application/cea": {
    "source": "iana"
  },
  "application/cea-2018+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/cellml+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/cfw": {
    "source": "iana"
  },
  "application/clr": {
    "source": "iana"
  },
  "application/clue+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/clue_info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/cms": {
    "source": "iana"
  },
  "application/cnrp+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/coap-group+json": {
    "source": "iana",
    "compressible": true
  },
  "application/coap-payload": {
    "source": "iana"
  },
  "application/commonground": {
    "source": "iana"
  },
  "application/conference-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/cose": {
    "source": "iana"
  },
  "application/cose-key": {
    "source": "iana"
  },
  "application/cose-key-set": {
    "source": "iana"
  },
  "application/cpl+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/csrattrs": {
    "source": "iana"
  },
  "application/csta+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/cstadata+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/csvm+json": {
    "source": "iana",
    "compressible": true
  },
  "application/cu-seeme": {
    "source": "apache",
    "extensions": ["cu"]
  },
  "application/cwt": {
    "source": "iana"
  },
  "application/cybercash": {
    "source": "iana"
  },
  "application/dart": {
    "compressible": true
  },
  "application/dash+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["mpd"]
  },
  "application/dashdelta": {
    "source": "iana"
  },
  "application/davmount+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["davmount"]
  },
  "application/dca-rft": {
    "source": "iana"
  },
  "application/dcd": {
    "source": "iana"
  },
  "application/dec-dx": {
    "source": "iana"
  },
  "application/dialog-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/dicom": {
    "source": "iana"
  },
  "application/dicom+json": {
    "source": "iana",
    "compressible": true
  },
  "application/dicom+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/dii": {
    "source": "iana"
  },
  "application/dit": {
    "source": "iana"
  },
  "application/dns": {
    "source": "iana"
  },
  "application/dns+json": {
    "source": "iana",
    "compressible": true
  },
  "application/dns-message": {
    "source": "iana"
  },
  "application/docbook+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["dbk"]
  },
  "application/dots+cbor": {
    "source": "iana"
  },
  "application/dskpp+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/dssc+der": {
    "source": "iana",
    "extensions": ["dssc"]
  },
  "application/dssc+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xdssc"]
  },
  "application/dvcs": {
    "source": "iana"
  },
  "application/ecmascript": {
    "source": "iana",
    "compressible": true,
    "extensions": ["es","ecma"]
  },
  "application/edi-consent": {
    "source": "iana"
  },
  "application/edi-x12": {
    "source": "iana",
    "compressible": false
  },
  "application/edifact": {
    "source": "iana",
    "compressible": false
  },
  "application/efi": {
    "source": "iana"
  },
  "application/elm+json": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/elm+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/emergencycalldata.cap+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/emergencycalldata.comment+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/emergencycalldata.control+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/emergencycalldata.deviceinfo+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/emergencycalldata.ecall.msd": {
    "source": "iana"
  },
  "application/emergencycalldata.providerinfo+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/emergencycalldata.serviceinfo+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/emergencycalldata.subscriberinfo+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/emergencycalldata.veds+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/emma+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["emma"]
  },
  "application/emotionml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["emotionml"]
  },
  "application/encaprtp": {
    "source": "iana"
  },
  "application/epp+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/epub+zip": {
    "source": "iana",
    "compressible": false,
    "extensions": ["epub"]
  },
  "application/eshop": {
    "source": "iana"
  },
  "application/exi": {
    "source": "iana",
    "extensions": ["exi"]
  },
  "application/expect-ct-report+json": {
    "source": "iana",
    "compressible": true
  },
  "application/fastinfoset": {
    "source": "iana"
  },
  "application/fastsoap": {
    "source": "iana"
  },
  "application/fdt+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["fdt"]
  },
  "application/fhir+json": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/fhir+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/fido.trusted-apps+json": {
    "compressible": true
  },
  "application/fits": {
    "source": "iana"
  },
  "application/flexfec": {
    "source": "iana"
  },
  "application/font-sfnt": {
    "source": "iana"
  },
  "application/font-tdpfr": {
    "source": "iana",
    "extensions": ["pfr"]
  },
  "application/font-woff": {
    "source": "iana",
    "compressible": false
  },
  "application/framework-attributes+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/geo+json": {
    "source": "iana",
    "compressible": true,
    "extensions": ["geojson"]
  },
  "application/geo+json-seq": {
    "source": "iana"
  },
  "application/geopackage+sqlite3": {
    "source": "iana"
  },
  "application/geoxacml+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/gltf-buffer": {
    "source": "iana"
  },
  "application/gml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["gml"]
  },
  "application/gpx+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["gpx"]
  },
  "application/gxf": {
    "source": "apache",
    "extensions": ["gxf"]
  },
  "application/gzip": {
    "source": "iana",
    "compressible": false,
    "extensions": ["gz"]
  },
  "application/h224": {
    "source": "iana"
  },
  "application/held+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/hjson": {
    "extensions": ["hjson"]
  },
  "application/http": {
    "source": "iana"
  },
  "application/hyperstudio": {
    "source": "iana",
    "extensions": ["stk"]
  },
  "application/ibe-key-request+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/ibe-pkg-reply+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/ibe-pp-data": {
    "source": "iana"
  },
  "application/iges": {
    "source": "iana"
  },
  "application/im-iscomposing+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/index": {
    "source": "iana"
  },
  "application/index.cmd": {
    "source": "iana"
  },
  "application/index.obj": {
    "source": "iana"
  },
  "application/index.response": {
    "source": "iana"
  },
  "application/index.vnd": {
    "source": "iana"
  },
  "application/inkml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ink","inkml"]
  },
  "application/iotp": {
    "source": "iana"
  },
  "application/ipfix": {
    "source": "iana",
    "extensions": ["ipfix"]
  },
  "application/ipp": {
    "source": "iana"
  },
  "application/isup": {
    "source": "iana"
  },
  "application/its+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["its"]
  },
  "application/java-archive": {
    "source": "apache",
    "compressible": false,
    "extensions": ["jar","war","ear"]
  },
  "application/java-serialized-object": {
    "source": "apache",
    "compressible": false,
    "extensions": ["ser"]
  },
  "application/java-vm": {
    "source": "apache",
    "compressible": false,
    "extensions": ["class"]
  },
  "application/javascript": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["js","mjs"]
  },
  "application/jf2feed+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jose": {
    "source": "iana"
  },
  "application/jose+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jrd+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jscalendar+json": {
    "source": "iana",
    "compressible": true
  },
  "application/json": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["json","map"]
  },
  "application/json-patch+json": {
    "source": "iana",
    "compressible": true
  },
  "application/json-seq": {
    "source": "iana"
  },
  "application/json5": {
    "extensions": ["json5"]
  },
  "application/jsonml+json": {
    "source": "apache",
    "compressible": true,
    "extensions": ["jsonml"]
  },
  "application/jwk+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jwk-set+json": {
    "source": "iana",
    "compressible": true
  },
  "application/jwt": {
    "source": "iana"
  },
  "application/kpml-request+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/kpml-response+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/ld+json": {
    "source": "iana",
    "compressible": true,
    "extensions": ["jsonld"]
  },
  "application/lgr+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["lgr"]
  },
  "application/link-format": {
    "source": "iana"
  },
  "application/load-control+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/lost+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["lostxml"]
  },
  "application/lostsync+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/lpf+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/lxf": {
    "source": "iana"
  },
  "application/mac-binhex40": {
    "source": "iana",
    "extensions": ["hqx"]
  },
  "application/mac-compactpro": {
    "source": "apache",
    "extensions": ["cpt"]
  },
  "application/macwriteii": {
    "source": "iana"
  },
  "application/mads+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["mads"]
  },
  "application/manifest+json": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["webmanifest"]
  },
  "application/marc": {
    "source": "iana",
    "extensions": ["mrc"]
  },
  "application/marcxml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["mrcx"]
  },
  "application/mathematica": {
    "source": "iana",
    "extensions": ["ma","nb","mb"]
  },
  "application/mathml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["mathml"]
  },
  "application/mathml-content+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mathml-presentation+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-associated-procedure-description+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-deregister+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-envelope+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-msk+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-msk-response+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-protection-description+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-reception-report+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-register+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-register-response+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-schedule+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbms-user-service-description+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mbox": {
    "source": "iana",
    "extensions": ["mbox"]
  },
  "application/media-policy-dataset+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/media_control+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mediaservercontrol+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["mscml"]
  },
  "application/merge-patch+json": {
    "source": "iana",
    "compressible": true
  },
  "application/metalink+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["metalink"]
  },
  "application/metalink4+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["meta4"]
  },
  "application/mets+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["mets"]
  },
  "application/mf4": {
    "source": "iana"
  },
  "application/mikey": {
    "source": "iana"
  },
  "application/mipc": {
    "source": "iana"
  },
  "application/missing-blocks+cbor-seq": {
    "source": "iana"
  },
  "application/mmt-aei+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["maei"]
  },
  "application/mmt-usd+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["musd"]
  },
  "application/mods+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["mods"]
  },
  "application/moss-keys": {
    "source": "iana"
  },
  "application/moss-signature": {
    "source": "iana"
  },
  "application/mosskey-data": {
    "source": "iana"
  },
  "application/mosskey-request": {
    "source": "iana"
  },
  "application/mp21": {
    "source": "iana",
    "extensions": ["m21","mp21"]
  },
  "application/mp4": {
    "source": "iana",
    "extensions": ["mp4s","m4p"]
  },
  "application/mpeg4-generic": {
    "source": "iana"
  },
  "application/mpeg4-iod": {
    "source": "iana"
  },
  "application/mpeg4-iod-xmt": {
    "source": "iana"
  },
  "application/mrb-consumer+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/mrb-publish+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/msc-ivr+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/msc-mixer+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/msword": {
    "source": "iana",
    "compressible": false,
    "extensions": ["doc","dot"]
  },
  "application/mud+json": {
    "source": "iana",
    "compressible": true
  },
  "application/multipart-core": {
    "source": "iana"
  },
  "application/mxf": {
    "source": "iana",
    "extensions": ["mxf"]
  },
  "application/n-quads": {
    "source": "iana",
    "extensions": ["nq"]
  },
  "application/n-triples": {
    "source": "iana",
    "extensions": ["nt"]
  },
  "application/nasdata": {
    "source": "iana"
  },
  "application/news-checkgroups": {
    "source": "iana",
    "charset": "US-ASCII"
  },
  "application/news-groupinfo": {
    "source": "iana",
    "charset": "US-ASCII"
  },
  "application/news-transmission": {
    "source": "iana"
  },
  "application/nlsml+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/node": {
    "source": "iana",
    "extensions": ["cjs"]
  },
  "application/nss": {
    "source": "iana"
  },
  "application/oauth-authz-req+jwt": {
    "source": "iana"
  },
  "application/ocsp-request": {
    "source": "iana"
  },
  "application/ocsp-response": {
    "source": "iana"
  },
  "application/octet-stream": {
    "source": "iana",
    "compressible": false,
    "extensions": ["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]
  },
  "application/oda": {
    "source": "iana",
    "extensions": ["oda"]
  },
  "application/odm+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/odx": {
    "source": "iana"
  },
  "application/oebps-package+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["opf"]
  },
  "application/ogg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ogx"]
  },
  "application/omdoc+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["omdoc"]
  },
  "application/onenote": {
    "source": "apache",
    "extensions": ["onetoc","onetoc2","onetmp","onepkg"]
  },
  "application/opc-nodeset+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/oscore": {
    "source": "iana"
  },
  "application/oxps": {
    "source": "iana",
    "extensions": ["oxps"]
  },
  "application/p21+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/p2p-overlay+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["relo"]
  },
  "application/parityfec": {
    "source": "iana"
  },
  "application/passport": {
    "source": "iana"
  },
  "application/patch-ops-error+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xer"]
  },
  "application/pdf": {
    "source": "iana",
    "compressible": false,
    "extensions": ["pdf"]
  },
  "application/pdx": {
    "source": "iana"
  },
  "application/pem-certificate-chain": {
    "source": "iana"
  },
  "application/pgp-encrypted": {
    "source": "iana",
    "compressible": false,
    "extensions": ["pgp"]
  },
  "application/pgp-keys": {
    "source": "iana"
  },
  "application/pgp-signature": {
    "source": "iana",
    "extensions": ["asc","sig"]
  },
  "application/pics-rules": {
    "source": "apache",
    "extensions": ["prf"]
  },
  "application/pidf+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/pidf-diff+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/pkcs10": {
    "source": "iana",
    "extensions": ["p10"]
  },
  "application/pkcs12": {
    "source": "iana"
  },
  "application/pkcs7-mime": {
    "source": "iana",
    "extensions": ["p7m","p7c"]
  },
  "application/pkcs7-signature": {
    "source": "iana",
    "extensions": ["p7s"]
  },
  "application/pkcs8": {
    "source": "iana",
    "extensions": ["p8"]
  },
  "application/pkcs8-encrypted": {
    "source": "iana"
  },
  "application/pkix-attr-cert": {
    "source": "iana",
    "extensions": ["ac"]
  },
  "application/pkix-cert": {
    "source": "iana",
    "extensions": ["cer"]
  },
  "application/pkix-crl": {
    "source": "iana",
    "extensions": ["crl"]
  },
  "application/pkix-pkipath": {
    "source": "iana",
    "extensions": ["pkipath"]
  },
  "application/pkixcmp": {
    "source": "iana",
    "extensions": ["pki"]
  },
  "application/pls+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["pls"]
  },
  "application/poc-settings+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/postscript": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ai","eps","ps"]
  },
  "application/ppsp-tracker+json": {
    "source": "iana",
    "compressible": true
  },
  "application/problem+json": {
    "source": "iana",
    "compressible": true
  },
  "application/problem+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/provenance+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["provx"]
  },
  "application/prs.alvestrand.titrax-sheet": {
    "source": "iana"
  },
  "application/prs.cww": {
    "source": "iana",
    "extensions": ["cww"]
  },
  "application/prs.cyn": {
    "source": "iana",
    "charset": "7-BIT"
  },
  "application/prs.hpub+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/prs.nprend": {
    "source": "iana"
  },
  "application/prs.plucker": {
    "source": "iana"
  },
  "application/prs.rdf-xml-crypt": {
    "source": "iana"
  },
  "application/prs.xsf+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/pskc+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["pskcxml"]
  },
  "application/pvd+json": {
    "source": "iana",
    "compressible": true
  },
  "application/qsig": {
    "source": "iana"
  },
  "application/raml+yaml": {
    "compressible": true,
    "extensions": ["raml"]
  },
  "application/raptorfec": {
    "source": "iana"
  },
  "application/rdap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/rdf+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rdf","owl"]
  },
  "application/reginfo+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rif"]
  },
  "application/relax-ng-compact-syntax": {
    "source": "iana",
    "extensions": ["rnc"]
  },
  "application/remote-printing": {
    "source": "iana"
  },
  "application/reputon+json": {
    "source": "iana",
    "compressible": true
  },
  "application/resource-lists+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rl"]
  },
  "application/resource-lists-diff+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rld"]
  },
  "application/rfc+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/riscos": {
    "source": "iana"
  },
  "application/rlmi+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/rls-services+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rs"]
  },
  "application/route-apd+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rapd"]
  },
  "application/route-s-tsid+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["sls"]
  },
  "application/route-usd+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rusd"]
  },
  "application/rpki-ghostbusters": {
    "source": "iana",
    "extensions": ["gbr"]
  },
  "application/rpki-manifest": {
    "source": "iana",
    "extensions": ["mft"]
  },
  "application/rpki-publication": {
    "source": "iana"
  },
  "application/rpki-roa": {
    "source": "iana",
    "extensions": ["roa"]
  },
  "application/rpki-updown": {
    "source": "iana"
  },
  "application/rsd+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["rsd"]
  },
  "application/rss+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["rss"]
  },
  "application/rtf": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rtf"]
  },
  "application/rtploopback": {
    "source": "iana"
  },
  "application/rtx": {
    "source": "iana"
  },
  "application/samlassertion+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/samlmetadata+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/sarif+json": {
    "source": "iana",
    "compressible": true
  },
  "application/sarif-external-properties+json": {
    "source": "iana",
    "compressible": true
  },
  "application/sbe": {
    "source": "iana"
  },
  "application/sbml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["sbml"]
  },
  "application/scaip+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/scim+json": {
    "source": "iana",
    "compressible": true
  },
  "application/scvp-cv-request": {
    "source": "iana",
    "extensions": ["scq"]
  },
  "application/scvp-cv-response": {
    "source": "iana",
    "extensions": ["scs"]
  },
  "application/scvp-vp-request": {
    "source": "iana",
    "extensions": ["spq"]
  },
  "application/scvp-vp-response": {
    "source": "iana",
    "extensions": ["spp"]
  },
  "application/sdp": {
    "source": "iana",
    "extensions": ["sdp"]
  },
  "application/secevent+jwt": {
    "source": "iana"
  },
  "application/senml+cbor": {
    "source": "iana"
  },
  "application/senml+json": {
    "source": "iana",
    "compressible": true
  },
  "application/senml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["senmlx"]
  },
  "application/senml-etch+cbor": {
    "source": "iana"
  },
  "application/senml-etch+json": {
    "source": "iana",
    "compressible": true
  },
  "application/senml-exi": {
    "source": "iana"
  },
  "application/sensml+cbor": {
    "source": "iana"
  },
  "application/sensml+json": {
    "source": "iana",
    "compressible": true
  },
  "application/sensml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["sensmlx"]
  },
  "application/sensml-exi": {
    "source": "iana"
  },
  "application/sep+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/sep-exi": {
    "source": "iana"
  },
  "application/session-info": {
    "source": "iana"
  },
  "application/set-payment": {
    "source": "iana"
  },
  "application/set-payment-initiation": {
    "source": "iana",
    "extensions": ["setpay"]
  },
  "application/set-registration": {
    "source": "iana"
  },
  "application/set-registration-initiation": {
    "source": "iana",
    "extensions": ["setreg"]
  },
  "application/sgml": {
    "source": "iana"
  },
  "application/sgml-open-catalog": {
    "source": "iana"
  },
  "application/shf+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["shf"]
  },
  "application/sieve": {
    "source": "iana",
    "extensions": ["siv","sieve"]
  },
  "application/simple-filter+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/simple-message-summary": {
    "source": "iana"
  },
  "application/simplesymbolcontainer": {
    "source": "iana"
  },
  "application/sipc": {
    "source": "iana"
  },
  "application/slate": {
    "source": "iana"
  },
  "application/smil": {
    "source": "iana"
  },
  "application/smil+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["smi","smil"]
  },
  "application/smpte336m": {
    "source": "iana"
  },
  "application/soap+fastinfoset": {
    "source": "iana"
  },
  "application/soap+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/sparql-query": {
    "source": "iana",
    "extensions": ["rq"]
  },
  "application/sparql-results+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["srx"]
  },
  "application/spirits-event+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/sql": {
    "source": "iana"
  },
  "application/srgs": {
    "source": "iana",
    "extensions": ["gram"]
  },
  "application/srgs+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["grxml"]
  },
  "application/sru+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["sru"]
  },
  "application/ssdl+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["ssdl"]
  },
  "application/ssml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ssml"]
  },
  "application/stix+json": {
    "source": "iana",
    "compressible": true
  },
  "application/swid+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["swidtag"]
  },
  "application/tamp-apex-update": {
    "source": "iana"
  },
  "application/tamp-apex-update-confirm": {
    "source": "iana"
  },
  "application/tamp-community-update": {
    "source": "iana"
  },
  "application/tamp-community-update-confirm": {
    "source": "iana"
  },
  "application/tamp-error": {
    "source": "iana"
  },
  "application/tamp-sequence-adjust": {
    "source": "iana"
  },
  "application/tamp-sequence-adjust-confirm": {
    "source": "iana"
  },
  "application/tamp-status-query": {
    "source": "iana"
  },
  "application/tamp-status-response": {
    "source": "iana"
  },
  "application/tamp-update": {
    "source": "iana"
  },
  "application/tamp-update-confirm": {
    "source": "iana"
  },
  "application/tar": {
    "compressible": true
  },
  "application/taxii+json": {
    "source": "iana",
    "compressible": true
  },
  "application/td+json": {
    "source": "iana",
    "compressible": true
  },
  "application/tei+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["tei","teicorpus"]
  },
  "application/tetra_isi": {
    "source": "iana"
  },
  "application/thraud+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["tfi"]
  },
  "application/timestamp-query": {
    "source": "iana"
  },
  "application/timestamp-reply": {
    "source": "iana"
  },
  "application/timestamped-data": {
    "source": "iana",
    "extensions": ["tsd"]
  },
  "application/tlsrpt+gzip": {
    "source": "iana"
  },
  "application/tlsrpt+json": {
    "source": "iana",
    "compressible": true
  },
  "application/tnauthlist": {
    "source": "iana"
  },
  "application/toml": {
    "compressible": true,
    "extensions": ["toml"]
  },
  "application/trickle-ice-sdpfrag": {
    "source": "iana"
  },
  "application/trig": {
    "source": "iana",
    "extensions": ["trig"]
  },
  "application/ttml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ttml"]
  },
  "application/tve-trigger": {
    "source": "iana"
  },
  "application/tzif": {
    "source": "iana"
  },
  "application/tzif-leap": {
    "source": "iana"
  },
  "application/ubjson": {
    "compressible": false,
    "extensions": ["ubj"]
  },
  "application/ulpfec": {
    "source": "iana"
  },
  "application/urc-grpsheet+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/urc-ressheet+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rsheet"]
  },
  "application/urc-targetdesc+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["td"]
  },
  "application/urc-uisocketdesc+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vcard+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vcard+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vemmi": {
    "source": "iana"
  },
  "application/vividence.scriptfile": {
    "source": "apache"
  },
  "application/vnd.1000minds.decision-model+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["1km"]
  },
  "application/vnd.3gpp-prose+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp-prose-pc3ch+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp-v2x-local-service-information": {
    "source": "iana"
  },
  "application/vnd.3gpp.5gnas": {
    "source": "iana"
  },
  "application/vnd.3gpp.access-transfer-events+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.bsf+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.gmop+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.gtpc": {
    "source": "iana"
  },
  "application/vnd.3gpp.interworking-data": {
    "source": "iana"
  },
  "application/vnd.3gpp.lpp": {
    "source": "iana"
  },
  "application/vnd.3gpp.mc-signalling-ear": {
    "source": "iana"
  },
  "application/vnd.3gpp.mcdata-affiliation-command+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcdata-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcdata-payload": {
    "source": "iana"
  },
  "application/vnd.3gpp.mcdata-service-config+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcdata-signalling": {
    "source": "iana"
  },
  "application/vnd.3gpp.mcdata-ue-config+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcdata-user-profile+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-affiliation-command+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-floor-request+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-location-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-mbms-usage-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-service-config+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-signed+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-ue-config+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-ue-init-config+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcptt-user-profile+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcvideo-affiliation-command+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcvideo-affiliation-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcvideo-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcvideo-location-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcvideo-mbms-usage-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcvideo-service-config+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcvideo-transmission-request+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcvideo-ue-config+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mcvideo-user-profile+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.mid-call+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.ngap": {
    "source": "iana"
  },
  "application/vnd.3gpp.pfcp": {
    "source": "iana"
  },
  "application/vnd.3gpp.pic-bw-large": {
    "source": "iana",
    "extensions": ["plb"]
  },
  "application/vnd.3gpp.pic-bw-small": {
    "source": "iana",
    "extensions": ["psb"]
  },
  "application/vnd.3gpp.pic-bw-var": {
    "source": "iana",
    "extensions": ["pvb"]
  },
  "application/vnd.3gpp.s1ap": {
    "source": "iana"
  },
  "application/vnd.3gpp.sms": {
    "source": "iana"
  },
  "application/vnd.3gpp.sms+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.srvcc-ext+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.srvcc-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.state-and-event-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp.ussd+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp2.bcmcsinfo+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.3gpp2.sms": {
    "source": "iana"
  },
  "application/vnd.3gpp2.tcap": {
    "source": "iana",
    "extensions": ["tcap"]
  },
  "application/vnd.3lightssoftware.imagescal": {
    "source": "iana"
  },
  "application/vnd.3m.post-it-notes": {
    "source": "iana",
    "extensions": ["pwn"]
  },
  "application/vnd.accpac.simply.aso": {
    "source": "iana",
    "extensions": ["aso"]
  },
  "application/vnd.accpac.simply.imp": {
    "source": "iana",
    "extensions": ["imp"]
  },
  "application/vnd.acucobol": {
    "source": "iana",
    "extensions": ["acu"]
  },
  "application/vnd.acucorp": {
    "source": "iana",
    "extensions": ["atc","acutc"]
  },
  "application/vnd.adobe.air-application-installer-package+zip": {
    "source": "apache",
    "compressible": false,
    "extensions": ["air"]
  },
  "application/vnd.adobe.flash.movie": {
    "source": "iana"
  },
  "application/vnd.adobe.formscentral.fcdt": {
    "source": "iana",
    "extensions": ["fcdt"]
  },
  "application/vnd.adobe.fxp": {
    "source": "iana",
    "extensions": ["fxp","fxpl"]
  },
  "application/vnd.adobe.partial-upload": {
    "source": "iana"
  },
  "application/vnd.adobe.xdp+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xdp"]
  },
  "application/vnd.adobe.xfdf": {
    "source": "iana",
    "extensions": ["xfdf"]
  },
  "application/vnd.aether.imp": {
    "source": "iana"
  },
  "application/vnd.afpc.afplinedata": {
    "source": "iana"
  },
  "application/vnd.afpc.afplinedata-pagedef": {
    "source": "iana"
  },
  "application/vnd.afpc.cmoca-cmresource": {
    "source": "iana"
  },
  "application/vnd.afpc.foca-charset": {
    "source": "iana"
  },
  "application/vnd.afpc.foca-codedfont": {
    "source": "iana"
  },
  "application/vnd.afpc.foca-codepage": {
    "source": "iana"
  },
  "application/vnd.afpc.modca": {
    "source": "iana"
  },
  "application/vnd.afpc.modca-cmtable": {
    "source": "iana"
  },
  "application/vnd.afpc.modca-formdef": {
    "source": "iana"
  },
  "application/vnd.afpc.modca-mediummap": {
    "source": "iana"
  },
  "application/vnd.afpc.modca-objectcontainer": {
    "source": "iana"
  },
  "application/vnd.afpc.modca-overlay": {
    "source": "iana"
  },
  "application/vnd.afpc.modca-pagesegment": {
    "source": "iana"
  },
  "application/vnd.ah-barcode": {
    "source": "iana"
  },
  "application/vnd.ahead.space": {
    "source": "iana",
    "extensions": ["ahead"]
  },
  "application/vnd.airzip.filesecure.azf": {
    "source": "iana",
    "extensions": ["azf"]
  },
  "application/vnd.airzip.filesecure.azs": {
    "source": "iana",
    "extensions": ["azs"]
  },
  "application/vnd.amadeus+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.amazon.ebook": {
    "source": "apache",
    "extensions": ["azw"]
  },
  "application/vnd.amazon.mobi8-ebook": {
    "source": "iana"
  },
  "application/vnd.americandynamics.acc": {
    "source": "iana",
    "extensions": ["acc"]
  },
  "application/vnd.amiga.ami": {
    "source": "iana",
    "extensions": ["ami"]
  },
  "application/vnd.amundsen.maze+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.android.ota": {
    "source": "iana"
  },
  "application/vnd.android.package-archive": {
    "source": "apache",
    "compressible": false,
    "extensions": ["apk"]
  },
  "application/vnd.anki": {
    "source": "iana"
  },
  "application/vnd.anser-web-certificate-issue-initiation": {
    "source": "iana",
    "extensions": ["cii"]
  },
  "application/vnd.anser-web-funds-transfer-initiation": {
    "source": "apache",
    "extensions": ["fti"]
  },
  "application/vnd.antix.game-component": {
    "source": "iana",
    "extensions": ["atx"]
  },
  "application/vnd.apache.arrow.file": {
    "source": "iana"
  },
  "application/vnd.apache.arrow.stream": {
    "source": "iana"
  },
  "application/vnd.apache.thrift.binary": {
    "source": "iana"
  },
  "application/vnd.apache.thrift.compact": {
    "source": "iana"
  },
  "application/vnd.apache.thrift.json": {
    "source": "iana"
  },
  "application/vnd.api+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.aplextor.warrp+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.apothekende.reservation+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.apple.installer+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["mpkg"]
  },
  "application/vnd.apple.keynote": {
    "source": "iana",
    "extensions": ["key"]
  },
  "application/vnd.apple.mpegurl": {
    "source": "iana",
    "extensions": ["m3u8"]
  },
  "application/vnd.apple.numbers": {
    "source": "iana",
    "extensions": ["numbers"]
  },
  "application/vnd.apple.pages": {
    "source": "iana",
    "extensions": ["pages"]
  },
  "application/vnd.apple.pkpass": {
    "compressible": false,
    "extensions": ["pkpass"]
  },
  "application/vnd.arastra.swi": {
    "source": "iana"
  },
  "application/vnd.aristanetworks.swi": {
    "source": "iana",
    "extensions": ["swi"]
  },
  "application/vnd.artisan+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.artsquare": {
    "source": "iana"
  },
  "application/vnd.astraea-software.iota": {
    "source": "iana",
    "extensions": ["iota"]
  },
  "application/vnd.audiograph": {
    "source": "iana",
    "extensions": ["aep"]
  },
  "application/vnd.autopackage": {
    "source": "iana"
  },
  "application/vnd.avalon+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.avistar+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.balsamiq.bmml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["bmml"]
  },
  "application/vnd.balsamiq.bmpr": {
    "source": "iana"
  },
  "application/vnd.banana-accounting": {
    "source": "iana"
  },
  "application/vnd.bbf.usp.error": {
    "source": "iana"
  },
  "application/vnd.bbf.usp.msg": {
    "source": "iana"
  },
  "application/vnd.bbf.usp.msg+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.bekitzur-stech+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.bint.med-content": {
    "source": "iana"
  },
  "application/vnd.biopax.rdf+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.blink-idb-value-wrapper": {
    "source": "iana"
  },
  "application/vnd.blueice.multipass": {
    "source": "iana",
    "extensions": ["mpm"]
  },
  "application/vnd.bluetooth.ep.oob": {
    "source": "iana"
  },
  "application/vnd.bluetooth.le.oob": {
    "source": "iana"
  },
  "application/vnd.bmi": {
    "source": "iana",
    "extensions": ["bmi"]
  },
  "application/vnd.bpf": {
    "source": "iana"
  },
  "application/vnd.bpf3": {
    "source": "iana"
  },
  "application/vnd.businessobjects": {
    "source": "iana",
    "extensions": ["rep"]
  },
  "application/vnd.byu.uapi+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.cab-jscript": {
    "source": "iana"
  },
  "application/vnd.canon-cpdl": {
    "source": "iana"
  },
  "application/vnd.canon-lips": {
    "source": "iana"
  },
  "application/vnd.capasystems-pg+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.cendio.thinlinc.clientconf": {
    "source": "iana"
  },
  "application/vnd.century-systems.tcp_stream": {
    "source": "iana"
  },
  "application/vnd.chemdraw+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["cdxml"]
  },
  "application/vnd.chess-pgn": {
    "source": "iana"
  },
  "application/vnd.chipnuts.karaoke-mmd": {
    "source": "iana",
    "extensions": ["mmd"]
  },
  "application/vnd.ciedi": {
    "source": "iana"
  },
  "application/vnd.cinderella": {
    "source": "iana",
    "extensions": ["cdy"]
  },
  "application/vnd.cirpack.isdn-ext": {
    "source": "iana"
  },
  "application/vnd.citationstyles.style+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["csl"]
  },
  "application/vnd.claymore": {
    "source": "iana",
    "extensions": ["cla"]
  },
  "application/vnd.cloanto.rp9": {
    "source": "iana",
    "extensions": ["rp9"]
  },
  "application/vnd.clonk.c4group": {
    "source": "iana",
    "extensions": ["c4g","c4d","c4f","c4p","c4u"]
  },
  "application/vnd.cluetrust.cartomobile-config": {
    "source": "iana",
    "extensions": ["c11amc"]
  },
  "application/vnd.cluetrust.cartomobile-config-pkg": {
    "source": "iana",
    "extensions": ["c11amz"]
  },
  "application/vnd.coffeescript": {
    "source": "iana"
  },
  "application/vnd.collabio.xodocuments.document": {
    "source": "iana"
  },
  "application/vnd.collabio.xodocuments.document-template": {
    "source": "iana"
  },
  "application/vnd.collabio.xodocuments.presentation": {
    "source": "iana"
  },
  "application/vnd.collabio.xodocuments.presentation-template": {
    "source": "iana"
  },
  "application/vnd.collabio.xodocuments.spreadsheet": {
    "source": "iana"
  },
  "application/vnd.collabio.xodocuments.spreadsheet-template": {
    "source": "iana"
  },
  "application/vnd.collection+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.collection.doc+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.collection.next+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.comicbook+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.comicbook-rar": {
    "source": "iana"
  },
  "application/vnd.commerce-battelle": {
    "source": "iana"
  },
  "application/vnd.commonspace": {
    "source": "iana",
    "extensions": ["csp"]
  },
  "application/vnd.contact.cmsg": {
    "source": "iana",
    "extensions": ["cdbcmsg"]
  },
  "application/vnd.coreos.ignition+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.cosmocaller": {
    "source": "iana",
    "extensions": ["cmc"]
  },
  "application/vnd.crick.clicker": {
    "source": "iana",
    "extensions": ["clkx"]
  },
  "application/vnd.crick.clicker.keyboard": {
    "source": "iana",
    "extensions": ["clkk"]
  },
  "application/vnd.crick.clicker.palette": {
    "source": "iana",
    "extensions": ["clkp"]
  },
  "application/vnd.crick.clicker.template": {
    "source": "iana",
    "extensions": ["clkt"]
  },
  "application/vnd.crick.clicker.wordbank": {
    "source": "iana",
    "extensions": ["clkw"]
  },
  "application/vnd.criticaltools.wbs+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["wbs"]
  },
  "application/vnd.cryptii.pipe+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.crypto-shade-file": {
    "source": "iana"
  },
  "application/vnd.cryptomator.encrypted": {
    "source": "iana"
  },
  "application/vnd.cryptomator.vault": {
    "source": "iana"
  },
  "application/vnd.ctc-posml": {
    "source": "iana",
    "extensions": ["pml"]
  },
  "application/vnd.ctct.ws+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.cups-pdf": {
    "source": "iana"
  },
  "application/vnd.cups-postscript": {
    "source": "iana"
  },
  "application/vnd.cups-ppd": {
    "source": "iana",
    "extensions": ["ppd"]
  },
  "application/vnd.cups-raster": {
    "source": "iana"
  },
  "application/vnd.cups-raw": {
    "source": "iana"
  },
  "application/vnd.curl": {
    "source": "iana"
  },
  "application/vnd.curl.car": {
    "source": "apache",
    "extensions": ["car"]
  },
  "application/vnd.curl.pcurl": {
    "source": "apache",
    "extensions": ["pcurl"]
  },
  "application/vnd.cyan.dean.root+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.cybank": {
    "source": "iana"
  },
  "application/vnd.cyclonedx+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.cyclonedx+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.d2l.coursepackage1p0+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.d3m-dataset": {
    "source": "iana"
  },
  "application/vnd.d3m-problem": {
    "source": "iana"
  },
  "application/vnd.dart": {
    "source": "iana",
    "compressible": true,
    "extensions": ["dart"]
  },
  "application/vnd.data-vision.rdz": {
    "source": "iana",
    "extensions": ["rdz"]
  },
  "application/vnd.datapackage+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dataresource+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dbf": {
    "source": "iana",
    "extensions": ["dbf"]
  },
  "application/vnd.debian.binary-package": {
    "source": "iana"
  },
  "application/vnd.dece.data": {
    "source": "iana",
    "extensions": ["uvf","uvvf","uvd","uvvd"]
  },
  "application/vnd.dece.ttml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["uvt","uvvt"]
  },
  "application/vnd.dece.unspecified": {
    "source": "iana",
    "extensions": ["uvx","uvvx"]
  },
  "application/vnd.dece.zip": {
    "source": "iana",
    "extensions": ["uvz","uvvz"]
  },
  "application/vnd.denovo.fcselayout-link": {
    "source": "iana",
    "extensions": ["fe_launch"]
  },
  "application/vnd.desmume.movie": {
    "source": "iana"
  },
  "application/vnd.dir-bi.plate-dl-nosuffix": {
    "source": "iana"
  },
  "application/vnd.dm.delegation+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dna": {
    "source": "iana",
    "extensions": ["dna"]
  },
  "application/vnd.document+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dolby.mlp": {
    "source": "apache",
    "extensions": ["mlp"]
  },
  "application/vnd.dolby.mobile.1": {
    "source": "iana"
  },
  "application/vnd.dolby.mobile.2": {
    "source": "iana"
  },
  "application/vnd.doremir.scorecloud-binary-document": {
    "source": "iana"
  },
  "application/vnd.dpgraph": {
    "source": "iana",
    "extensions": ["dpg"]
  },
  "application/vnd.dreamfactory": {
    "source": "iana",
    "extensions": ["dfac"]
  },
  "application/vnd.drive+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ds-keypoint": {
    "source": "apache",
    "extensions": ["kpxx"]
  },
  "application/vnd.dtg.local": {
    "source": "iana"
  },
  "application/vnd.dtg.local.flash": {
    "source": "iana"
  },
  "application/vnd.dtg.local.html": {
    "source": "iana"
  },
  "application/vnd.dvb.ait": {
    "source": "iana",
    "extensions": ["ait"]
  },
  "application/vnd.dvb.dvbisl+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dvb.dvbj": {
    "source": "iana"
  },
  "application/vnd.dvb.esgcontainer": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcdftnotifaccess": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcesgaccess": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcesgaccess2": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcesgpdd": {
    "source": "iana"
  },
  "application/vnd.dvb.ipdcroaming": {
    "source": "iana"
  },
  "application/vnd.dvb.iptv.alfec-base": {
    "source": "iana"
  },
  "application/vnd.dvb.iptv.alfec-enhancement": {
    "source": "iana"
  },
  "application/vnd.dvb.notif-aggregate-root+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dvb.notif-container+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dvb.notif-generic+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dvb.notif-ia-msglist+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dvb.notif-ia-registration-request+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dvb.notif-ia-registration-response+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dvb.notif-init+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.dvb.pfr": {
    "source": "iana"
  },
  "application/vnd.dvb.service": {
    "source": "iana",
    "extensions": ["svc"]
  },
  "application/vnd.dxr": {
    "source": "iana"
  },
  "application/vnd.dynageo": {
    "source": "iana",
    "extensions": ["geo"]
  },
  "application/vnd.dzr": {
    "source": "iana"
  },
  "application/vnd.easykaraoke.cdgdownload": {
    "source": "iana"
  },
  "application/vnd.ecdis-update": {
    "source": "iana"
  },
  "application/vnd.ecip.rlp": {
    "source": "iana"
  },
  "application/vnd.ecowin.chart": {
    "source": "iana",
    "extensions": ["mag"]
  },
  "application/vnd.ecowin.filerequest": {
    "source": "iana"
  },
  "application/vnd.ecowin.fileupdate": {
    "source": "iana"
  },
  "application/vnd.ecowin.series": {
    "source": "iana"
  },
  "application/vnd.ecowin.seriesrequest": {
    "source": "iana"
  },
  "application/vnd.ecowin.seriesupdate": {
    "source": "iana"
  },
  "application/vnd.efi.img": {
    "source": "iana"
  },
  "application/vnd.efi.iso": {
    "source": "iana"
  },
  "application/vnd.emclient.accessrequest+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.enliven": {
    "source": "iana",
    "extensions": ["nml"]
  },
  "application/vnd.enphase.envoy": {
    "source": "iana"
  },
  "application/vnd.eprints.data+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.epson.esf": {
    "source": "iana",
    "extensions": ["esf"]
  },
  "application/vnd.epson.msf": {
    "source": "iana",
    "extensions": ["msf"]
  },
  "application/vnd.epson.quickanime": {
    "source": "iana",
    "extensions": ["qam"]
  },
  "application/vnd.epson.salt": {
    "source": "iana",
    "extensions": ["slt"]
  },
  "application/vnd.epson.ssf": {
    "source": "iana",
    "extensions": ["ssf"]
  },
  "application/vnd.ericsson.quickcall": {
    "source": "iana"
  },
  "application/vnd.espass-espass+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.eszigno3+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["es3","et3"]
  },
  "application/vnd.etsi.aoc+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.asic-e+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.etsi.asic-s+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.etsi.cug+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.iptvcommand+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.iptvdiscovery+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.iptvprofile+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.iptvsad-bc+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.iptvsad-cod+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.iptvsad-npvr+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.iptvservice+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.iptvsync+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.iptvueprofile+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.mcid+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.mheg5": {
    "source": "iana"
  },
  "application/vnd.etsi.overload-control-policy-dataset+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.pstn+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.sci+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.simservs+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.timestamp-token": {
    "source": "iana"
  },
  "application/vnd.etsi.tsl+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.etsi.tsl.der": {
    "source": "iana"
  },
  "application/vnd.eudora.data": {
    "source": "iana"
  },
  "application/vnd.evolv.ecig.profile": {
    "source": "iana"
  },
  "application/vnd.evolv.ecig.settings": {
    "source": "iana"
  },
  "application/vnd.evolv.ecig.theme": {
    "source": "iana"
  },
  "application/vnd.exstream-empower+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.exstream-package": {
    "source": "iana"
  },
  "application/vnd.ezpix-album": {
    "source": "iana",
    "extensions": ["ez2"]
  },
  "application/vnd.ezpix-package": {
    "source": "iana",
    "extensions": ["ez3"]
  },
  "application/vnd.f-secure.mobile": {
    "source": "iana"
  },
  "application/vnd.fastcopy-disk-image": {
    "source": "iana"
  },
  "application/vnd.fdf": {
    "source": "iana",
    "extensions": ["fdf"]
  },
  "application/vnd.fdsn.mseed": {
    "source": "iana",
    "extensions": ["mseed"]
  },
  "application/vnd.fdsn.seed": {
    "source": "iana",
    "extensions": ["seed","dataless"]
  },
  "application/vnd.ffsns": {
    "source": "iana"
  },
  "application/vnd.ficlab.flb+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.filmit.zfc": {
    "source": "iana"
  },
  "application/vnd.fints": {
    "source": "iana"
  },
  "application/vnd.firemonkeys.cloudcell": {
    "source": "iana"
  },
  "application/vnd.flographit": {
    "source": "iana",
    "extensions": ["gph"]
  },
  "application/vnd.fluxtime.clip": {
    "source": "iana",
    "extensions": ["ftc"]
  },
  "application/vnd.font-fontforge-sfd": {
    "source": "iana"
  },
  "application/vnd.framemaker": {
    "source": "iana",
    "extensions": ["fm","frame","maker","book"]
  },
  "application/vnd.frogans.fnc": {
    "source": "iana",
    "extensions": ["fnc"]
  },
  "application/vnd.frogans.ltf": {
    "source": "iana",
    "extensions": ["ltf"]
  },
  "application/vnd.fsc.weblaunch": {
    "source": "iana",
    "extensions": ["fsc"]
  },
  "application/vnd.fujifilm.fb.docuworks": {
    "source": "iana"
  },
  "application/vnd.fujifilm.fb.docuworks.binder": {
    "source": "iana"
  },
  "application/vnd.fujifilm.fb.docuworks.container": {
    "source": "iana"
  },
  "application/vnd.fujifilm.fb.jfi+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.fujitsu.oasys": {
    "source": "iana",
    "extensions": ["oas"]
  },
  "application/vnd.fujitsu.oasys2": {
    "source": "iana",
    "extensions": ["oa2"]
  },
  "application/vnd.fujitsu.oasys3": {
    "source": "iana",
    "extensions": ["oa3"]
  },
  "application/vnd.fujitsu.oasysgp": {
    "source": "iana",
    "extensions": ["fg5"]
  },
  "application/vnd.fujitsu.oasysprs": {
    "source": "iana",
    "extensions": ["bh2"]
  },
  "application/vnd.fujixerox.art-ex": {
    "source": "iana"
  },
  "application/vnd.fujixerox.art4": {
    "source": "iana"
  },
  "application/vnd.fujixerox.ddd": {
    "source": "iana",
    "extensions": ["ddd"]
  },
  "application/vnd.fujixerox.docuworks": {
    "source": "iana",
    "extensions": ["xdw"]
  },
  "application/vnd.fujixerox.docuworks.binder": {
    "source": "iana",
    "extensions": ["xbd"]
  },
  "application/vnd.fujixerox.docuworks.container": {
    "source": "iana"
  },
  "application/vnd.fujixerox.hbpl": {
    "source": "iana"
  },
  "application/vnd.fut-misnet": {
    "source": "iana"
  },
  "application/vnd.futoin+cbor": {
    "source": "iana"
  },
  "application/vnd.futoin+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.fuzzysheet": {
    "source": "iana",
    "extensions": ["fzs"]
  },
  "application/vnd.genomatix.tuxedo": {
    "source": "iana",
    "extensions": ["txd"]
  },
  "application/vnd.gentics.grd+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.geo+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.geocube+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.geogebra.file": {
    "source": "iana",
    "extensions": ["ggb"]
  },
  "application/vnd.geogebra.slides": {
    "source": "iana"
  },
  "application/vnd.geogebra.tool": {
    "source": "iana",
    "extensions": ["ggt"]
  },
  "application/vnd.geometry-explorer": {
    "source": "iana",
    "extensions": ["gex","gre"]
  },
  "application/vnd.geonext": {
    "source": "iana",
    "extensions": ["gxt"]
  },
  "application/vnd.geoplan": {
    "source": "iana",
    "extensions": ["g2w"]
  },
  "application/vnd.geospace": {
    "source": "iana",
    "extensions": ["g3w"]
  },
  "application/vnd.gerber": {
    "source": "iana"
  },
  "application/vnd.globalplatform.card-content-mgt": {
    "source": "iana"
  },
  "application/vnd.globalplatform.card-content-mgt-response": {
    "source": "iana"
  },
  "application/vnd.gmx": {
    "source": "iana",
    "extensions": ["gmx"]
  },
  "application/vnd.google-apps.document": {
    "compressible": false,
    "extensions": ["gdoc"]
  },
  "application/vnd.google-apps.presentation": {
    "compressible": false,
    "extensions": ["gslides"]
  },
  "application/vnd.google-apps.spreadsheet": {
    "compressible": false,
    "extensions": ["gsheet"]
  },
  "application/vnd.google-earth.kml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["kml"]
  },
  "application/vnd.google-earth.kmz": {
    "source": "iana",
    "compressible": false,
    "extensions": ["kmz"]
  },
  "application/vnd.gov.sk.e-form+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.gov.sk.e-form+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.gov.sk.xmldatacontainer+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.grafeq": {
    "source": "iana",
    "extensions": ["gqf","gqs"]
  },
  "application/vnd.gridmp": {
    "source": "iana"
  },
  "application/vnd.groove-account": {
    "source": "iana",
    "extensions": ["gac"]
  },
  "application/vnd.groove-help": {
    "source": "iana",
    "extensions": ["ghf"]
  },
  "application/vnd.groove-identity-message": {
    "source": "iana",
    "extensions": ["gim"]
  },
  "application/vnd.groove-injector": {
    "source": "iana",
    "extensions": ["grv"]
  },
  "application/vnd.groove-tool-message": {
    "source": "iana",
    "extensions": ["gtm"]
  },
  "application/vnd.groove-tool-template": {
    "source": "iana",
    "extensions": ["tpl"]
  },
  "application/vnd.groove-vcard": {
    "source": "iana",
    "extensions": ["vcg"]
  },
  "application/vnd.hal+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hal+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["hal"]
  },
  "application/vnd.handheld-entertainment+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["zmm"]
  },
  "application/vnd.hbci": {
    "source": "iana",
    "extensions": ["hbci"]
  },
  "application/vnd.hc+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hcl-bireports": {
    "source": "iana"
  },
  "application/vnd.hdt": {
    "source": "iana"
  },
  "application/vnd.heroku+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hhe.lesson-player": {
    "source": "iana",
    "extensions": ["les"]
  },
  "application/vnd.hp-hpgl": {
    "source": "iana",
    "extensions": ["hpgl"]
  },
  "application/vnd.hp-hpid": {
    "source": "iana",
    "extensions": ["hpid"]
  },
  "application/vnd.hp-hps": {
    "source": "iana",
    "extensions": ["hps"]
  },
  "application/vnd.hp-jlyt": {
    "source": "iana",
    "extensions": ["jlt"]
  },
  "application/vnd.hp-pcl": {
    "source": "iana",
    "extensions": ["pcl"]
  },
  "application/vnd.hp-pclxl": {
    "source": "iana",
    "extensions": ["pclxl"]
  },
  "application/vnd.httphone": {
    "source": "iana"
  },
  "application/vnd.hydrostatix.sof-data": {
    "source": "iana",
    "extensions": ["sfd-hdstx"]
  },
  "application/vnd.hyper+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hyper-item+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hyperdrive+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.hzn-3d-crossword": {
    "source": "iana"
  },
  "application/vnd.ibm.afplinedata": {
    "source": "iana"
  },
  "application/vnd.ibm.electronic-media": {
    "source": "iana"
  },
  "application/vnd.ibm.minipay": {
    "source": "iana",
    "extensions": ["mpy"]
  },
  "application/vnd.ibm.modcap": {
    "source": "iana",
    "extensions": ["afp","listafp","list3820"]
  },
  "application/vnd.ibm.rights-management": {
    "source": "iana",
    "extensions": ["irm"]
  },
  "application/vnd.ibm.secure-container": {
    "source": "iana",
    "extensions": ["sc"]
  },
  "application/vnd.iccprofile": {
    "source": "iana",
    "extensions": ["icc","icm"]
  },
  "application/vnd.ieee.1905": {
    "source": "iana"
  },
  "application/vnd.igloader": {
    "source": "iana",
    "extensions": ["igl"]
  },
  "application/vnd.imagemeter.folder+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.imagemeter.image+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.immervision-ivp": {
    "source": "iana",
    "extensions": ["ivp"]
  },
  "application/vnd.immervision-ivu": {
    "source": "iana",
    "extensions": ["ivu"]
  },
  "application/vnd.ims.imsccv1p1": {
    "source": "iana"
  },
  "application/vnd.ims.imsccv1p2": {
    "source": "iana"
  },
  "application/vnd.ims.imsccv1p3": {
    "source": "iana"
  },
  "application/vnd.ims.lis.v2.result+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolproxy+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolproxy.id+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolsettings+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ims.lti.v2.toolsettings.simple+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.informedcontrol.rms+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.informix-visionary": {
    "source": "iana"
  },
  "application/vnd.infotech.project": {
    "source": "iana"
  },
  "application/vnd.infotech.project+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.innopath.wamp.notification": {
    "source": "iana"
  },
  "application/vnd.insors.igm": {
    "source": "iana",
    "extensions": ["igm"]
  },
  "application/vnd.intercon.formnet": {
    "source": "iana",
    "extensions": ["xpw","xpx"]
  },
  "application/vnd.intergeo": {
    "source": "iana",
    "extensions": ["i2g"]
  },
  "application/vnd.intertrust.digibox": {
    "source": "iana"
  },
  "application/vnd.intertrust.nncp": {
    "source": "iana"
  },
  "application/vnd.intu.qbo": {
    "source": "iana",
    "extensions": ["qbo"]
  },
  "application/vnd.intu.qfx": {
    "source": "iana",
    "extensions": ["qfx"]
  },
  "application/vnd.iptc.g2.catalogitem+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.iptc.g2.conceptitem+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.iptc.g2.knowledgeitem+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.iptc.g2.newsitem+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.iptc.g2.newsmessage+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.iptc.g2.packageitem+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.iptc.g2.planningitem+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ipunplugged.rcprofile": {
    "source": "iana",
    "extensions": ["rcprofile"]
  },
  "application/vnd.irepository.package+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["irp"]
  },
  "application/vnd.is-xpr": {
    "source": "iana",
    "extensions": ["xpr"]
  },
  "application/vnd.isac.fcs": {
    "source": "iana",
    "extensions": ["fcs"]
  },
  "application/vnd.iso11783-10+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.jam": {
    "source": "iana",
    "extensions": ["jam"]
  },
  "application/vnd.japannet-directory-service": {
    "source": "iana"
  },
  "application/vnd.japannet-jpnstore-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-payment-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-registration": {
    "source": "iana"
  },
  "application/vnd.japannet-registration-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-setstore-wakeup": {
    "source": "iana"
  },
  "application/vnd.japannet-verification": {
    "source": "iana"
  },
  "application/vnd.japannet-verification-wakeup": {
    "source": "iana"
  },
  "application/vnd.jcp.javame.midlet-rms": {
    "source": "iana",
    "extensions": ["rms"]
  },
  "application/vnd.jisp": {
    "source": "iana",
    "extensions": ["jisp"]
  },
  "application/vnd.joost.joda-archive": {
    "source": "iana",
    "extensions": ["joda"]
  },
  "application/vnd.jsk.isdn-ngn": {
    "source": "iana"
  },
  "application/vnd.kahootz": {
    "source": "iana",
    "extensions": ["ktz","ktr"]
  },
  "application/vnd.kde.karbon": {
    "source": "iana",
    "extensions": ["karbon"]
  },
  "application/vnd.kde.kchart": {
    "source": "iana",
    "extensions": ["chrt"]
  },
  "application/vnd.kde.kformula": {
    "source": "iana",
    "extensions": ["kfo"]
  },
  "application/vnd.kde.kivio": {
    "source": "iana",
    "extensions": ["flw"]
  },
  "application/vnd.kde.kontour": {
    "source": "iana",
    "extensions": ["kon"]
  },
  "application/vnd.kde.kpresenter": {
    "source": "iana",
    "extensions": ["kpr","kpt"]
  },
  "application/vnd.kde.kspread": {
    "source": "iana",
    "extensions": ["ksp"]
  },
  "application/vnd.kde.kword": {
    "source": "iana",
    "extensions": ["kwd","kwt"]
  },
  "application/vnd.kenameaapp": {
    "source": "iana",
    "extensions": ["htke"]
  },
  "application/vnd.kidspiration": {
    "source": "iana",
    "extensions": ["kia"]
  },
  "application/vnd.kinar": {
    "source": "iana",
    "extensions": ["kne","knp"]
  },
  "application/vnd.koan": {
    "source": "iana",
    "extensions": ["skp","skd","skt","skm"]
  },
  "application/vnd.kodak-descriptor": {
    "source": "iana",
    "extensions": ["sse"]
  },
  "application/vnd.las": {
    "source": "iana"
  },
  "application/vnd.las.las+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.las.las+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["lasxml"]
  },
  "application/vnd.laszip": {
    "source": "iana"
  },
  "application/vnd.leap+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.liberty-request+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.llamagraphics.life-balance.desktop": {
    "source": "iana",
    "extensions": ["lbd"]
  },
  "application/vnd.llamagraphics.life-balance.exchange+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["lbe"]
  },
  "application/vnd.logipipe.circuit+zip": {
    "source": "iana",
    "compressible": false
  },
  "application/vnd.loom": {
    "source": "iana"
  },
  "application/vnd.lotus-1-2-3": {
    "source": "iana",
    "extensions": ["123"]
  },
  "application/vnd.lotus-approach": {
    "source": "iana",
    "extensions": ["apr"]
  },
  "application/vnd.lotus-freelance": {
    "source": "iana",
    "extensions": ["pre"]
  },
  "application/vnd.lotus-notes": {
    "source": "iana",
    "extensions": ["nsf"]
  },
  "application/vnd.lotus-organizer": {
    "source": "iana",
    "extensions": ["org"]
  },
  "application/vnd.lotus-screencam": {
    "source": "iana",
    "extensions": ["scm"]
  },
  "application/vnd.lotus-wordpro": {
    "source": "iana",
    "extensions": ["lwp"]
  },
  "application/vnd.macports.portpkg": {
    "source": "iana",
    "extensions": ["portpkg"]
  },
  "application/vnd.mapbox-vector-tile": {
    "source": "iana",
    "extensions": ["mvt"]
  },
  "application/vnd.marlin.drm.actiontoken+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.marlin.drm.conftoken+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.marlin.drm.license+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.marlin.drm.mdcf": {
    "source": "iana"
  },
  "application/vnd.mason+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.maxmind.maxmind-db": {
    "source": "iana"
  },
  "application/vnd.mcd": {
    "source": "iana",
    "extensions": ["mcd"]
  },
  "application/vnd.medcalcdata": {
    "source": "iana",
    "extensions": ["mc1"]
  },
  "application/vnd.mediastation.cdkey": {
    "source": "iana",
    "extensions": ["cdkey"]
  },
  "application/vnd.meridian-slingshot": {
    "source": "iana"
  },
  "application/vnd.mfer": {
    "source": "iana",
    "extensions": ["mwf"]
  },
  "application/vnd.mfmp": {
    "source": "iana",
    "extensions": ["mfm"]
  },
  "application/vnd.micro+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.micrografx.flo": {
    "source": "iana",
    "extensions": ["flo"]
  },
  "application/vnd.micrografx.igx": {
    "source": "iana",
    "extensions": ["igx"]
  },
  "application/vnd.microsoft.portable-executable": {
    "source": "iana"
  },
  "application/vnd.microsoft.windows.thumbnail-cache": {
    "source": "iana"
  },
  "application/vnd.miele+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.mif": {
    "source": "iana",
    "extensions": ["mif"]
  },
  "application/vnd.minisoft-hp3000-save": {
    "source": "iana"
  },
  "application/vnd.mitsubishi.misty-guard.trustweb": {
    "source": "iana"
  },
  "application/vnd.mobius.daf": {
    "source": "iana",
    "extensions": ["daf"]
  },
  "application/vnd.mobius.dis": {
    "source": "iana",
    "extensions": ["dis"]
  },
  "application/vnd.mobius.mbk": {
    "source": "iana",
    "extensions": ["mbk"]
  },
  "application/vnd.mobius.mqy": {
    "source": "iana",
    "extensions": ["mqy"]
  },
  "application/vnd.mobius.msl": {
    "source": "iana",
    "extensions": ["msl"]
  },
  "application/vnd.mobius.plc": {
    "source": "iana",
    "extensions": ["plc"]
  },
  "application/vnd.mobius.txf": {
    "source": "iana",
    "extensions": ["txf"]
  },
  "application/vnd.mophun.application": {
    "source": "iana",
    "extensions": ["mpn"]
  },
  "application/vnd.mophun.certificate": {
    "source": "iana",
    "extensions": ["mpc"]
  },
  "application/vnd.motorola.flexsuite": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.adsi": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.fis": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.gotap": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.kmr": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.ttc": {
    "source": "iana"
  },
  "application/vnd.motorola.flexsuite.wem": {
    "source": "iana"
  },
  "application/vnd.motorola.iprm": {
    "source": "iana"
  },
  "application/vnd.mozilla.xul+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xul"]
  },
  "application/vnd.ms-3mfdocument": {
    "source": "iana"
  },
  "application/vnd.ms-artgalry": {
    "source": "iana",
    "extensions": ["cil"]
  },
  "application/vnd.ms-asf": {
    "source": "iana"
  },
  "application/vnd.ms-cab-compressed": {
    "source": "iana",
    "extensions": ["cab"]
  },
  "application/vnd.ms-color.iccprofile": {
    "source": "apache"
  },
  "application/vnd.ms-excel": {
    "source": "iana",
    "compressible": false,
    "extensions": ["xls","xlm","xla","xlc","xlt","xlw"]
  },
  "application/vnd.ms-excel.addin.macroenabled.12": {
    "source": "iana",
    "extensions": ["xlam"]
  },
  "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
    "source": "iana",
    "extensions": ["xlsb"]
  },
  "application/vnd.ms-excel.sheet.macroenabled.12": {
    "source": "iana",
    "extensions": ["xlsm"]
  },
  "application/vnd.ms-excel.template.macroenabled.12": {
    "source": "iana",
    "extensions": ["xltm"]
  },
  "application/vnd.ms-fontobject": {
    "source": "iana",
    "compressible": true,
    "extensions": ["eot"]
  },
  "application/vnd.ms-htmlhelp": {
    "source": "iana",
    "extensions": ["chm"]
  },
  "application/vnd.ms-ims": {
    "source": "iana",
    "extensions": ["ims"]
  },
  "application/vnd.ms-lrm": {
    "source": "iana",
    "extensions": ["lrm"]
  },
  "application/vnd.ms-office.activex+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ms-officetheme": {
    "source": "iana",
    "extensions": ["thmx"]
  },
  "application/vnd.ms-opentype": {
    "source": "apache",
    "compressible": true
  },
  "application/vnd.ms-outlook": {
    "compressible": false,
    "extensions": ["msg"]
  },
  "application/vnd.ms-package.obfuscated-opentype": {
    "source": "apache"
  },
  "application/vnd.ms-pki.seccat": {
    "source": "apache",
    "extensions": ["cat"]
  },
  "application/vnd.ms-pki.stl": {
    "source": "apache",
    "extensions": ["stl"]
  },
  "application/vnd.ms-playready.initiator+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ms-powerpoint": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ppt","pps","pot"]
  },
  "application/vnd.ms-powerpoint.addin.macroenabled.12": {
    "source": "iana",
    "extensions": ["ppam"]
  },
  "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
    "source": "iana",
    "extensions": ["pptm"]
  },
  "application/vnd.ms-powerpoint.slide.macroenabled.12": {
    "source": "iana",
    "extensions": ["sldm"]
  },
  "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
    "source": "iana",
    "extensions": ["ppsm"]
  },
  "application/vnd.ms-powerpoint.template.macroenabled.12": {
    "source": "iana",
    "extensions": ["potm"]
  },
  "application/vnd.ms-printdevicecapabilities+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ms-printing.printticket+xml": {
    "source": "apache",
    "compressible": true
  },
  "application/vnd.ms-printschematicket+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.ms-project": {
    "source": "iana",
    "extensions": ["mpp","mpt"]
  },
  "application/vnd.ms-tnef": {
    "source": "iana"
  },
  "application/vnd.ms-windows.devicepairing": {
    "source": "iana"
  },
  "application/vnd.ms-windows.nwprinting.oob": {
    "source": "iana"
  },
  "application/vnd.ms-windows.printerpairing": {
    "source": "iana"
  },
  "application/vnd.ms-windows.wsd.oob": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.lic-chlg-req": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.lic-resp": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.meter-chlg-req": {
    "source": "iana"
  },
  "application/vnd.ms-wmdrm.meter-resp": {
    "source": "iana"
  },
  "application/vnd.ms-word.document.macroenabled.12": {
    "source": "iana",
    "extensions": ["docm"]
  },
  "application/vnd.ms-word.template.macroenabled.12": {
    "source": "iana",
    "extensions": ["dotm"]
  },
  "application/vnd.ms-works": {
    "source": "iana",
    "extensions": ["wps","wks","wcm","wdb"]
  },
  "application/vnd.ms-wpl": {
    "source": "iana",
    "extensions": ["wpl"]
  },
  "application/vnd.ms-xpsdocument": {
    "source": "iana",
    "compressible": false,
    "extensions": ["xps"]
  },
  "application/vnd.msa-disk-image": {
    "source": "iana"
  },
  "application/vnd.mseq": {
    "source": "iana",
    "extensions": ["mseq"]
  },
  "application/vnd.msign": {
    "source": "iana"
  },
  "application/vnd.multiad.creator": {
    "source": "iana"
  },
  "application/vnd.multiad.creator.cif": {
    "source": "iana"
  },
  "application/vnd.music-niff": {
    "source": "iana"
  },
  "application/vnd.musician": {
    "source": "iana",
    "extensions": ["mus"]
  },
  "application/vnd.muvee.style": {
    "source": "iana",
    "extensions": ["msty"]
  },
  "application/vnd.mynfc": {
    "source": "iana",
    "extensions": ["taglet"]
  },
  "application/vnd.ncd.control": {
    "source": "iana"
  },
  "application/vnd.ncd.reference": {
    "source": "iana"
  },
  "application/vnd.nearst.inv+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.nebumind.line": {
    "source": "iana"
  },
  "application/vnd.nervana": {
    "source": "iana"
  },
  "application/vnd.netfpx": {
    "source": "iana"
  },
  "application/vnd.neurolanguage.nlu": {
    "source": "iana",
    "extensions": ["nlu"]
  },
  "application/vnd.nimn": {
    "source": "iana"
  },
  "application/vnd.nintendo.nitro.rom": {
    "source": "iana"
  },
  "application/vnd.nintendo.snes.rom": {
    "source": "iana"
  },
  "application/vnd.nitf": {
    "source": "iana",
    "extensions": ["ntf","nitf"]
  },
  "application/vnd.noblenet-directory": {
    "source": "iana",
    "extensions": ["nnd"]
  },
  "application/vnd.noblenet-sealer": {
    "source": "iana",
    "extensions": ["nns"]
  },
  "application/vnd.noblenet-web": {
    "source": "iana",
    "extensions": ["nnw"]
  },
  "application/vnd.nokia.catalogs": {
    "source": "iana"
  },
  "application/vnd.nokia.conml+wbxml": {
    "source": "iana"
  },
  "application/vnd.nokia.conml+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.nokia.iptv.config+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.nokia.isds-radio-presets": {
    "source": "iana"
  },
  "application/vnd.nokia.landmark+wbxml": {
    "source": "iana"
  },
  "application/vnd.nokia.landmark+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.nokia.landmarkcollection+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.nokia.n-gage.ac+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ac"]
  },
  "application/vnd.nokia.n-gage.data": {
    "source": "iana",
    "extensions": ["ngdat"]
  },
  "application/vnd.nokia.n-gage.symbian.install": {
    "source": "iana",
    "extensions": ["n-gage"]
  },
  "application/vnd.nokia.ncd": {
    "source": "iana"
  },
  "application/vnd.nokia.pcd+wbxml": {
    "source": "iana"
  },
  "application/vnd.nokia.pcd+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.nokia.radio-preset": {
    "source": "iana",
    "extensions": ["rpst"]
  },
  "application/vnd.nokia.radio-presets": {
    "source": "iana",
    "extensions": ["rpss"]
  },
  "application/vnd.novadigm.edm": {
    "source": "iana",
    "extensions": ["edm"]
  },
  "application/vnd.novadigm.edx": {
    "source": "iana",
    "extensions": ["edx"]
  },
  "application/vnd.novadigm.ext": {
    "source": "iana",
    "extensions": ["ext"]
  },
  "application/vnd.ntt-local.content-share": {
    "source": "iana"
  },
  "application/vnd.ntt-local.file-transfer": {
    "source": "iana"
  },
  "application/vnd.ntt-local.ogw_remote-access": {
    "source": "iana"
  },
  "application/vnd.ntt-local.sip-ta_remote": {
    "source": "iana"
  },
  "application/vnd.ntt-local.sip-ta_tcp_stream": {
    "source": "iana"
  },
  "application/vnd.oasis.opendocument.chart": {
    "source": "iana",
    "extensions": ["odc"]
  },
  "application/vnd.oasis.opendocument.chart-template": {
    "source": "iana",
    "extensions": ["otc"]
  },
  "application/vnd.oasis.opendocument.database": {
    "source": "iana",
    "extensions": ["odb"]
  },
  "application/vnd.oasis.opendocument.formula": {
    "source": "iana",
    "extensions": ["odf"]
  },
  "application/vnd.oasis.opendocument.formula-template": {
    "source": "iana",
    "extensions": ["odft"]
  },
  "application/vnd.oasis.opendocument.graphics": {
    "source": "iana",
    "compressible": false,
    "extensions": ["odg"]
  },
  "application/vnd.oasis.opendocument.graphics-template": {
    "source": "iana",
    "extensions": ["otg"]
  },
  "application/vnd.oasis.opendocument.image": {
    "source": "iana",
    "extensions": ["odi"]
  },
  "application/vnd.oasis.opendocument.image-template": {
    "source": "iana",
    "extensions": ["oti"]
  },
  "application/vnd.oasis.opendocument.presentation": {
    "source": "iana",
    "compressible": false,
    "extensions": ["odp"]
  },
  "application/vnd.oasis.opendocument.presentation-template": {
    "source": "iana",
    "extensions": ["otp"]
  },
  "application/vnd.oasis.opendocument.spreadsheet": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ods"]
  },
  "application/vnd.oasis.opendocument.spreadsheet-template": {
    "source": "iana",
    "extensions": ["ots"]
  },
  "application/vnd.oasis.opendocument.text": {
    "source": "iana",
    "compressible": false,
    "extensions": ["odt"]
  },
  "application/vnd.oasis.opendocument.text-master": {
    "source": "iana",
    "extensions": ["odm"]
  },
  "application/vnd.oasis.opendocument.text-template": {
    "source": "iana",
    "extensions": ["ott"]
  },
  "application/vnd.oasis.opendocument.text-web": {
    "source": "iana",
    "extensions": ["oth"]
  },
  "application/vnd.obn": {
    "source": "iana"
  },
  "application/vnd.ocf+cbor": {
    "source": "iana"
  },
  "application/vnd.oci.image.manifest.v1+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oftn.l10n+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.contentaccessdownload+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.contentaccessstreaming+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.cspg-hexbinary": {
    "source": "iana"
  },
  "application/vnd.oipf.dae.svg+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.dae.xhtml+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.mippvcontrolmessage+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.pae.gem": {
    "source": "iana"
  },
  "application/vnd.oipf.spdiscovery+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.spdlist+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.ueprofile+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oipf.userprofile+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.olpc-sugar": {
    "source": "iana",
    "extensions": ["xo"]
  },
  "application/vnd.oma-scws-config": {
    "source": "iana"
  },
  "application/vnd.oma-scws-http-request": {
    "source": "iana"
  },
  "application/vnd.oma-scws-http-response": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.bcast.drm-trigger+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.bcast.imd+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.bcast.ltkm": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.notification+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.bcast.provisioningtrigger": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sgboot": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.sgdd+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.bcast.sgdu": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.simple-symbol-container": {
    "source": "iana"
  },
  "application/vnd.oma.bcast.smartcard-trigger+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.bcast.sprov+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.bcast.stkm": {
    "source": "iana"
  },
  "application/vnd.oma.cab-address-book+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.cab-feature-handler+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.cab-pcc+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.cab-subs-invite+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.cab-user-prefs+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.dcd": {
    "source": "iana"
  },
  "application/vnd.oma.dcdc": {
    "source": "iana"
  },
  "application/vnd.oma.dd2+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["dd2"]
  },
  "application/vnd.oma.drm.risd+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.group-usage-list+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.lwm2m+cbor": {
    "source": "iana"
  },
  "application/vnd.oma.lwm2m+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.lwm2m+tlv": {
    "source": "iana"
  },
  "application/vnd.oma.pal+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.poc.detailed-progress-report+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.poc.final-report+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.poc.groups+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.poc.invocation-descriptor+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.poc.optimized-progress-report+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.push": {
    "source": "iana"
  },
  "application/vnd.oma.scidm.messages+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oma.xcap-directory+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.omads-email+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/vnd.omads-file+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/vnd.omads-folder+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/vnd.omaloc-supl-init": {
    "source": "iana"
  },
  "application/vnd.onepager": {
    "source": "iana"
  },
  "application/vnd.onepagertamp": {
    "source": "iana"
  },
  "application/vnd.onepagertamx": {
    "source": "iana"
  },
  "application/vnd.onepagertat": {
    "source": "iana"
  },
  "application/vnd.onepagertatp": {
    "source": "iana"
  },
  "application/vnd.onepagertatx": {
    "source": "iana"
  },
  "application/vnd.openblox.game+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["obgx"]
  },
  "application/vnd.openblox.game-binary": {
    "source": "iana"
  },
  "application/vnd.openeye.oeb": {
    "source": "iana"
  },
  "application/vnd.openofficeorg.extension": {
    "source": "apache",
    "extensions": ["oxt"]
  },
  "application/vnd.openstreetmap.data+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["osm"]
  },
  "application/vnd.opentimestamps.ots": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.drawing+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
    "source": "iana",
    "compressible": false,
    "extensions": ["pptx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slide": {
    "source": "iana",
    "extensions": ["sldx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
    "source": "iana",
    "extensions": ["ppsx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.template": {
    "source": "iana",
    "extensions": ["potx"]
  },
  "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
    "source": "iana",
    "compressible": false,
    "extensions": ["xlsx"]
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
    "source": "iana",
    "extensions": ["xltx"]
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.theme+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.vmldrawing": {
    "source": "iana"
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
    "source": "iana",
    "compressible": false,
    "extensions": ["docx"]
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
    "source": "iana",
    "extensions": ["dotx"]
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-package.core-properties+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.openxmlformats-package.relationships+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oracle.resource+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.orange.indata": {
    "source": "iana"
  },
  "application/vnd.osa.netdeploy": {
    "source": "iana"
  },
  "application/vnd.osgeo.mapguide.package": {
    "source": "iana",
    "extensions": ["mgp"]
  },
  "application/vnd.osgi.bundle": {
    "source": "iana"
  },
  "application/vnd.osgi.dp": {
    "source": "iana",
    "extensions": ["dp"]
  },
  "application/vnd.osgi.subsystem": {
    "source": "iana",
    "extensions": ["esa"]
  },
  "application/vnd.otps.ct-kip+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.oxli.countgraph": {
    "source": "iana"
  },
  "application/vnd.pagerduty+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.palm": {
    "source": "iana",
    "extensions": ["pdb","pqa","oprc"]
  },
  "application/vnd.panoply": {
    "source": "iana"
  },
  "application/vnd.paos.xml": {
    "source": "iana"
  },
  "application/vnd.patentdive": {
    "source": "iana"
  },
  "application/vnd.patientecommsdoc": {
    "source": "iana"
  },
  "application/vnd.pawaafile": {
    "source": "iana",
    "extensions": ["paw"]
  },
  "application/vnd.pcos": {
    "source": "iana"
  },
  "application/vnd.pg.format": {
    "source": "iana",
    "extensions": ["str"]
  },
  "application/vnd.pg.osasli": {
    "source": "iana",
    "extensions": ["ei6"]
  },
  "application/vnd.piaccess.application-licence": {
    "source": "iana"
  },
  "application/vnd.picsel": {
    "source": "iana",
    "extensions": ["efif"]
  },
  "application/vnd.pmi.widget": {
    "source": "iana",
    "extensions": ["wg"]
  },
  "application/vnd.poc.group-advertisement+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.pocketlearn": {
    "source": "iana",
    "extensions": ["plf"]
  },
  "application/vnd.powerbuilder6": {
    "source": "iana",
    "extensions": ["pbd"]
  },
  "application/vnd.powerbuilder6-s": {
    "source": "iana"
  },
  "application/vnd.powerbuilder7": {
    "source": "iana"
  },
  "application/vnd.powerbuilder7-s": {
    "source": "iana"
  },
  "application/vnd.powerbuilder75": {
    "source": "iana"
  },
  "application/vnd.powerbuilder75-s": {
    "source": "iana"
  },
  "application/vnd.preminet": {
    "source": "iana"
  },
  "application/vnd.previewsystems.box": {
    "source": "iana",
    "extensions": ["box"]
  },
  "application/vnd.proteus.magazine": {
    "source": "iana",
    "extensions": ["mgz"]
  },
  "application/vnd.psfs": {
    "source": "iana"
  },
  "application/vnd.publishare-delta-tree": {
    "source": "iana",
    "extensions": ["qps"]
  },
  "application/vnd.pvi.ptid1": {
    "source": "iana",
    "extensions": ["ptid"]
  },
  "application/vnd.pwg-multiplexed": {
    "source": "iana"
  },
  "application/vnd.pwg-xhtml-print+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.qualcomm.brew-app-res": {
    "source": "iana"
  },
  "application/vnd.quarantainenet": {
    "source": "iana"
  },
  "application/vnd.quark.quarkxpress": {
    "source": "iana",
    "extensions": ["qxd","qxt","qwd","qwt","qxl","qxb"]
  },
  "application/vnd.quobject-quoxdocument": {
    "source": "iana"
  },
  "application/vnd.radisys.moml+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-audit+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-audit-conf+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-audit-conn+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-audit-dialog+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-audit-stream+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-conf+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-dialog+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-dialog-base+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-dialog-fax-detect+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-dialog-group+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-dialog-speech+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.radisys.msml-dialog-transform+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.rainstor.data": {
    "source": "iana"
  },
  "application/vnd.rapid": {
    "source": "iana"
  },
  "application/vnd.rar": {
    "source": "iana",
    "extensions": ["rar"]
  },
  "application/vnd.realvnc.bed": {
    "source": "iana",
    "extensions": ["bed"]
  },
  "application/vnd.recordare.musicxml": {
    "source": "iana",
    "extensions": ["mxl"]
  },
  "application/vnd.recordare.musicxml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["musicxml"]
  },
  "application/vnd.renlearn.rlprint": {
    "source": "iana"
  },
  "application/vnd.resilient.logic": {
    "source": "iana"
  },
  "application/vnd.restful+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.rig.cryptonote": {
    "source": "iana",
    "extensions": ["cryptonote"]
  },
  "application/vnd.rim.cod": {
    "source": "apache",
    "extensions": ["cod"]
  },
  "application/vnd.rn-realmedia": {
    "source": "apache",
    "extensions": ["rm"]
  },
  "application/vnd.rn-realmedia-vbr": {
    "source": "apache",
    "extensions": ["rmvb"]
  },
  "application/vnd.route66.link66+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["link66"]
  },
  "application/vnd.rs-274x": {
    "source": "iana"
  },
  "application/vnd.ruckus.download": {
    "source": "iana"
  },
  "application/vnd.s3sms": {
    "source": "iana"
  },
  "application/vnd.sailingtracker.track": {
    "source": "iana",
    "extensions": ["st"]
  },
  "application/vnd.sar": {
    "source": "iana"
  },
  "application/vnd.sbm.cid": {
    "source": "iana"
  },
  "application/vnd.sbm.mid2": {
    "source": "iana"
  },
  "application/vnd.scribus": {
    "source": "iana"
  },
  "application/vnd.sealed.3df": {
    "source": "iana"
  },
  "application/vnd.sealed.csf": {
    "source": "iana"
  },
  "application/vnd.sealed.doc": {
    "source": "iana"
  },
  "application/vnd.sealed.eml": {
    "source": "iana"
  },
  "application/vnd.sealed.mht": {
    "source": "iana"
  },
  "application/vnd.sealed.net": {
    "source": "iana"
  },
  "application/vnd.sealed.ppt": {
    "source": "iana"
  },
  "application/vnd.sealed.tiff": {
    "source": "iana"
  },
  "application/vnd.sealed.xls": {
    "source": "iana"
  },
  "application/vnd.sealedmedia.softseal.html": {
    "source": "iana"
  },
  "application/vnd.sealedmedia.softseal.pdf": {
    "source": "iana"
  },
  "application/vnd.seemail": {
    "source": "iana",
    "extensions": ["see"]
  },
  "application/vnd.seis+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.sema": {
    "source": "iana",
    "extensions": ["sema"]
  },
  "application/vnd.semd": {
    "source": "iana",
    "extensions": ["semd"]
  },
  "application/vnd.semf": {
    "source": "iana",
    "extensions": ["semf"]
  },
  "application/vnd.shade-save-file": {
    "source": "iana"
  },
  "application/vnd.shana.informed.formdata": {
    "source": "iana",
    "extensions": ["ifm"]
  },
  "application/vnd.shana.informed.formtemplate": {
    "source": "iana",
    "extensions": ["itp"]
  },
  "application/vnd.shana.informed.interchange": {
    "source": "iana",
    "extensions": ["iif"]
  },
  "application/vnd.shana.informed.package": {
    "source": "iana",
    "extensions": ["ipk"]
  },
  "application/vnd.shootproof+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.shopkick+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.shp": {
    "source": "iana"
  },
  "application/vnd.shx": {
    "source": "iana"
  },
  "application/vnd.sigrok.session": {
    "source": "iana"
  },
  "application/vnd.simtech-mindmapper": {
    "source": "iana",
    "extensions": ["twd","twds"]
  },
  "application/vnd.siren+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.smaf": {
    "source": "iana",
    "extensions": ["mmf"]
  },
  "application/vnd.smart.notebook": {
    "source": "iana"
  },
  "application/vnd.smart.teacher": {
    "source": "iana",
    "extensions": ["teacher"]
  },
  "application/vnd.snesdev-page-table": {
    "source": "iana"
  },
  "application/vnd.software602.filler.form+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["fo"]
  },
  "application/vnd.software602.filler.form-xml-zip": {
    "source": "iana"
  },
  "application/vnd.solent.sdkm+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["sdkm","sdkd"]
  },
  "application/vnd.spotfire.dxp": {
    "source": "iana",
    "extensions": ["dxp"]
  },
  "application/vnd.spotfire.sfs": {
    "source": "iana",
    "extensions": ["sfs"]
  },
  "application/vnd.sqlite3": {
    "source": "iana"
  },
  "application/vnd.sss-cod": {
    "source": "iana"
  },
  "application/vnd.sss-dtf": {
    "source": "iana"
  },
  "application/vnd.sss-ntf": {
    "source": "iana"
  },
  "application/vnd.stardivision.calc": {
    "source": "apache",
    "extensions": ["sdc"]
  },
  "application/vnd.stardivision.draw": {
    "source": "apache",
    "extensions": ["sda"]
  },
  "application/vnd.stardivision.impress": {
    "source": "apache",
    "extensions": ["sdd"]
  },
  "application/vnd.stardivision.math": {
    "source": "apache",
    "extensions": ["smf"]
  },
  "application/vnd.stardivision.writer": {
    "source": "apache",
    "extensions": ["sdw","vor"]
  },
  "application/vnd.stardivision.writer-global": {
    "source": "apache",
    "extensions": ["sgl"]
  },
  "application/vnd.stepmania.package": {
    "source": "iana",
    "extensions": ["smzip"]
  },
  "application/vnd.stepmania.stepchart": {
    "source": "iana",
    "extensions": ["sm"]
  },
  "application/vnd.street-stream": {
    "source": "iana"
  },
  "application/vnd.sun.wadl+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["wadl"]
  },
  "application/vnd.sun.xml.calc": {
    "source": "apache",
    "extensions": ["sxc"]
  },
  "application/vnd.sun.xml.calc.template": {
    "source": "apache",
    "extensions": ["stc"]
  },
  "application/vnd.sun.xml.draw": {
    "source": "apache",
    "extensions": ["sxd"]
  },
  "application/vnd.sun.xml.draw.template": {
    "source": "apache",
    "extensions": ["std"]
  },
  "application/vnd.sun.xml.impress": {
    "source": "apache",
    "extensions": ["sxi"]
  },
  "application/vnd.sun.xml.impress.template": {
    "source": "apache",
    "extensions": ["sti"]
  },
  "application/vnd.sun.xml.math": {
    "source": "apache",
    "extensions": ["sxm"]
  },
  "application/vnd.sun.xml.writer": {
    "source": "apache",
    "extensions": ["sxw"]
  },
  "application/vnd.sun.xml.writer.global": {
    "source": "apache",
    "extensions": ["sxg"]
  },
  "application/vnd.sun.xml.writer.template": {
    "source": "apache",
    "extensions": ["stw"]
  },
  "application/vnd.sus-calendar": {
    "source": "iana",
    "extensions": ["sus","susp"]
  },
  "application/vnd.svd": {
    "source": "iana",
    "extensions": ["svd"]
  },
  "application/vnd.swiftview-ics": {
    "source": "iana"
  },
  "application/vnd.sycle+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.symbian.install": {
    "source": "apache",
    "extensions": ["sis","sisx"]
  },
  "application/vnd.syncml+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["xsm"]
  },
  "application/vnd.syncml.dm+wbxml": {
    "source": "iana",
    "charset": "UTF-8",
    "extensions": ["bdm"]
  },
  "application/vnd.syncml.dm+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["xdm"]
  },
  "application/vnd.syncml.dm.notification": {
    "source": "iana"
  },
  "application/vnd.syncml.dmddf+wbxml": {
    "source": "iana"
  },
  "application/vnd.syncml.dmddf+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["ddf"]
  },
  "application/vnd.syncml.dmtnds+wbxml": {
    "source": "iana"
  },
  "application/vnd.syncml.dmtnds+xml": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true
  },
  "application/vnd.syncml.ds.notification": {
    "source": "iana"
  },
  "application/vnd.tableschema+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.tao.intent-module-archive": {
    "source": "iana",
    "extensions": ["tao"]
  },
  "application/vnd.tcpdump.pcap": {
    "source": "iana",
    "extensions": ["pcap","cap","dmp"]
  },
  "application/vnd.think-cell.ppttc+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.tmd.mediaflex.api+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.tml": {
    "source": "iana"
  },
  "application/vnd.tmobile-livetv": {
    "source": "iana",
    "extensions": ["tmo"]
  },
  "application/vnd.tri.onesource": {
    "source": "iana"
  },
  "application/vnd.trid.tpt": {
    "source": "iana",
    "extensions": ["tpt"]
  },
  "application/vnd.triscape.mxs": {
    "source": "iana",
    "extensions": ["mxs"]
  },
  "application/vnd.trueapp": {
    "source": "iana",
    "extensions": ["tra"]
  },
  "application/vnd.truedoc": {
    "source": "iana"
  },
  "application/vnd.ubisoft.webplayer": {
    "source": "iana"
  },
  "application/vnd.ufdl": {
    "source": "iana",
    "extensions": ["ufd","ufdl"]
  },
  "application/vnd.uiq.theme": {
    "source": "iana",
    "extensions": ["utz"]
  },
  "application/vnd.umajin": {
    "source": "iana",
    "extensions": ["umj"]
  },
  "application/vnd.unity": {
    "source": "iana",
    "extensions": ["unityweb"]
  },
  "application/vnd.uoml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["uoml"]
  },
  "application/vnd.uplanet.alert": {
    "source": "iana"
  },
  "application/vnd.uplanet.alert-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.bearer-choice": {
    "source": "iana"
  },
  "application/vnd.uplanet.bearer-choice-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.cacheop": {
    "source": "iana"
  },
  "application/vnd.uplanet.cacheop-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.channel": {
    "source": "iana"
  },
  "application/vnd.uplanet.channel-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.list": {
    "source": "iana"
  },
  "application/vnd.uplanet.list-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.listcmd": {
    "source": "iana"
  },
  "application/vnd.uplanet.listcmd-wbxml": {
    "source": "iana"
  },
  "application/vnd.uplanet.signal": {
    "source": "iana"
  },
  "application/vnd.uri-map": {
    "source": "iana"
  },
  "application/vnd.valve.source.material": {
    "source": "iana"
  },
  "application/vnd.vcx": {
    "source": "iana",
    "extensions": ["vcx"]
  },
  "application/vnd.vd-study": {
    "source": "iana"
  },
  "application/vnd.vectorworks": {
    "source": "iana"
  },
  "application/vnd.vel+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.verimatrix.vcas": {
    "source": "iana"
  },
  "application/vnd.veritone.aion+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.veryant.thin": {
    "source": "iana"
  },
  "application/vnd.ves.encrypted": {
    "source": "iana"
  },
  "application/vnd.vidsoft.vidconference": {
    "source": "iana"
  },
  "application/vnd.visio": {
    "source": "iana",
    "extensions": ["vsd","vst","vss","vsw"]
  },
  "application/vnd.visionary": {
    "source": "iana",
    "extensions": ["vis"]
  },
  "application/vnd.vividence.scriptfile": {
    "source": "iana"
  },
  "application/vnd.vsf": {
    "source": "iana",
    "extensions": ["vsf"]
  },
  "application/vnd.wap.sic": {
    "source": "iana"
  },
  "application/vnd.wap.slc": {
    "source": "iana"
  },
  "application/vnd.wap.wbxml": {
    "source": "iana",
    "charset": "UTF-8",
    "extensions": ["wbxml"]
  },
  "application/vnd.wap.wmlc": {
    "source": "iana",
    "extensions": ["wmlc"]
  },
  "application/vnd.wap.wmlscriptc": {
    "source": "iana",
    "extensions": ["wmlsc"]
  },
  "application/vnd.webturbo": {
    "source": "iana",
    "extensions": ["wtb"]
  },
  "application/vnd.wfa.dpp": {
    "source": "iana"
  },
  "application/vnd.wfa.p2p": {
    "source": "iana"
  },
  "application/vnd.wfa.wsc": {
    "source": "iana"
  },
  "application/vnd.windows.devicepairing": {
    "source": "iana"
  },
  "application/vnd.wmc": {
    "source": "iana"
  },
  "application/vnd.wmf.bootstrap": {
    "source": "iana"
  },
  "application/vnd.wolfram.mathematica": {
    "source": "iana"
  },
  "application/vnd.wolfram.mathematica.package": {
    "source": "iana"
  },
  "application/vnd.wolfram.player": {
    "source": "iana",
    "extensions": ["nbp"]
  },
  "application/vnd.wordperfect": {
    "source": "iana",
    "extensions": ["wpd"]
  },
  "application/vnd.wqd": {
    "source": "iana",
    "extensions": ["wqd"]
  },
  "application/vnd.wrq-hp3000-labelled": {
    "source": "iana"
  },
  "application/vnd.wt.stf": {
    "source": "iana",
    "extensions": ["stf"]
  },
  "application/vnd.wv.csp+wbxml": {
    "source": "iana"
  },
  "application/vnd.wv.csp+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.wv.ssp+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.xacml+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.xara": {
    "source": "iana",
    "extensions": ["xar"]
  },
  "application/vnd.xfdl": {
    "source": "iana",
    "extensions": ["xfdl"]
  },
  "application/vnd.xfdl.webform": {
    "source": "iana"
  },
  "application/vnd.xmi+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/vnd.xmpie.cpkg": {
    "source": "iana"
  },
  "application/vnd.xmpie.dpkg": {
    "source": "iana"
  },
  "application/vnd.xmpie.plan": {
    "source": "iana"
  },
  "application/vnd.xmpie.ppkg": {
    "source": "iana"
  },
  "application/vnd.xmpie.xlim": {
    "source": "iana"
  },
  "application/vnd.yamaha.hv-dic": {
    "source": "iana",
    "extensions": ["hvd"]
  },
  "application/vnd.yamaha.hv-script": {
    "source": "iana",
    "extensions": ["hvs"]
  },
  "application/vnd.yamaha.hv-voice": {
    "source": "iana",
    "extensions": ["hvp"]
  },
  "application/vnd.yamaha.openscoreformat": {
    "source": "iana",
    "extensions": ["osf"]
  },
  "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["osfpvg"]
  },
  "application/vnd.yamaha.remote-setup": {
    "source": "iana"
  },
  "application/vnd.yamaha.smaf-audio": {
    "source": "iana",
    "extensions": ["saf"]
  },
  "application/vnd.yamaha.smaf-phrase": {
    "source": "iana",
    "extensions": ["spf"]
  },
  "application/vnd.yamaha.through-ngn": {
    "source": "iana"
  },
  "application/vnd.yamaha.tunnel-udpencap": {
    "source": "iana"
  },
  "application/vnd.yaoweme": {
    "source": "iana"
  },
  "application/vnd.yellowriver-custom-menu": {
    "source": "iana",
    "extensions": ["cmp"]
  },
  "application/vnd.youtube.yt": {
    "source": "iana"
  },
  "application/vnd.zul": {
    "source": "iana",
    "extensions": ["zir","zirz"]
  },
  "application/vnd.zzazz.deck+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["zaz"]
  },
  "application/voicexml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["vxml"]
  },
  "application/voucher-cms+json": {
    "source": "iana",
    "compressible": true
  },
  "application/vq-rtcpxr": {
    "source": "iana"
  },
  "application/wasm": {
    "source": "iana",
    "compressible": true,
    "extensions": ["wasm"]
  },
  "application/watcherinfo+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/webpush-options+json": {
    "source": "iana",
    "compressible": true
  },
  "application/whoispp-query": {
    "source": "iana"
  },
  "application/whoispp-response": {
    "source": "iana"
  },
  "application/widget": {
    "source": "iana",
    "extensions": ["wgt"]
  },
  "application/winhlp": {
    "source": "apache",
    "extensions": ["hlp"]
  },
  "application/wita": {
    "source": "iana"
  },
  "application/wordperfect5.1": {
    "source": "iana"
  },
  "application/wsdl+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["wsdl"]
  },
  "application/wspolicy+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["wspolicy"]
  },
  "application/x-7z-compressed": {
    "source": "apache",
    "compressible": false,
    "extensions": ["7z"]
  },
  "application/x-abiword": {
    "source": "apache",
    "extensions": ["abw"]
  },
  "application/x-ace-compressed": {
    "source": "apache",
    "extensions": ["ace"]
  },
  "application/x-amf": {
    "source": "apache"
  },
  "application/x-apple-diskimage": {
    "source": "apache",
    "extensions": ["dmg"]
  },
  "application/x-arj": {
    "compressible": false,
    "extensions": ["arj"]
  },
  "application/x-authorware-bin": {
    "source": "apache",
    "extensions": ["aab","x32","u32","vox"]
  },
  "application/x-authorware-map": {
    "source": "apache",
    "extensions": ["aam"]
  },
  "application/x-authorware-seg": {
    "source": "apache",
    "extensions": ["aas"]
  },
  "application/x-bcpio": {
    "source": "apache",
    "extensions": ["bcpio"]
  },
  "application/x-bdoc": {
    "compressible": false,
    "extensions": ["bdoc"]
  },
  "application/x-bittorrent": {
    "source": "apache",
    "extensions": ["torrent"]
  },
  "application/x-blorb": {
    "source": "apache",
    "extensions": ["blb","blorb"]
  },
  "application/x-bzip": {
    "source": "apache",
    "compressible": false,
    "extensions": ["bz"]
  },
  "application/x-bzip2": {
    "source": "apache",
    "compressible": false,
    "extensions": ["bz2","boz"]
  },
  "application/x-cbr": {
    "source": "apache",
    "extensions": ["cbr","cba","cbt","cbz","cb7"]
  },
  "application/x-cdlink": {
    "source": "apache",
    "extensions": ["vcd"]
  },
  "application/x-cfs-compressed": {
    "source": "apache",
    "extensions": ["cfs"]
  },
  "application/x-chat": {
    "source": "apache",
    "extensions": ["chat"]
  },
  "application/x-chess-pgn": {
    "source": "apache",
    "extensions": ["pgn"]
  },
  "application/x-chrome-extension": {
    "extensions": ["crx"]
  },
  "application/x-cocoa": {
    "source": "nginx",
    "extensions": ["cco"]
  },
  "application/x-compress": {
    "source": "apache"
  },
  "application/x-conference": {
    "source": "apache",
    "extensions": ["nsc"]
  },
  "application/x-cpio": {
    "source": "apache",
    "extensions": ["cpio"]
  },
  "application/x-csh": {
    "source": "apache",
    "extensions": ["csh"]
  },
  "application/x-deb": {
    "compressible": false
  },
  "application/x-debian-package": {
    "source": "apache",
    "extensions": ["deb","udeb"]
  },
  "application/x-dgc-compressed": {
    "source": "apache",
    "extensions": ["dgc"]
  },
  "application/x-director": {
    "source": "apache",
    "extensions": ["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]
  },
  "application/x-doom": {
    "source": "apache",
    "extensions": ["wad"]
  },
  "application/x-dtbncx+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["ncx"]
  },
  "application/x-dtbook+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["dtb"]
  },
  "application/x-dtbresource+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["res"]
  },
  "application/x-dvi": {
    "source": "apache",
    "compressible": false,
    "extensions": ["dvi"]
  },
  "application/x-envoy": {
    "source": "apache",
    "extensions": ["evy"]
  },
  "application/x-eva": {
    "source": "apache",
    "extensions": ["eva"]
  },
  "application/x-font-bdf": {
    "source": "apache",
    "extensions": ["bdf"]
  },
  "application/x-font-dos": {
    "source": "apache"
  },
  "application/x-font-framemaker": {
    "source": "apache"
  },
  "application/x-font-ghostscript": {
    "source": "apache",
    "extensions": ["gsf"]
  },
  "application/x-font-libgrx": {
    "source": "apache"
  },
  "application/x-font-linux-psf": {
    "source": "apache",
    "extensions": ["psf"]
  },
  "application/x-font-pcf": {
    "source": "apache",
    "extensions": ["pcf"]
  },
  "application/x-font-snf": {
    "source": "apache",
    "extensions": ["snf"]
  },
  "application/x-font-speedo": {
    "source": "apache"
  },
  "application/x-font-sunos-news": {
    "source": "apache"
  },
  "application/x-font-type1": {
    "source": "apache",
    "extensions": ["pfa","pfb","pfm","afm"]
  },
  "application/x-font-vfont": {
    "source": "apache"
  },
  "application/x-freearc": {
    "source": "apache",
    "extensions": ["arc"]
  },
  "application/x-futuresplash": {
    "source": "apache",
    "extensions": ["spl"]
  },
  "application/x-gca-compressed": {
    "source": "apache",
    "extensions": ["gca"]
  },
  "application/x-glulx": {
    "source": "apache",
    "extensions": ["ulx"]
  },
  "application/x-gnumeric": {
    "source": "apache",
    "extensions": ["gnumeric"]
  },
  "application/x-gramps-xml": {
    "source": "apache",
    "extensions": ["gramps"]
  },
  "application/x-gtar": {
    "source": "apache",
    "extensions": ["gtar"]
  },
  "application/x-gzip": {
    "source": "apache"
  },
  "application/x-hdf": {
    "source": "apache",
    "extensions": ["hdf"]
  },
  "application/x-httpd-php": {
    "compressible": true,
    "extensions": ["php"]
  },
  "application/x-install-instructions": {
    "source": "apache",
    "extensions": ["install"]
  },
  "application/x-iso9660-image": {
    "source": "apache",
    "extensions": ["iso"]
  },
  "application/x-java-archive-diff": {
    "source": "nginx",
    "extensions": ["jardiff"]
  },
  "application/x-java-jnlp-file": {
    "source": "apache",
    "compressible": false,
    "extensions": ["jnlp"]
  },
  "application/x-javascript": {
    "compressible": true
  },
  "application/x-keepass2": {
    "extensions": ["kdbx"]
  },
  "application/x-latex": {
    "source": "apache",
    "compressible": false,
    "extensions": ["latex"]
  },
  "application/x-lua-bytecode": {
    "extensions": ["luac"]
  },
  "application/x-lzh-compressed": {
    "source": "apache",
    "extensions": ["lzh","lha"]
  },
  "application/x-makeself": {
    "source": "nginx",
    "extensions": ["run"]
  },
  "application/x-mie": {
    "source": "apache",
    "extensions": ["mie"]
  },
  "application/x-mobipocket-ebook": {
    "source": "apache",
    "extensions": ["prc","mobi"]
  },
  "application/x-mpegurl": {
    "compressible": false
  },
  "application/x-ms-application": {
    "source": "apache",
    "extensions": ["application"]
  },
  "application/x-ms-shortcut": {
    "source": "apache",
    "extensions": ["lnk"]
  },
  "application/x-ms-wmd": {
    "source": "apache",
    "extensions": ["wmd"]
  },
  "application/x-ms-wmz": {
    "source": "apache",
    "extensions": ["wmz"]
  },
  "application/x-ms-xbap": {
    "source": "apache",
    "extensions": ["xbap"]
  },
  "application/x-msaccess": {
    "source": "apache",
    "extensions": ["mdb"]
  },
  "application/x-msbinder": {
    "source": "apache",
    "extensions": ["obd"]
  },
  "application/x-mscardfile": {
    "source": "apache",
    "extensions": ["crd"]
  },
  "application/x-msclip": {
    "source": "apache",
    "extensions": ["clp"]
  },
  "application/x-msdos-program": {
    "extensions": ["exe"]
  },
  "application/x-msdownload": {
    "source": "apache",
    "extensions": ["exe","dll","com","bat","msi"]
  },
  "application/x-msmediaview": {
    "source": "apache",
    "extensions": ["mvb","m13","m14"]
  },
  "application/x-msmetafile": {
    "source": "apache",
    "extensions": ["wmf","wmz","emf","emz"]
  },
  "application/x-msmoney": {
    "source": "apache",
    "extensions": ["mny"]
  },
  "application/x-mspublisher": {
    "source": "apache",
    "extensions": ["pub"]
  },
  "application/x-msschedule": {
    "source": "apache",
    "extensions": ["scd"]
  },
  "application/x-msterminal": {
    "source": "apache",
    "extensions": ["trm"]
  },
  "application/x-mswrite": {
    "source": "apache",
    "extensions": ["wri"]
  },
  "application/x-netcdf": {
    "source": "apache",
    "extensions": ["nc","cdf"]
  },
  "application/x-ns-proxy-autoconfig": {
    "compressible": true,
    "extensions": ["pac"]
  },
  "application/x-nzb": {
    "source": "apache",
    "extensions": ["nzb"]
  },
  "application/x-perl": {
    "source": "nginx",
    "extensions": ["pl","pm"]
  },
  "application/x-pilot": {
    "source": "nginx",
    "extensions": ["prc","pdb"]
  },
  "application/x-pkcs12": {
    "source": "apache",
    "compressible": false,
    "extensions": ["p12","pfx"]
  },
  "application/x-pkcs7-certificates": {
    "source": "apache",
    "extensions": ["p7b","spc"]
  },
  "application/x-pkcs7-certreqresp": {
    "source": "apache",
    "extensions": ["p7r"]
  },
  "application/x-pki-message": {
    "source": "iana"
  },
  "application/x-rar-compressed": {
    "source": "apache",
    "compressible": false,
    "extensions": ["rar"]
  },
  "application/x-redhat-package-manager": {
    "source": "nginx",
    "extensions": ["rpm"]
  },
  "application/x-research-info-systems": {
    "source": "apache",
    "extensions": ["ris"]
  },
  "application/x-sea": {
    "source": "nginx",
    "extensions": ["sea"]
  },
  "application/x-sh": {
    "source": "apache",
    "compressible": true,
    "extensions": ["sh"]
  },
  "application/x-shar": {
    "source": "apache",
    "extensions": ["shar"]
  },
  "application/x-shockwave-flash": {
    "source": "apache",
    "compressible": false,
    "extensions": ["swf"]
  },
  "application/x-silverlight-app": {
    "source": "apache",
    "extensions": ["xap"]
  },
  "application/x-sql": {
    "source": "apache",
    "extensions": ["sql"]
  },
  "application/x-stuffit": {
    "source": "apache",
    "compressible": false,
    "extensions": ["sit"]
  },
  "application/x-stuffitx": {
    "source": "apache",
    "extensions": ["sitx"]
  },
  "application/x-subrip": {
    "source": "apache",
    "extensions": ["srt"]
  },
  "application/x-sv4cpio": {
    "source": "apache",
    "extensions": ["sv4cpio"]
  },
  "application/x-sv4crc": {
    "source": "apache",
    "extensions": ["sv4crc"]
  },
  "application/x-t3vm-image": {
    "source": "apache",
    "extensions": ["t3"]
  },
  "application/x-tads": {
    "source": "apache",
    "extensions": ["gam"]
  },
  "application/x-tar": {
    "source": "apache",
    "compressible": true,
    "extensions": ["tar"]
  },
  "application/x-tcl": {
    "source": "apache",
    "extensions": ["tcl","tk"]
  },
  "application/x-tex": {
    "source": "apache",
    "extensions": ["tex"]
  },
  "application/x-tex-tfm": {
    "source": "apache",
    "extensions": ["tfm"]
  },
  "application/x-texinfo": {
    "source": "apache",
    "extensions": ["texinfo","texi"]
  },
  "application/x-tgif": {
    "source": "apache",
    "extensions": ["obj"]
  },
  "application/x-ustar": {
    "source": "apache",
    "extensions": ["ustar"]
  },
  "application/x-virtualbox-hdd": {
    "compressible": true,
    "extensions": ["hdd"]
  },
  "application/x-virtualbox-ova": {
    "compressible": true,
    "extensions": ["ova"]
  },
  "application/x-virtualbox-ovf": {
    "compressible": true,
    "extensions": ["ovf"]
  },
  "application/x-virtualbox-vbox": {
    "compressible": true,
    "extensions": ["vbox"]
  },
  "application/x-virtualbox-vbox-extpack": {
    "compressible": false,
    "extensions": ["vbox-extpack"]
  },
  "application/x-virtualbox-vdi": {
    "compressible": true,
    "extensions": ["vdi"]
  },
  "application/x-virtualbox-vhd": {
    "compressible": true,
    "extensions": ["vhd"]
  },
  "application/x-virtualbox-vmdk": {
    "compressible": true,
    "extensions": ["vmdk"]
  },
  "application/x-wais-source": {
    "source": "apache",
    "extensions": ["src"]
  },
  "application/x-web-app-manifest+json": {
    "compressible": true,
    "extensions": ["webapp"]
  },
  "application/x-www-form-urlencoded": {
    "source": "iana",
    "compressible": true
  },
  "application/x-x509-ca-cert": {
    "source": "iana",
    "extensions": ["der","crt","pem"]
  },
  "application/x-x509-ca-ra-cert": {
    "source": "iana"
  },
  "application/x-x509-next-ca-cert": {
    "source": "iana"
  },
  "application/x-xfig": {
    "source": "apache",
    "extensions": ["fig"]
  },
  "application/x-xliff+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["xlf"]
  },
  "application/x-xpinstall": {
    "source": "apache",
    "compressible": false,
    "extensions": ["xpi"]
  },
  "application/x-xz": {
    "source": "apache",
    "extensions": ["xz"]
  },
  "application/x-zmachine": {
    "source": "apache",
    "extensions": ["z1","z2","z3","z4","z5","z6","z7","z8"]
  },
  "application/x400-bp": {
    "source": "iana"
  },
  "application/xacml+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/xaml+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["xaml"]
  },
  "application/xcap-att+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xav"]
  },
  "application/xcap-caps+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xca"]
  },
  "application/xcap-diff+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xdf"]
  },
  "application/xcap-el+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xel"]
  },
  "application/xcap-error+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/xcap-ns+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xns"]
  },
  "application/xcon-conference-info+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/xcon-conference-info-diff+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/xenc+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xenc"]
  },
  "application/xhtml+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xhtml","xht"]
  },
  "application/xhtml-voice+xml": {
    "source": "apache",
    "compressible": true
  },
  "application/xliff+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xlf"]
  },
  "application/xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xml","xsl","xsd","rng"]
  },
  "application/xml-dtd": {
    "source": "iana",
    "compressible": true,
    "extensions": ["dtd"]
  },
  "application/xml-external-parsed-entity": {
    "source": "iana"
  },
  "application/xml-patch+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/xmpp+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/xop+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xop"]
  },
  "application/xproc+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["xpl"]
  },
  "application/xslt+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xsl","xslt"]
  },
  "application/xspf+xml": {
    "source": "apache",
    "compressible": true,
    "extensions": ["xspf"]
  },
  "application/xv+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["mxml","xhvml","xvml","xvm"]
  },
  "application/yang": {
    "source": "iana",
    "extensions": ["yang"]
  },
  "application/yang-data+json": {
    "source": "iana",
    "compressible": true
  },
  "application/yang-data+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/yang-patch+json": {
    "source": "iana",
    "compressible": true
  },
  "application/yang-patch+xml": {
    "source": "iana",
    "compressible": true
  },
  "application/yin+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["yin"]
  },
  "application/zip": {
    "source": "iana",
    "compressible": false,
    "extensions": ["zip"]
  },
  "application/zlib": {
    "source": "iana"
  },
  "application/zstd": {
    "source": "iana"
  },
  "audio/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "audio/32kadpcm": {
    "source": "iana"
  },
  "audio/3gpp": {
    "source": "iana",
    "compressible": false,
    "extensions": ["3gpp"]
  },
  "audio/3gpp2": {
    "source": "iana"
  },
  "audio/aac": {
    "source": "iana"
  },
  "audio/ac3": {
    "source": "iana"
  },
  "audio/adpcm": {
    "source": "apache",
    "extensions": ["adp"]
  },
  "audio/amr": {
    "source": "iana",
    "extensions": ["amr"]
  },
  "audio/amr-wb": {
    "source": "iana"
  },
  "audio/amr-wb+": {
    "source": "iana"
  },
  "audio/aptx": {
    "source": "iana"
  },
  "audio/asc": {
    "source": "iana"
  },
  "audio/atrac-advanced-lossless": {
    "source": "iana"
  },
  "audio/atrac-x": {
    "source": "iana"
  },
  "audio/atrac3": {
    "source": "iana"
  },
  "audio/basic": {
    "source": "iana",
    "compressible": false,
    "extensions": ["au","snd"]
  },
  "audio/bv16": {
    "source": "iana"
  },
  "audio/bv32": {
    "source": "iana"
  },
  "audio/clearmode": {
    "source": "iana"
  },
  "audio/cn": {
    "source": "iana"
  },
  "audio/dat12": {
    "source": "iana"
  },
  "audio/dls": {
    "source": "iana"
  },
  "audio/dsr-es201108": {
    "source": "iana"
  },
  "audio/dsr-es202050": {
    "source": "iana"
  },
  "audio/dsr-es202211": {
    "source": "iana"
  },
  "audio/dsr-es202212": {
    "source": "iana"
  },
  "audio/dv": {
    "source": "iana"
  },
  "audio/dvi4": {
    "source": "iana"
  },
  "audio/eac3": {
    "source": "iana"
  },
  "audio/encaprtp": {
    "source": "iana"
  },
  "audio/evrc": {
    "source": "iana"
  },
  "audio/evrc-qcp": {
    "source": "iana"
  },
  "audio/evrc0": {
    "source": "iana"
  },
  "audio/evrc1": {
    "source": "iana"
  },
  "audio/evrcb": {
    "source": "iana"
  },
  "audio/evrcb0": {
    "source": "iana"
  },
  "audio/evrcb1": {
    "source": "iana"
  },
  "audio/evrcnw": {
    "source": "iana"
  },
  "audio/evrcnw0": {
    "source": "iana"
  },
  "audio/evrcnw1": {
    "source": "iana"
  },
  "audio/evrcwb": {
    "source": "iana"
  },
  "audio/evrcwb0": {
    "source": "iana"
  },
  "audio/evrcwb1": {
    "source": "iana"
  },
  "audio/evs": {
    "source": "iana"
  },
  "audio/flexfec": {
    "source": "iana"
  },
  "audio/fwdred": {
    "source": "iana"
  },
  "audio/g711-0": {
    "source": "iana"
  },
  "audio/g719": {
    "source": "iana"
  },
  "audio/g722": {
    "source": "iana"
  },
  "audio/g7221": {
    "source": "iana"
  },
  "audio/g723": {
    "source": "iana"
  },
  "audio/g726-16": {
    "source": "iana"
  },
  "audio/g726-24": {
    "source": "iana"
  },
  "audio/g726-32": {
    "source": "iana"
  },
  "audio/g726-40": {
    "source": "iana"
  },
  "audio/g728": {
    "source": "iana"
  },
  "audio/g729": {
    "source": "iana"
  },
  "audio/g7291": {
    "source": "iana"
  },
  "audio/g729d": {
    "source": "iana"
  },
  "audio/g729e": {
    "source": "iana"
  },
  "audio/gsm": {
    "source": "iana"
  },
  "audio/gsm-efr": {
    "source": "iana"
  },
  "audio/gsm-hr-08": {
    "source": "iana"
  },
  "audio/ilbc": {
    "source": "iana"
  },
  "audio/ip-mr_v2.5": {
    "source": "iana"
  },
  "audio/isac": {
    "source": "apache"
  },
  "audio/l16": {
    "source": "iana"
  },
  "audio/l20": {
    "source": "iana"
  },
  "audio/l24": {
    "source": "iana",
    "compressible": false
  },
  "audio/l8": {
    "source": "iana"
  },
  "audio/lpc": {
    "source": "iana"
  },
  "audio/melp": {
    "source": "iana"
  },
  "audio/melp1200": {
    "source": "iana"
  },
  "audio/melp2400": {
    "source": "iana"
  },
  "audio/melp600": {
    "source": "iana"
  },
  "audio/mhas": {
    "source": "iana"
  },
  "audio/midi": {
    "source": "apache",
    "extensions": ["mid","midi","kar","rmi"]
  },
  "audio/mobile-xmf": {
    "source": "iana",
    "extensions": ["mxmf"]
  },
  "audio/mp3": {
    "compressible": false,
    "extensions": ["mp3"]
  },
  "audio/mp4": {
    "source": "iana",
    "compressible": false,
    "extensions": ["m4a","mp4a"]
  },
  "audio/mp4a-latm": {
    "source": "iana"
  },
  "audio/mpa": {
    "source": "iana"
  },
  "audio/mpa-robust": {
    "source": "iana"
  },
  "audio/mpeg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["mpga","mp2","mp2a","mp3","m2a","m3a"]
  },
  "audio/mpeg4-generic": {
    "source": "iana"
  },
  "audio/musepack": {
    "source": "apache"
  },
  "audio/ogg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["oga","ogg","spx","opus"]
  },
  "audio/opus": {
    "source": "iana"
  },
  "audio/parityfec": {
    "source": "iana"
  },
  "audio/pcma": {
    "source": "iana"
  },
  "audio/pcma-wb": {
    "source": "iana"
  },
  "audio/pcmu": {
    "source": "iana"
  },
  "audio/pcmu-wb": {
    "source": "iana"
  },
  "audio/prs.sid": {
    "source": "iana"
  },
  "audio/qcelp": {
    "source": "iana"
  },
  "audio/raptorfec": {
    "source": "iana"
  },
  "audio/red": {
    "source": "iana"
  },
  "audio/rtp-enc-aescm128": {
    "source": "iana"
  },
  "audio/rtp-midi": {
    "source": "iana"
  },
  "audio/rtploopback": {
    "source": "iana"
  },
  "audio/rtx": {
    "source": "iana"
  },
  "audio/s3m": {
    "source": "apache",
    "extensions": ["s3m"]
  },
  "audio/scip": {
    "source": "iana"
  },
  "audio/silk": {
    "source": "apache",
    "extensions": ["sil"]
  },
  "audio/smv": {
    "source": "iana"
  },
  "audio/smv-qcp": {
    "source": "iana"
  },
  "audio/smv0": {
    "source": "iana"
  },
  "audio/sofa": {
    "source": "iana"
  },
  "audio/sp-midi": {
    "source": "iana"
  },
  "audio/speex": {
    "source": "iana"
  },
  "audio/t140c": {
    "source": "iana"
  },
  "audio/t38": {
    "source": "iana"
  },
  "audio/telephone-event": {
    "source": "iana"
  },
  "audio/tetra_acelp": {
    "source": "iana"
  },
  "audio/tetra_acelp_bb": {
    "source": "iana"
  },
  "audio/tone": {
    "source": "iana"
  },
  "audio/tsvcis": {
    "source": "iana"
  },
  "audio/uemclip": {
    "source": "iana"
  },
  "audio/ulpfec": {
    "source": "iana"
  },
  "audio/usac": {
    "source": "iana"
  },
  "audio/vdvi": {
    "source": "iana"
  },
  "audio/vmr-wb": {
    "source": "iana"
  },
  "audio/vnd.3gpp.iufp": {
    "source": "iana"
  },
  "audio/vnd.4sb": {
    "source": "iana"
  },
  "audio/vnd.audiokoz": {
    "source": "iana"
  },
  "audio/vnd.celp": {
    "source": "iana"
  },
  "audio/vnd.cisco.nse": {
    "source": "iana"
  },
  "audio/vnd.cmles.radio-events": {
    "source": "iana"
  },
  "audio/vnd.cns.anp1": {
    "source": "iana"
  },
  "audio/vnd.cns.inf1": {
    "source": "iana"
  },
  "audio/vnd.dece.audio": {
    "source": "iana",
    "extensions": ["uva","uvva"]
  },
  "audio/vnd.digital-winds": {
    "source": "iana",
    "extensions": ["eol"]
  },
  "audio/vnd.dlna.adts": {
    "source": "iana"
  },
  "audio/vnd.dolby.heaac.1": {
    "source": "iana"
  },
  "audio/vnd.dolby.heaac.2": {
    "source": "iana"
  },
  "audio/vnd.dolby.mlp": {
    "source": "iana"
  },
  "audio/vnd.dolby.mps": {
    "source": "iana"
  },
  "audio/vnd.dolby.pl2": {
    "source": "iana"
  },
  "audio/vnd.dolby.pl2x": {
    "source": "iana"
  },
  "audio/vnd.dolby.pl2z": {
    "source": "iana"
  },
  "audio/vnd.dolby.pulse.1": {
    "source": "iana"
  },
  "audio/vnd.dra": {
    "source": "iana",
    "extensions": ["dra"]
  },
  "audio/vnd.dts": {
    "source": "iana",
    "extensions": ["dts"]
  },
  "audio/vnd.dts.hd": {
    "source": "iana",
    "extensions": ["dtshd"]
  },
  "audio/vnd.dts.uhd": {
    "source": "iana"
  },
  "audio/vnd.dvb.file": {
    "source": "iana"
  },
  "audio/vnd.everad.plj": {
    "source": "iana"
  },
  "audio/vnd.hns.audio": {
    "source": "iana"
  },
  "audio/vnd.lucent.voice": {
    "source": "iana",
    "extensions": ["lvp"]
  },
  "audio/vnd.ms-playready.media.pya": {
    "source": "iana",
    "extensions": ["pya"]
  },
  "audio/vnd.nokia.mobile-xmf": {
    "source": "iana"
  },
  "audio/vnd.nortel.vbk": {
    "source": "iana"
  },
  "audio/vnd.nuera.ecelp4800": {
    "source": "iana",
    "extensions": ["ecelp4800"]
  },
  "audio/vnd.nuera.ecelp7470": {
    "source": "iana",
    "extensions": ["ecelp7470"]
  },
  "audio/vnd.nuera.ecelp9600": {
    "source": "iana",
    "extensions": ["ecelp9600"]
  },
  "audio/vnd.octel.sbc": {
    "source": "iana"
  },
  "audio/vnd.presonus.multitrack": {
    "source": "iana"
  },
  "audio/vnd.qcelp": {
    "source": "iana"
  },
  "audio/vnd.rhetorex.32kadpcm": {
    "source": "iana"
  },
  "audio/vnd.rip": {
    "source": "iana",
    "extensions": ["rip"]
  },
  "audio/vnd.rn-realaudio": {
    "compressible": false
  },
  "audio/vnd.sealedmedia.softseal.mpeg": {
    "source": "iana"
  },
  "audio/vnd.vmx.cvsd": {
    "source": "iana"
  },
  "audio/vnd.wave": {
    "compressible": false
  },
  "audio/vorbis": {
    "source": "iana",
    "compressible": false
  },
  "audio/vorbis-config": {
    "source": "iana"
  },
  "audio/wav": {
    "compressible": false,
    "extensions": ["wav"]
  },
  "audio/wave": {
    "compressible": false,
    "extensions": ["wav"]
  },
  "audio/webm": {
    "source": "apache",
    "compressible": false,
    "extensions": ["weba"]
  },
  "audio/x-aac": {
    "source": "apache",
    "compressible": false,
    "extensions": ["aac"]
  },
  "audio/x-aiff": {
    "source": "apache",
    "extensions": ["aif","aiff","aifc"]
  },
  "audio/x-caf": {
    "source": "apache",
    "compressible": false,
    "extensions": ["caf"]
  },
  "audio/x-flac": {
    "source": "apache",
    "extensions": ["flac"]
  },
  "audio/x-m4a": {
    "source": "nginx",
    "extensions": ["m4a"]
  },
  "audio/x-matroska": {
    "source": "apache",
    "extensions": ["mka"]
  },
  "audio/x-mpegurl": {
    "source": "apache",
    "extensions": ["m3u"]
  },
  "audio/x-ms-wax": {
    "source": "apache",
    "extensions": ["wax"]
  },
  "audio/x-ms-wma": {
    "source": "apache",
    "extensions": ["wma"]
  },
  "audio/x-pn-realaudio": {
    "source": "apache",
    "extensions": ["ram","ra"]
  },
  "audio/x-pn-realaudio-plugin": {
    "source": "apache",
    "extensions": ["rmp"]
  },
  "audio/x-realaudio": {
    "source": "nginx",
    "extensions": ["ra"]
  },
  "audio/x-tta": {
    "source": "apache"
  },
  "audio/x-wav": {
    "source": "apache",
    "extensions": ["wav"]
  },
  "audio/xm": {
    "source": "apache",
    "extensions": ["xm"]
  },
  "chemical/x-cdx": {
    "source": "apache",
    "extensions": ["cdx"]
  },
  "chemical/x-cif": {
    "source": "apache",
    "extensions": ["cif"]
  },
  "chemical/x-cmdf": {
    "source": "apache",
    "extensions": ["cmdf"]
  },
  "chemical/x-cml": {
    "source": "apache",
    "extensions": ["cml"]
  },
  "chemical/x-csml": {
    "source": "apache",
    "extensions": ["csml"]
  },
  "chemical/x-pdb": {
    "source": "apache"
  },
  "chemical/x-xyz": {
    "source": "apache",
    "extensions": ["xyz"]
  },
  "font/collection": {
    "source": "iana",
    "extensions": ["ttc"]
  },
  "font/otf": {
    "source": "iana",
    "compressible": true,
    "extensions": ["otf"]
  },
  "font/sfnt": {
    "source": "iana"
  },
  "font/ttf": {
    "source": "iana",
    "compressible": true,
    "extensions": ["ttf"]
  },
  "font/woff": {
    "source": "iana",
    "extensions": ["woff"]
  },
  "font/woff2": {
    "source": "iana",
    "extensions": ["woff2"]
  },
  "image/aces": {
    "source": "iana",
    "extensions": ["exr"]
  },
  "image/apng": {
    "compressible": false,
    "extensions": ["apng"]
  },
  "image/avci": {
    "source": "iana"
  },
  "image/avcs": {
    "source": "iana"
  },
  "image/avif": {
    "source": "iana",
    "compressible": false,
    "extensions": ["avif"]
  },
  "image/bmp": {
    "source": "iana",
    "compressible": true,
    "extensions": ["bmp"]
  },
  "image/cgm": {
    "source": "iana",
    "extensions": ["cgm"]
  },
  "image/dicom-rle": {
    "source": "iana",
    "extensions": ["drle"]
  },
  "image/emf": {
    "source": "iana",
    "extensions": ["emf"]
  },
  "image/fits": {
    "source": "iana",
    "extensions": ["fits"]
  },
  "image/g3fax": {
    "source": "iana",
    "extensions": ["g3"]
  },
  "image/gif": {
    "source": "iana",
    "compressible": false,
    "extensions": ["gif"]
  },
  "image/heic": {
    "source": "iana",
    "extensions": ["heic"]
  },
  "image/heic-sequence": {
    "source": "iana",
    "extensions": ["heics"]
  },
  "image/heif": {
    "source": "iana",
    "extensions": ["heif"]
  },
  "image/heif-sequence": {
    "source": "iana",
    "extensions": ["heifs"]
  },
  "image/hej2k": {
    "source": "iana",
    "extensions": ["hej2"]
  },
  "image/hsj2": {
    "source": "iana",
    "extensions": ["hsj2"]
  },
  "image/ief": {
    "source": "iana",
    "extensions": ["ief"]
  },
  "image/jls": {
    "source": "iana",
    "extensions": ["jls"]
  },
  "image/jp2": {
    "source": "iana",
    "compressible": false,
    "extensions": ["jp2","jpg2"]
  },
  "image/jpeg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["jpeg","jpg","jpe"]
  },
  "image/jph": {
    "source": "iana",
    "extensions": ["jph"]
  },
  "image/jphc": {
    "source": "iana",
    "extensions": ["jhc"]
  },
  "image/jpm": {
    "source": "iana",
    "compressible": false,
    "extensions": ["jpm"]
  },
  "image/jpx": {
    "source": "iana",
    "compressible": false,
    "extensions": ["jpx","jpf"]
  },
  "image/jxr": {
    "source": "iana",
    "extensions": ["jxr"]
  },
  "image/jxra": {
    "source": "iana",
    "extensions": ["jxra"]
  },
  "image/jxrs": {
    "source": "iana",
    "extensions": ["jxrs"]
  },
  "image/jxs": {
    "source": "iana",
    "extensions": ["jxs"]
  },
  "image/jxsc": {
    "source": "iana",
    "extensions": ["jxsc"]
  },
  "image/jxsi": {
    "source": "iana",
    "extensions": ["jxsi"]
  },
  "image/jxss": {
    "source": "iana",
    "extensions": ["jxss"]
  },
  "image/ktx": {
    "source": "iana",
    "extensions": ["ktx"]
  },
  "image/ktx2": {
    "source": "iana",
    "extensions": ["ktx2"]
  },
  "image/naplps": {
    "source": "iana"
  },
  "image/pjpeg": {
    "compressible": false
  },
  "image/png": {
    "source": "iana",
    "compressible": false,
    "extensions": ["png"]
  },
  "image/prs.btif": {
    "source": "iana",
    "extensions": ["btif"]
  },
  "image/prs.pti": {
    "source": "iana",
    "extensions": ["pti"]
  },
  "image/pwg-raster": {
    "source": "iana"
  },
  "image/sgi": {
    "source": "apache",
    "extensions": ["sgi"]
  },
  "image/svg+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["svg","svgz"]
  },
  "image/t38": {
    "source": "iana",
    "extensions": ["t38"]
  },
  "image/tiff": {
    "source": "iana",
    "compressible": false,
    "extensions": ["tif","tiff"]
  },
  "image/tiff-fx": {
    "source": "iana",
    "extensions": ["tfx"]
  },
  "image/vnd.adobe.photoshop": {
    "source": "iana",
    "compressible": true,
    "extensions": ["psd"]
  },
  "image/vnd.airzip.accelerator.azv": {
    "source": "iana",
    "extensions": ["azv"]
  },
  "image/vnd.cns.inf2": {
    "source": "iana"
  },
  "image/vnd.dece.graphic": {
    "source": "iana",
    "extensions": ["uvi","uvvi","uvg","uvvg"]
  },
  "image/vnd.djvu": {
    "source": "iana",
    "extensions": ["djvu","djv"]
  },
  "image/vnd.dvb.subtitle": {
    "source": "iana",
    "extensions": ["sub"]
  },
  "image/vnd.dwg": {
    "source": "iana",
    "extensions": ["dwg"]
  },
  "image/vnd.dxf": {
    "source": "iana",
    "extensions": ["dxf"]
  },
  "image/vnd.fastbidsheet": {
    "source": "iana",
    "extensions": ["fbs"]
  },
  "image/vnd.fpx": {
    "source": "iana",
    "extensions": ["fpx"]
  },
  "image/vnd.fst": {
    "source": "iana",
    "extensions": ["fst"]
  },
  "image/vnd.fujixerox.edmics-mmr": {
    "source": "iana",
    "extensions": ["mmr"]
  },
  "image/vnd.fujixerox.edmics-rlc": {
    "source": "iana",
    "extensions": ["rlc"]
  },
  "image/vnd.globalgraphics.pgb": {
    "source": "iana"
  },
  "image/vnd.microsoft.icon": {
    "source": "iana",
    "extensions": ["ico"]
  },
  "image/vnd.mix": {
    "source": "iana"
  },
  "image/vnd.mozilla.apng": {
    "source": "iana"
  },
  "image/vnd.ms-dds": {
    "extensions": ["dds"]
  },
  "image/vnd.ms-modi": {
    "source": "iana",
    "extensions": ["mdi"]
  },
  "image/vnd.ms-photo": {
    "source": "apache",
    "extensions": ["wdp"]
  },
  "image/vnd.net-fpx": {
    "source": "iana",
    "extensions": ["npx"]
  },
  "image/vnd.pco.b16": {
    "source": "iana",
    "extensions": ["b16"]
  },
  "image/vnd.radiance": {
    "source": "iana"
  },
  "image/vnd.sealed.png": {
    "source": "iana"
  },
  "image/vnd.sealedmedia.softseal.gif": {
    "source": "iana"
  },
  "image/vnd.sealedmedia.softseal.jpg": {
    "source": "iana"
  },
  "image/vnd.svf": {
    "source": "iana"
  },
  "image/vnd.tencent.tap": {
    "source": "iana",
    "extensions": ["tap"]
  },
  "image/vnd.valve.source.texture": {
    "source": "iana",
    "extensions": ["vtf"]
  },
  "image/vnd.wap.wbmp": {
    "source": "iana",
    "extensions": ["wbmp"]
  },
  "image/vnd.xiff": {
    "source": "iana",
    "extensions": ["xif"]
  },
  "image/vnd.zbrush.pcx": {
    "source": "iana",
    "extensions": ["pcx"]
  },
  "image/webp": {
    "source": "apache",
    "extensions": ["webp"]
  },
  "image/wmf": {
    "source": "iana",
    "extensions": ["wmf"]
  },
  "image/x-3ds": {
    "source": "apache",
    "extensions": ["3ds"]
  },
  "image/x-cmu-raster": {
    "source": "apache",
    "extensions": ["ras"]
  },
  "image/x-cmx": {
    "source": "apache",
    "extensions": ["cmx"]
  },
  "image/x-freehand": {
    "source": "apache",
    "extensions": ["fh","fhc","fh4","fh5","fh7"]
  },
  "image/x-icon": {
    "source": "apache",
    "compressible": true,
    "extensions": ["ico"]
  },
  "image/x-jng": {
    "source": "nginx",
    "extensions": ["jng"]
  },
  "image/x-mrsid-image": {
    "source": "apache",
    "extensions": ["sid"]
  },
  "image/x-ms-bmp": {
    "source": "nginx",
    "compressible": true,
    "extensions": ["bmp"]
  },
  "image/x-pcx": {
    "source": "apache",
    "extensions": ["pcx"]
  },
  "image/x-pict": {
    "source": "apache",
    "extensions": ["pic","pct"]
  },
  "image/x-portable-anymap": {
    "source": "apache",
    "extensions": ["pnm"]
  },
  "image/x-portable-bitmap": {
    "source": "apache",
    "extensions": ["pbm"]
  },
  "image/x-portable-graymap": {
    "source": "apache",
    "extensions": ["pgm"]
  },
  "image/x-portable-pixmap": {
    "source": "apache",
    "extensions": ["ppm"]
  },
  "image/x-rgb": {
    "source": "apache",
    "extensions": ["rgb"]
  },
  "image/x-tga": {
    "source": "apache",
    "extensions": ["tga"]
  },
  "image/x-xbitmap": {
    "source": "apache",
    "extensions": ["xbm"]
  },
  "image/x-xcf": {
    "compressible": false
  },
  "image/x-xpixmap": {
    "source": "apache",
    "extensions": ["xpm"]
  },
  "image/x-xwindowdump": {
    "source": "apache",
    "extensions": ["xwd"]
  },
  "message/cpim": {
    "source": "iana"
  },
  "message/delivery-status": {
    "source": "iana"
  },
  "message/disposition-notification": {
    "source": "iana",
    "extensions": [
      "disposition-notification"
    ]
  },
  "message/external-body": {
    "source": "iana"
  },
  "message/feedback-report": {
    "source": "iana"
  },
  "message/global": {
    "source": "iana",
    "extensions": ["u8msg"]
  },
  "message/global-delivery-status": {
    "source": "iana",
    "extensions": ["u8dsn"]
  },
  "message/global-disposition-notification": {
    "source": "iana",
    "extensions": ["u8mdn"]
  },
  "message/global-headers": {
    "source": "iana",
    "extensions": ["u8hdr"]
  },
  "message/http": {
    "source": "iana",
    "compressible": false
  },
  "message/imdn+xml": {
    "source": "iana",
    "compressible": true
  },
  "message/news": {
    "source": "iana"
  },
  "message/partial": {
    "source": "iana",
    "compressible": false
  },
  "message/rfc822": {
    "source": "iana",
    "compressible": true,
    "extensions": ["eml","mime"]
  },
  "message/s-http": {
    "source": "iana"
  },
  "message/sip": {
    "source": "iana"
  },
  "message/sipfrag": {
    "source": "iana"
  },
  "message/tracking-status": {
    "source": "iana"
  },
  "message/vnd.si.simp": {
    "source": "iana"
  },
  "message/vnd.wfa.wsc": {
    "source": "iana",
    "extensions": ["wsc"]
  },
  "model/3mf": {
    "source": "iana",
    "extensions": ["3mf"]
  },
  "model/e57": {
    "source": "iana"
  },
  "model/gltf+json": {
    "source": "iana",
    "compressible": true,
    "extensions": ["gltf"]
  },
  "model/gltf-binary": {
    "source": "iana",
    "compressible": true,
    "extensions": ["glb"]
  },
  "model/iges": {
    "source": "iana",
    "compressible": false,
    "extensions": ["igs","iges"]
  },
  "model/mesh": {
    "source": "iana",
    "compressible": false,
    "extensions": ["msh","mesh","silo"]
  },
  "model/mtl": {
    "source": "iana",
    "extensions": ["mtl"]
  },
  "model/obj": {
    "source": "iana",
    "extensions": ["obj"]
  },
  "model/step+zip": {
    "source": "iana",
    "compressible": false,
    "extensions": ["stpz"]
  },
  "model/step-xml+zip": {
    "source": "iana",
    "compressible": false,
    "extensions": ["stpxz"]
  },
  "model/stl": {
    "source": "iana",
    "extensions": ["stl"]
  },
  "model/vnd.collada+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["dae"]
  },
  "model/vnd.dwf": {
    "source": "iana",
    "extensions": ["dwf"]
  },
  "model/vnd.flatland.3dml": {
    "source": "iana"
  },
  "model/vnd.gdl": {
    "source": "iana",
    "extensions": ["gdl"]
  },
  "model/vnd.gs-gdl": {
    "source": "apache"
  },
  "model/vnd.gs.gdl": {
    "source": "iana"
  },
  "model/vnd.gtw": {
    "source": "iana",
    "extensions": ["gtw"]
  },
  "model/vnd.moml+xml": {
    "source": "iana",
    "compressible": true
  },
  "model/vnd.mts": {
    "source": "iana",
    "extensions": ["mts"]
  },
  "model/vnd.opengex": {
    "source": "iana",
    "extensions": ["ogex"]
  },
  "model/vnd.parasolid.transmit.binary": {
    "source": "iana",
    "extensions": ["x_b"]
  },
  "model/vnd.parasolid.transmit.text": {
    "source": "iana",
    "extensions": ["x_t"]
  },
  "model/vnd.pytha.pyox": {
    "source": "iana"
  },
  "model/vnd.rosette.annotated-data-model": {
    "source": "iana"
  },
  "model/vnd.sap.vds": {
    "source": "iana",
    "extensions": ["vds"]
  },
  "model/vnd.usdz+zip": {
    "source": "iana",
    "compressible": false,
    "extensions": ["usdz"]
  },
  "model/vnd.valve.source.compiled-map": {
    "source": "iana",
    "extensions": ["bsp"]
  },
  "model/vnd.vtu": {
    "source": "iana",
    "extensions": ["vtu"]
  },
  "model/vrml": {
    "source": "iana",
    "compressible": false,
    "extensions": ["wrl","vrml"]
  },
  "model/x3d+binary": {
    "source": "apache",
    "compressible": false,
    "extensions": ["x3db","x3dbz"]
  },
  "model/x3d+fastinfoset": {
    "source": "iana",
    "extensions": ["x3db"]
  },
  "model/x3d+vrml": {
    "source": "apache",
    "compressible": false,
    "extensions": ["x3dv","x3dvz"]
  },
  "model/x3d+xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["x3d","x3dz"]
  },
  "model/x3d-vrml": {
    "source": "iana",
    "extensions": ["x3dv"]
  },
  "multipart/alternative": {
    "source": "iana",
    "compressible": false
  },
  "multipart/appledouble": {
    "source": "iana"
  },
  "multipart/byteranges": {
    "source": "iana"
  },
  "multipart/digest": {
    "source": "iana"
  },
  "multipart/encrypted": {
    "source": "iana",
    "compressible": false
  },
  "multipart/form-data": {
    "source": "iana",
    "compressible": false
  },
  "multipart/header-set": {
    "source": "iana"
  },
  "multipart/mixed": {
    "source": "iana"
  },
  "multipart/multilingual": {
    "source": "iana"
  },
  "multipart/parallel": {
    "source": "iana"
  },
  "multipart/related": {
    "source": "iana",
    "compressible": false
  },
  "multipart/report": {
    "source": "iana"
  },
  "multipart/signed": {
    "source": "iana",
    "compressible": false
  },
  "multipart/vnd.bint.med-plus": {
    "source": "iana"
  },
  "multipart/voice-message": {
    "source": "iana"
  },
  "multipart/x-mixed-replace": {
    "source": "iana"
  },
  "text/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "text/cache-manifest": {
    "source": "iana",
    "compressible": true,
    "extensions": ["appcache","manifest"]
  },
  "text/calendar": {
    "source": "iana",
    "extensions": ["ics","ifb"]
  },
  "text/calender": {
    "compressible": true
  },
  "text/cmd": {
    "compressible": true
  },
  "text/coffeescript": {
    "extensions": ["coffee","litcoffee"]
  },
  "text/cql": {
    "source": "iana"
  },
  "text/cql-expression": {
    "source": "iana"
  },
  "text/cql-identifier": {
    "source": "iana"
  },
  "text/css": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["css"]
  },
  "text/csv": {
    "source": "iana",
    "compressible": true,
    "extensions": ["csv"]
  },
  "text/csv-schema": {
    "source": "iana"
  },
  "text/directory": {
    "source": "iana"
  },
  "text/dns": {
    "source": "iana"
  },
  "text/ecmascript": {
    "source": "iana"
  },
  "text/encaprtp": {
    "source": "iana"
  },
  "text/enriched": {
    "source": "iana"
  },
  "text/fhirpath": {
    "source": "iana"
  },
  "text/flexfec": {
    "source": "iana"
  },
  "text/fwdred": {
    "source": "iana"
  },
  "text/gff3": {
    "source": "iana"
  },
  "text/grammar-ref-list": {
    "source": "iana"
  },
  "text/html": {
    "source": "iana",
    "compressible": true,
    "extensions": ["html","htm","shtml"]
  },
  "text/jade": {
    "extensions": ["jade"]
  },
  "text/javascript": {
    "source": "iana",
    "compressible": true
  },
  "text/jcr-cnd": {
    "source": "iana"
  },
  "text/jsx": {
    "compressible": true,
    "extensions": ["jsx"]
  },
  "text/less": {
    "compressible": true,
    "extensions": ["less"]
  },
  "text/markdown": {
    "source": "iana",
    "compressible": true,
    "extensions": ["markdown","md"]
  },
  "text/mathml": {
    "source": "nginx",
    "extensions": ["mml"]
  },
  "text/mdx": {
    "compressible": true,
    "extensions": ["mdx"]
  },
  "text/mizar": {
    "source": "iana"
  },
  "text/n3": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["n3"]
  },
  "text/parameters": {
    "source": "iana",
    "charset": "UTF-8"
  },
  "text/parityfec": {
    "source": "iana"
  },
  "text/plain": {
    "source": "iana",
    "compressible": true,
    "extensions": ["txt","text","conf","def","list","log","in","ini"]
  },
  "text/provenance-notation": {
    "source": "iana",
    "charset": "UTF-8"
  },
  "text/prs.fallenstein.rst": {
    "source": "iana"
  },
  "text/prs.lines.tag": {
    "source": "iana",
    "extensions": ["dsc"]
  },
  "text/prs.prop.logic": {
    "source": "iana"
  },
  "text/raptorfec": {
    "source": "iana"
  },
  "text/red": {
    "source": "iana"
  },
  "text/rfc822-headers": {
    "source": "iana"
  },
  "text/richtext": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rtx"]
  },
  "text/rtf": {
    "source": "iana",
    "compressible": true,
    "extensions": ["rtf"]
  },
  "text/rtp-enc-aescm128": {
    "source": "iana"
  },
  "text/rtploopback": {
    "source": "iana"
  },
  "text/rtx": {
    "source": "iana"
  },
  "text/sgml": {
    "source": "iana",
    "extensions": ["sgml","sgm"]
  },
  "text/shaclc": {
    "source": "iana"
  },
  "text/shex": {
    "source": "iana",
    "extensions": ["shex"]
  },
  "text/slim": {
    "extensions": ["slim","slm"]
  },
  "text/spdx": {
    "source": "iana",
    "extensions": ["spdx"]
  },
  "text/strings": {
    "source": "iana"
  },
  "text/stylus": {
    "extensions": ["stylus","styl"]
  },
  "text/t140": {
    "source": "iana"
  },
  "text/tab-separated-values": {
    "source": "iana",
    "compressible": true,
    "extensions": ["tsv"]
  },
  "text/troff": {
    "source": "iana",
    "extensions": ["t","tr","roff","man","me","ms"]
  },
  "text/turtle": {
    "source": "iana",
    "charset": "UTF-8",
    "extensions": ["ttl"]
  },
  "text/ulpfec": {
    "source": "iana"
  },
  "text/uri-list": {
    "source": "iana",
    "compressible": true,
    "extensions": ["uri","uris","urls"]
  },
  "text/vcard": {
    "source": "iana",
    "compressible": true,
    "extensions": ["vcard"]
  },
  "text/vnd.a": {
    "source": "iana"
  },
  "text/vnd.abc": {
    "source": "iana"
  },
  "text/vnd.ascii-art": {
    "source": "iana"
  },
  "text/vnd.curl": {
    "source": "iana",
    "extensions": ["curl"]
  },
  "text/vnd.curl.dcurl": {
    "source": "apache",
    "extensions": ["dcurl"]
  },
  "text/vnd.curl.mcurl": {
    "source": "apache",
    "extensions": ["mcurl"]
  },
  "text/vnd.curl.scurl": {
    "source": "apache",
    "extensions": ["scurl"]
  },
  "text/vnd.debian.copyright": {
    "source": "iana",
    "charset": "UTF-8"
  },
  "text/vnd.dmclientscript": {
    "source": "iana"
  },
  "text/vnd.dvb.subtitle": {
    "source": "iana",
    "extensions": ["sub"]
  },
  "text/vnd.esmertec.theme-descriptor": {
    "source": "iana",
    "charset": "UTF-8"
  },
  "text/vnd.ficlab.flt": {
    "source": "iana"
  },
  "text/vnd.fly": {
    "source": "iana",
    "extensions": ["fly"]
  },
  "text/vnd.fmi.flexstor": {
    "source": "iana",
    "extensions": ["flx"]
  },
  "text/vnd.gml": {
    "source": "iana"
  },
  "text/vnd.graphviz": {
    "source": "iana",
    "extensions": ["gv"]
  },
  "text/vnd.hans": {
    "source": "iana"
  },
  "text/vnd.hgl": {
    "source": "iana"
  },
  "text/vnd.in3d.3dml": {
    "source": "iana",
    "extensions": ["3dml"]
  },
  "text/vnd.in3d.spot": {
    "source": "iana",
    "extensions": ["spot"]
  },
  "text/vnd.iptc.newsml": {
    "source": "iana"
  },
  "text/vnd.iptc.nitf": {
    "source": "iana"
  },
  "text/vnd.latex-z": {
    "source": "iana"
  },
  "text/vnd.motorola.reflex": {
    "source": "iana"
  },
  "text/vnd.ms-mediapackage": {
    "source": "iana"
  },
  "text/vnd.net2phone.commcenter.command": {
    "source": "iana"
  },
  "text/vnd.radisys.msml-basic-layout": {
    "source": "iana"
  },
  "text/vnd.senx.warpscript": {
    "source": "iana"
  },
  "text/vnd.si.uricatalogue": {
    "source": "iana"
  },
  "text/vnd.sosi": {
    "source": "iana"
  },
  "text/vnd.sun.j2me.app-descriptor": {
    "source": "iana",
    "charset": "UTF-8",
    "extensions": ["jad"]
  },
  "text/vnd.trolltech.linguist": {
    "source": "iana",
    "charset": "UTF-8"
  },
  "text/vnd.wap.si": {
    "source": "iana"
  },
  "text/vnd.wap.sl": {
    "source": "iana"
  },
  "text/vnd.wap.wml": {
    "source": "iana",
    "extensions": ["wml"]
  },
  "text/vnd.wap.wmlscript": {
    "source": "iana",
    "extensions": ["wmls"]
  },
  "text/vtt": {
    "source": "iana",
    "charset": "UTF-8",
    "compressible": true,
    "extensions": ["vtt"]
  },
  "text/x-asm": {
    "source": "apache",
    "extensions": ["s","asm"]
  },
  "text/x-c": {
    "source": "apache",
    "extensions": ["c","cc","cxx","cpp","h","hh","dic"]
  },
  "text/x-component": {
    "source": "nginx",
    "extensions": ["htc"]
  },
  "text/x-fortran": {
    "source": "apache",
    "extensions": ["f","for","f77","f90"]
  },
  "text/x-gwt-rpc": {
    "compressible": true
  },
  "text/x-handlebars-template": {
    "extensions": ["hbs"]
  },
  "text/x-java-source": {
    "source": "apache",
    "extensions": ["java"]
  },
  "text/x-jquery-tmpl": {
    "compressible": true
  },
  "text/x-lua": {
    "extensions": ["lua"]
  },
  "text/x-markdown": {
    "compressible": true,
    "extensions": ["mkd"]
  },
  "text/x-nfo": {
    "source": "apache",
    "extensions": ["nfo"]
  },
  "text/x-opml": {
    "source": "apache",
    "extensions": ["opml"]
  },
  "text/x-org": {
    "compressible": true,
    "extensions": ["org"]
  },
  "text/x-pascal": {
    "source": "apache",
    "extensions": ["p","pas"]
  },
  "text/x-processing": {
    "compressible": true,
    "extensions": ["pde"]
  },
  "text/x-sass": {
    "extensions": ["sass"]
  },
  "text/x-scss": {
    "extensions": ["scss"]
  },
  "text/x-setext": {
    "source": "apache",
    "extensions": ["etx"]
  },
  "text/x-sfv": {
    "source": "apache",
    "extensions": ["sfv"]
  },
  "text/x-suse-ymp": {
    "compressible": true,
    "extensions": ["ymp"]
  },
  "text/x-uuencode": {
    "source": "apache",
    "extensions": ["uu"]
  },
  "text/x-vcalendar": {
    "source": "apache",
    "extensions": ["vcs"]
  },
  "text/x-vcard": {
    "source": "apache",
    "extensions": ["vcf"]
  },
  "text/xml": {
    "source": "iana",
    "compressible": true,
    "extensions": ["xml"]
  },
  "text/xml-external-parsed-entity": {
    "source": "iana"
  },
  "text/yaml": {
    "compressible": true,
    "extensions": ["yaml","yml"]
  },
  "video/1d-interleaved-parityfec": {
    "source": "iana"
  },
  "video/3gpp": {
    "source": "iana",
    "extensions": ["3gp","3gpp"]
  },
  "video/3gpp-tt": {
    "source": "iana"
  },
  "video/3gpp2": {
    "source": "iana",
    "extensions": ["3g2"]
  },
  "video/av1": {
    "source": "iana"
  },
  "video/bmpeg": {
    "source": "iana"
  },
  "video/bt656": {
    "source": "iana"
  },
  "video/celb": {
    "source": "iana"
  },
  "video/dv": {
    "source": "iana"
  },
  "video/encaprtp": {
    "source": "iana"
  },
  "video/ffv1": {
    "source": "iana"
  },
  "video/flexfec": {
    "source": "iana"
  },
  "video/h261": {
    "source": "iana",
    "extensions": ["h261"]
  },
  "video/h263": {
    "source": "iana",
    "extensions": ["h263"]
  },
  "video/h263-1998": {
    "source": "iana"
  },
  "video/h263-2000": {
    "source": "iana"
  },
  "video/h264": {
    "source": "iana",
    "extensions": ["h264"]
  },
  "video/h264-rcdo": {
    "source": "iana"
  },
  "video/h264-svc": {
    "source": "iana"
  },
  "video/h265": {
    "source": "iana"
  },
  "video/iso.segment": {
    "source": "iana",
    "extensions": ["m4s"]
  },
  "video/jpeg": {
    "source": "iana",
    "extensions": ["jpgv"]
  },
  "video/jpeg2000": {
    "source": "iana"
  },
  "video/jpm": {
    "source": "apache",
    "extensions": ["jpm","jpgm"]
  },
  "video/mj2": {
    "source": "iana",
    "extensions": ["mj2","mjp2"]
  },
  "video/mp1s": {
    "source": "iana"
  },
  "video/mp2p": {
    "source": "iana"
  },
  "video/mp2t": {
    "source": "iana",
    "extensions": ["ts"]
  },
  "video/mp4": {
    "source": "iana",
    "compressible": false,
    "extensions": ["mp4","mp4v","mpg4"]
  },
  "video/mp4v-es": {
    "source": "iana"
  },
  "video/mpeg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["mpeg","mpg","mpe","m1v","m2v"]
  },
  "video/mpeg4-generic": {
    "source": "iana"
  },
  "video/mpv": {
    "source": "iana"
  },
  "video/nv": {
    "source": "iana"
  },
  "video/ogg": {
    "source": "iana",
    "compressible": false,
    "extensions": ["ogv"]
  },
  "video/parityfec": {
    "source": "iana"
  },
  "video/pointer": {
    "source": "iana"
  },
  "video/quicktime": {
    "source": "iana",
    "compressible": false,
    "extensions": ["qt","mov"]
  },
  "video/raptorfec": {
    "source": "iana"
  },
  "video/raw": {
    "source": "iana"
  },
  "video/rtp-enc-aescm128": {
    "source": "iana"
  },
  "video/rtploopback": {
    "source": "iana"
  },
  "video/rtx": {
    "source": "iana"
  },
  "video/scip": {
    "source": "iana"
  },
  "video/smpte291": {
    "source": "iana"
  },
  "video/smpte292m": {
    "source": "iana"
  },
  "video/ulpfec": {
    "source": "iana"
  },
  "video/vc1": {
    "source": "iana"
  },
  "video/vc2": {
    "source": "iana"
  },
  "video/vnd.cctv": {
    "source": "iana"
  },
  "video/vnd.dece.hd": {
    "source": "iana",
    "extensions": ["uvh","uvvh"]
  },
  "video/vnd.dece.mobile": {
    "source": "iana",
    "extensions": ["uvm","uvvm"]
  },
  "video/vnd.dece.mp4": {
    "source": "iana"
  },
  "video/vnd.dece.pd": {
    "source": "iana",
    "extensions": ["uvp","uvvp"]
  },
  "video/vnd.dece.sd": {
    "source": "iana",
    "extensions": ["uvs","uvvs"]
  },
  "video/vnd.dece.video": {
    "source": "iana",
    "extensions": ["uvv","uvvv"]
  },
  "video/vnd.directv.mpeg": {
    "source": "iana"
  },
  "video/vnd.directv.mpeg-tts": {
    "source": "iana"
  },
  "video/vnd.dlna.mpeg-tts": {
    "source": "iana"
  },
  "video/vnd.dvb.file": {
    "source": "iana",
    "extensions": ["dvb"]
  },
  "video/vnd.fvt": {
    "source": "iana",
    "extensions": ["fvt"]
  },
  "video/vnd.hns.video": {
    "source": "iana"
  },
  "video/vnd.iptvforum.1dparityfec-1010": {
    "source": "iana"
  },
  "video/vnd.iptvforum.1dparityfec-2005": {
    "source": "iana"
  },
  "video/vnd.iptvforum.2dparityfec-1010": {
    "source": "iana"
  },
  "video/vnd.iptvforum.2dparityfec-2005": {
    "source": "iana"
  },
  "video/vnd.iptvforum.ttsavc": {
    "source": "iana"
  },
  "video/vnd.iptvforum.ttsmpeg2": {
    "source": "iana"
  },
  "video/vnd.motorola.video": {
    "source": "iana"
  },
  "video/vnd.motorola.videop": {
    "source": "iana"
  },
  "video/vnd.mpegurl": {
    "source": "iana",
    "extensions": ["mxu","m4u"]
  },
  "video/vnd.ms-playready.media.pyv": {
    "source": "iana",
    "extensions": ["pyv"]
  },
  "video/vnd.nokia.interleaved-multimedia": {
    "source": "iana"
  },
  "video/vnd.nokia.mp4vr": {
    "source": "iana"
  },
  "video/vnd.nokia.videovoip": {
    "source": "iana"
  },
  "video/vnd.objectvideo": {
    "source": "iana"
  },
  "video/vnd.radgamettools.bink": {
    "source": "iana"
  },
  "video/vnd.radgamettools.smacker": {
    "source": "iana"
  },
  "video/vnd.sealed.mpeg1": {
    "source": "iana"
  },
  "video/vnd.sealed.mpeg4": {
    "source": "iana"
  },
  "video/vnd.sealed.swf": {
    "source": "iana"
  },
  "video/vnd.sealedmedia.softseal.mov": {
    "source": "iana"
  },
  "video/vnd.uvvu.mp4": {
    "source": "iana",
    "extensions": ["uvu","uvvu"]
  },
  "video/vnd.vivo": {
    "source": "iana",
    "extensions": ["viv"]
  },
  "video/vnd.youtube.yt": {
    "source": "iana"
  },
  "video/vp8": {
    "source": "iana"
  },
  "video/vp9": {
    "source": "iana"
  },
  "video/webm": {
    "source": "apache",
    "compressible": false,
    "extensions": ["webm"]
  },
  "video/x-f4v": {
    "source": "apache",
    "extensions": ["f4v"]
  },
  "video/x-fli": {
    "source": "apache",
    "extensions": ["fli"]
  },
  "video/x-flv": {
    "source": "apache",
    "compressible": false,
    "extensions": ["flv"]
  },
  "video/x-m4v": {
    "source": "apache",
    "extensions": ["m4v"]
  },
  "video/x-matroska": {
    "source": "apache",
    "compressible": false,
    "extensions": ["mkv","mk3d","mks"]
  },
  "video/x-mng": {
    "source": "apache",
    "extensions": ["mng"]
  },
  "video/x-ms-asf": {
    "source": "apache",
    "extensions": ["asf","asx"]
  },
  "video/x-ms-vob": {
    "source": "apache",
    "extensions": ["vob"]
  },
  "video/x-ms-wm": {
    "source": "apache",
    "extensions": ["wm"]
  },
  "video/x-ms-wmv": {
    "source": "apache",
    "compressible": false,
    "extensions": ["wmv"]
  },
  "video/x-ms-wmx": {
    "source": "apache",
    "extensions": ["wmx"]
  },
  "video/x-ms-wvx": {
    "source": "apache",
    "extensions": ["wvx"]
  },
  "video/x-msvideo": {
    "source": "apache",
    "extensions": ["avi"]
  },
  "video/x-sgi-movie": {
    "source": "apache",
    "extensions": ["movie"]
  },
  "video/x-smv": {
    "source": "apache",
    "extensions": ["smv"]
  },
  "x-conference/x-cooltalk": {
    "source": "apache",
    "extensions": ["ice"]
  },
  "x-shader/x-fragment": {
    "compressible": true
  },
  "x-shader/x-vertex": {
    "compressible": true
  }
}`);
const EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
const TEXT_TYPE_REGEXP = /^text\//i;
const extensions = new Map();
const types1 = new Map();
function populateMaps(extensions1, types1) {
    const preference = [
        "nginx",
        "apache",
        undefined,
        "iana"
    ];
    for (const type of Object.keys(db1)){
        const mime = db1[type];
        const exts = mime.extensions;
        if (!exts || !exts.length) {
            continue;
        }
        extensions1.set(type, exts);
        for (const ext of exts){
            const current = types1.get(ext);
            if (current) {
                const from = preference.indexOf(db1[current].source);
                const to = preference.indexOf(mime.source);
                if (current !== "application/octet-stream" && (from > to || from === to && current.substr(0, 12) === "application/")) {
                    continue;
                }
            }
            types1.set(ext, type);
        }
    }
}
populateMaps(extensions, types1);
function charset(type) {
    const m = EXTRACT_TYPE_REGEXP.exec(type);
    if (!m) {
        return undefined;
    }
    const [match] = m;
    const mime = db1[match.toLowerCase()];
    if (mime && mime.charset) {
        return mime.charset;
    }
    if (TEXT_TYPE_REGEXP.test(match)) {
        return "UTF-8";
    }
    return undefined;
}
function lookup(path1) {
    const extension = extname2("x." + path1).toLowerCase().substr(1);
    return types1.get(extension);
}
function contentType(str1) {
    let mime = str1.includes("/") ? str1 : lookup(str1);
    if (!mime) {
        return undefined;
    }
    if (!mime.includes("charset")) {
        const cs = charset(mime);
        if (cs) {
            mime += `; charset=${cs.toLowerCase()}`;
        }
    }
    return mime;
}
function extension(type) {
    const match = EXTRACT_TYPE_REGEXP.exec(type);
    if (!match) {
        return undefined;
    }
    const exts = extensions.get(match[1].toLowerCase());
    if (!exts || !exts.length) {
        return undefined;
    }
    return exts[0];
}
function lexer(str1) {
    const tokens = [];
    let i = 0;
    while(i < str1.length){
        const __char = str1[i];
        if (__char === "*" || __char === "+" || __char === "?") {
            tokens.push({
                type: "MODIFIER",
                index: i,
                value: str1[i++]
            });
            continue;
        }
        if (__char === "\\") {
            tokens.push({
                type: "ESCAPED_CHAR",
                index: i++,
                value: str1[i++]
            });
            continue;
        }
        if (__char === "{") {
            tokens.push({
                type: "OPEN",
                index: i,
                value: str1[i++]
            });
            continue;
        }
        if (__char === "}") {
            tokens.push({
                type: "CLOSE",
                index: i,
                value: str1[i++]
            });
            continue;
        }
        if (__char === ":") {
            let name2 = "";
            let j = i + 1;
            while(j < str1.length){
                const code = str1.charCodeAt(j);
                if (code >= 48 && code <= 57 || code >= 65 && code <= 90 || code >= 97 && code <= 122 || code === 95) {
                    name2 += str1[j++];
                    continue;
                }
                break;
            }
            if (!name2) throw new TypeError(`Missing parameter name at ${i}`);
            tokens.push({
                type: "NAME",
                index: i,
                value: name2
            });
            i = j;
            continue;
        }
        if (__char === "(") {
            let count = 1;
            let pattern = "";
            let j = i + 1;
            if (str1[j] === "?") {
                throw new TypeError(`Pattern cannot start with "?" at ${j}`);
            }
            while(j < str1.length){
                if (str1[j] === "\\") {
                    pattern += str1[j++] + str1[j++];
                    continue;
                }
                if (str1[j] === ")") {
                    count--;
                    if (count === 0) {
                        j++;
                        break;
                    }
                } else if (str1[j] === "(") {
                    count++;
                    if (str1[j + 1] !== "?") {
                        throw new TypeError(`Capturing groups are not allowed at ${j}`);
                    }
                }
                pattern += str1[j++];
            }
            if (count) throw new TypeError(`Unbalanced pattern at ${i}`);
            if (!pattern) throw new TypeError(`Missing pattern at ${i}`);
            tokens.push({
                type: "PATTERN",
                index: i,
                value: pattern
            });
            i = j;
            continue;
        }
        tokens.push({
            type: "CHAR",
            index: i,
            value: str1[i++]
        });
    }
    tokens.push({
        type: "END",
        index: i,
        value: ""
    });
    return tokens;
}
function parse3(str1, options2 = {
}) {
    const tokens = lexer(str1);
    const { prefixes ="./"  } = options2;
    const defaultPattern = `[^${escapeString(options2.delimiter || "/#?")}]+?`;
    const result = [];
    let key = 0;
    let i = 0;
    let path1 = "";
    const tryConsume = (type)=>{
        if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;
    };
    const mustConsume = (type)=>{
        const value1 = tryConsume(type);
        if (value1 !== undefined) return value1;
        const { type: nextType , index  } = tokens[i];
        throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);
    };
    const consumeText = ()=>{
        let result1 = "";
        let value1;
        while(value1 = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR")){
            result1 += value1;
        }
        return result1;
    };
    while(i < tokens.length){
        const __char = tryConsume("CHAR");
        const name2 = tryConsume("NAME");
        const pattern = tryConsume("PATTERN");
        if (name2 || pattern) {
            let prefix = __char || "";
            if (prefixes.indexOf(prefix) === -1) {
                path1 += prefix;
                prefix = "";
            }
            if (path1) {
                result.push(path1);
                path1 = "";
            }
            result.push({
                name: name2 || key++,
                prefix,
                suffix: "",
                pattern: pattern || defaultPattern,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        const value1 = __char || tryConsume("ESCAPED_CHAR");
        if (value1) {
            path1 += value1;
            continue;
        }
        if (path1) {
            result.push(path1);
            path1 = "";
        }
        const open = tryConsume("OPEN");
        if (open) {
            const prefix = consumeText();
            const name3 = tryConsume("NAME") || "";
            const pattern1 = tryConsume("PATTERN") || "";
            const suffix = consumeText();
            mustConsume("CLOSE");
            result.push({
                name: name3 || (pattern1 ? key++ : ""),
                pattern: name3 && !pattern1 ? defaultPattern : pattern1,
                prefix,
                suffix,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        mustConsume("END");
    }
    return result;
}
function compile(str1, options2) {
    return tokensToFunction(parse3(str1, options2), options2);
}
function tokensToFunction(tokens, options2 = {
}) {
    const reFlags = flags(options2);
    const { encode: encode1 = (x)=>x
     , validate =true  } = options2;
    const matches = tokens.map((token)=>{
        if (typeof token === "object") {
            return new RegExp(`^(?:${token.pattern})$`, reFlags);
        }
    });
    return (data2)=>{
        let path1 = "";
        for(let i = 0; i < tokens.length; i++){
            const token = tokens[i];
            if (typeof token === "string") {
                path1 += token;
                continue;
            }
            const value1 = data2 ? data2[token.name] : undefined;
            const optional = token.modifier === "?" || token.modifier === "*";
            const repeat = token.modifier === "*" || token.modifier === "+";
            if (Array.isArray(value1)) {
                if (!repeat) {
                    throw new TypeError(`Expected "${token.name}" to not repeat, but got an array`);
                }
                if (value1.length === 0) {
                    if (optional) continue;
                    throw new TypeError(`Expected "${token.name}" to not be empty`);
                }
                for(let j = 0; j < value1.length; j++){
                    const segment = encode1(value1[j], token);
                    if (validate && !matches[i].test(segment)) {
                        throw new TypeError(`Expected all "${token.name}" to match "${token.pattern}", but got "${segment}"`);
                    }
                    path1 += token.prefix + segment + token.suffix;
                }
                continue;
            }
            if (typeof value1 === "string" || typeof value1 === "number") {
                const segment = encode1(String(value1), token);
                if (validate && !matches[i].test(segment)) {
                    throw new TypeError(`Expected "${token.name}" to match "${token.pattern}", but got "${segment}"`);
                }
                path1 += token.prefix + segment + token.suffix;
                continue;
            }
            if (optional) continue;
            const typeOfMessage = repeat ? "an array" : "a string";
            throw new TypeError(`Expected "${token.name}" to be ${typeOfMessage}`);
        }
        return path1;
    };
}
function escapeString(str1) {
    return str1.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
function flags(options2) {
    return options2 && options2.sensitive ? "" : "i";
}
function regexpToRegexp(path1, keys1) {
    if (!keys1) return path1;
    const groupsRegex = /\((?:\?<(.*?)>)?(?!\?)/g;
    let index = 0;
    let execResult = groupsRegex.exec(path1.source);
    while(execResult){
        keys1.push({
            name: execResult[1] || index++,
            prefix: "",
            suffix: "",
            modifier: "",
            pattern: ""
        });
        execResult = groupsRegex.exec(path1.source);
    }
    return path1;
}
function arrayToRegexp(paths, keys1, options2) {
    const parts = paths.map((path1)=>pathToRegexp(path1, keys1, options2).source
    );
    return new RegExp(`(?:${parts.join("|")})`, flags(options2));
}
function stringToRegexp(path1, keys1, options2) {
    return tokensToRegexp(parse3(path1, options2), keys1, options2);
}
function tokensToRegexp(tokens, keys1, options2 = {
}) {
    const { strict =false , start =true , end =true , encode: encode1 = (x)=>x
      } = options2;
    const endsWith = `[${escapeString(options2.endsWith || "")}]|$`;
    const delimiter3 = `[${escapeString(options2.delimiter || "/#?")}]`;
    let route = start ? "^" : "";
    for (const token of tokens){
        if (typeof token === "string") {
            route += escapeString(encode1(token));
        } else {
            const prefix = escapeString(encode1(token.prefix));
            const suffix = escapeString(encode1(token.suffix));
            if (token.pattern) {
                if (keys1) keys1.push(token);
                if (prefix || suffix) {
                    if (token.modifier === "+" || token.modifier === "*") {
                        const mod4 = token.modifier === "*" ? "?" : "";
                        route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod4}`;
                    } else {
                        route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;
                    }
                } else {
                    route += `(${token.pattern})${token.modifier}`;
                }
            } else {
                route += `(?:${prefix}${suffix})${token.modifier}`;
            }
        }
    }
    if (end) {
        if (!strict) route += `${delimiter3}?`;
        route += !options2.endsWith ? "$" : `(?=${endsWith})`;
    } else {
        const endToken = tokens[tokens.length - 1];
        const isEndDelimited = typeof endToken === "string" ? delimiter3.indexOf(endToken[endToken.length - 1]) > -1 : endToken === undefined;
        if (!strict) {
            route += `(?:${delimiter3}(?=${endsWith}))?`;
        }
        if (!isEndDelimited) {
            route += `(?=${delimiter3}|${endsWith})`;
        }
    }
    return new RegExp(route, flags(options2));
}
function pathToRegexp(path1, keys1, options2) {
    if (path1 instanceof RegExp) return regexpToRegexp(path1, keys1);
    if (Array.isArray(path1)) return arrayToRegexp(path1, keys1, options2);
    return stringToRegexp(path1, keys1, options2);
}
const errorStatusMap = {
    "BadRequest": 400,
    "Unauthorized": 401,
    "PaymentRequired": 402,
    "Forbidden": 403,
    "NotFound": 404,
    "MethodNotAllowed": 405,
    "NotAcceptable": 406,
    "ProxyAuthRequired": 407,
    "RequestTimeout": 408,
    "Conflict": 409,
    "Gone": 410,
    "LengthRequired": 411,
    "PreconditionFailed": 412,
    "RequestEntityTooLarge": 413,
    "RequestURITooLong": 414,
    "UnsupportedMediaType": 415,
    "RequestedRangeNotSatisfiable": 416,
    "ExpectationFailed": 417,
    "Teapot": 418,
    "MisdirectedRequest": 421,
    "UnprocessableEntity": 422,
    "Locked": 423,
    "FailedDependency": 424,
    "UpgradeRequired": 426,
    "PreconditionRequired": 428,
    "TooManyRequests": 429,
    "RequestHeaderFieldsTooLarge": 431,
    "UnavailableForLegalReasons": 451,
    "InternalServerError": 500,
    "NotImplemented": 501,
    "BadGateway": 502,
    "ServiceUnavailable": 503,
    "GatewayTimeout": 504,
    "HTTPVersionNotSupported": 505,
    "VariantAlsoNegotiates": 506,
    "InsufficientStorage": 507,
    "LoopDetected": 508,
    "NotExtended": 510,
    "NetworkAuthenticationRequired": 511
};
class HttpError extends Error {
    expose = false;
    status = Status.InternalServerError;
}
function createHttpErrorConstructor(status) {
    const name2 = `${Status[status]}Error`;
    const Ctor = class extends HttpError {
        constructor(message2){
            super(message2 || STATUS_TEXT.get(status));
            this.status = status;
            this.expose = status >= 400 && status < 500;
            Object.defineProperty(this, "name", {
                configurable: true,
                enumerable: false,
                value: name2,
                writable: true
            });
        }
    };
    return Ctor;
}
const httpErrors = {
};
for (const [key2, value1] of Object.entries(errorStatusMap)){
    httpErrors[key2] = createHttpErrorConstructor(value1);
}
function createHttpError(status = 500, message2) {
    return new httpErrors[Status[status]](message2);
}
function isHttpError(value3) {
    return value3 instanceof HttpError;
}
const ENCODE_CHARS_REGEXP = /(?:[^\x21\x25\x26-\x3B\x3D\x3F-\x5B\x5D\x5F\x61-\x7A\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g;
const HTAB = "\t".charCodeAt(0);
const SPACE = " ".charCodeAt(0);
const CR1 = "\r".charCodeAt(0);
const LF1 = "\n".charCodeAt(0);
const UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\uD800-\uDBFF])[\uDC00-\uDFFF]|[\uD800-\uDBFF]([^\uDC00-\uDFFF]|$)/g;
const UNMATCHED_SURROGATE_PAIR_REPLACE = "$1\uFFFD$2";
const BODY_TYPES = [
    "string",
    "number",
    "bigint",
    "boolean",
    "symbol"
];
function decodeComponent(text) {
    try {
        return decodeURIComponent(text);
    } catch  {
        return text;
    }
}
function encodeUrl(url) {
    return String(url).replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE).replace(ENCODE_CHARS_REGEXP, encodeURI);
}
function bufferToHex(buffer) {
    const arr = Array.from(new Uint8Array(buffer));
    return arr.map((b)=>b.toString(16).padStart(2, "0")
    ).join("");
}
async function getRandomFilename(prefix = "", extension1 = "") {
    const buffer = await crypto.subtle.digest("SHA-1", crypto.getRandomValues(new Uint8Array(256)));
    return `${prefix}${bufferToHex(buffer)}${extension1 ? `.${extension1}` : ""}`;
}
async function getBoundary() {
    const buffer = await crypto.subtle.digest("SHA-1", crypto.getRandomValues(new Uint8Array(256)));
    return `oak_${bufferToHex(buffer)}`;
}
function isAsyncIterable(value3) {
    return typeof value3 === "object" && value3 !== null && Symbol.asyncIterator in value3 && typeof value3[Symbol.asyncIterator] === "function";
}
function isReader(value3) {
    return typeof value3 === "object" && value3 !== null && "read" in value3 && typeof value3.read === "function";
}
function isCloser(value3) {
    return typeof value3 === "object" && value3 != null && "close" in value3 && typeof value3["close"] === "function";
}
function isConn(value3) {
    return typeof value3 === "object" && value3 != null && "rid" in value3 && typeof value3.rid === "number" && "localAddr" in value3 && "remoteAddr" in value3;
}
function isListenTlsOptions(value3) {
    return typeof value3 === "object" && value3 !== null && "certFile" in value3 && "keyFile" in value3 && "port" in value3;
}
function readableStreamFromReader(reader1, options2 = {
}) {
    const { autoClose =true , chunkSize =16640 , strategy ,  } = options2;
    return new ReadableStream({
        async pull (controller) {
            const chunk = new Uint8Array(chunkSize);
            try {
                const read = await reader1.read(chunk);
                if (read === null) {
                    if (isCloser(reader1) && autoClose) {
                        reader1.close();
                    }
                    controller.close();
                    return;
                }
                controller.enqueue(chunk.subarray(0, read));
            } catch (e) {
                controller.error(e);
                if (isCloser(reader1)) {
                    reader1.close();
                }
            }
        },
        cancel () {
            if (isCloser(reader1) && autoClose) {
                reader1.close();
            }
        }
    }, strategy);
}
function isRedirectStatus(value3) {
    return [
        Status.MultipleChoices,
        Status.MovedPermanently,
        Status.Found,
        Status.SeeOther,
        Status.UseProxy,
        Status.TemporaryRedirect,
        Status.PermanentRedirect, 
    ].includes(value3);
}
function isHtml(value3) {
    return /^\s*<(?:!DOCTYPE|html|body)/i.test(value3);
}
function skipLWSPChar(u8) {
    const result = new Uint8Array(u8.length);
    let j = 0;
    for(let i = 0; i < u8.length; i++){
        if (u8[i] === SPACE || u8[i] === HTAB) continue;
        result[j++] = u8[i];
    }
    return result.slice(0, j);
}
function stripEol(value3) {
    if (value3[value3.byteLength - 1] == LF1) {
        let drop = 1;
        if (value3.byteLength > 1 && value3[value3.byteLength - 2] === CR1) {
            drop = 2;
        }
        return value3.subarray(0, value3.byteLength - drop);
    }
    return value3;
}
const UP_PATH_REGEXP = /(?:^|[\\/])\.\.(?:[\\/]|$)/;
function resolvePath(rootPath, relativePath) {
    let path1 = relativePath;
    let root = rootPath;
    if (relativePath === undefined) {
        path1 = rootPath;
        root = ".";
    }
    if (path1 == null) {
        throw new TypeError("Argument relativePath is required.");
    }
    if (path1.includes("\0")) {
        throw createHttpError(400, "Malicious Path");
    }
    if (isAbsolute2(path1)) {
        throw createHttpError(400, "Malicious Path");
    }
    if (UP_PATH_REGEXP.test(normalize2("." + sep2 + path1))) {
        throw createHttpError(403);
    }
    return normalize2(join2(root, path1));
}
class Uint8ArrayTransformStream extends TransformStream {
    constructor(){
        const init = {
            async transform (chunk, controller) {
                chunk = await chunk;
                switch(typeof chunk){
                    case "object":
                        if (chunk === null) {
                            controller.terminate();
                        } else if (ArrayBuffer.isView(chunk)) {
                            controller.enqueue(new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength));
                        } else if (Array.isArray(chunk) && chunk.every((value3)=>typeof value3 === "number"
                        )) {
                            controller.enqueue(new Uint8Array(chunk));
                        } else if (typeof chunk.valueOf === "function" && chunk.valueOf() !== chunk) {
                            this.transform(chunk.valueOf(), controller);
                        } else if ("toJSON" in chunk) {
                            this.transform(JSON.stringify(chunk), controller);
                        }
                        break;
                    case "symbol":
                        controller.error(new TypeError("Cannot transform a symbol to a Uint8Array"));
                        break;
                    case "undefined":
                        controller.error(new TypeError("Cannot transform undefined to a Uint8Array"));
                        break;
                    default:
                        controller.enqueue(this.encoder.encode(String(chunk)));
                }
            },
            encoder: new TextEncoder()
        };
        super(init);
    }
}
const replacements = {
    "/": "_",
    "+": "-",
    "=": ""
};
const encoder1 = new TextEncoder();
function encodeBase64Safe(data2) {
    return mod.encode(data2).replace(/\/|\+|=/g, (c)=>replacements[c]
    );
}
function importKey(key1) {
    if (typeof key1 === "string") {
        key1 = encoder1.encode(key1);
    } else if (Array.isArray(key1) || key1 instanceof ArrayBuffer) {
        key1 = new Uint8Array(key1);
    }
    return globalThis.crypto.subtle.importKey("raw", key1, {
        name: "HMAC",
        hash: {
            name: "SHA-256"
        }
    }, true, [
        "sign",
        "verify"
    ]);
}
function sign(data2, key1) {
    if (typeof data2 === "string") {
        data2 = encoder1.encode(data2);
    } else if (Array.isArray(data2)) {
        data2 = Uint8Array.from(data2);
    }
    return crypto.subtle.sign("HMAC", key1, data2);
}
const DomResponse = Response;
const serveHttp = "serveHttp" in Deno ? Deno.serveHttp.bind(Deno) : undefined;
const maybeUpgradeWebSocket = "upgradeWebSocket" in Deno ? Deno.upgradeWebSocket.bind(Deno) : undefined;
function hasNativeHttp() {
    return !!serveHttp;
}
class NativeRequest {
    #conn;
    #reject;
    #request;
    #requestPromise;
    #resolve;
    #resolved = false;
    #upgradeWebSocket;
    constructor(requestEvent, options2 = {
    }){
        const { conn: conn1  } = options2;
        this.#conn = conn1;
        this.#upgradeWebSocket = "upgradeWebSocket" in options2 ? options2["upgradeWebSocket"] : maybeUpgradeWebSocket;
        this.#request = requestEvent.request;
        const p1 = new Promise((resolve3, reject)=>{
            this.#resolve = resolve3;
            this.#reject = reject;
        });
        this.#requestPromise = requestEvent.respondWith(p1);
    }
    get body() {
        return this.#request.body;
    }
    get donePromise() {
        return this.#requestPromise;
    }
    get headers() {
        return this.#request.headers;
    }
    get method() {
        return this.#request.method;
    }
    get remoteAddr() {
        return this.#conn?.remoteAddr?.hostname;
    }
    get request() {
        return this.#request;
    }
    get url() {
        try {
            const url = new URL(this.#request.url);
            return this.#request.url.replace(url.origin, "");
        } catch  {
        }
        return this.#request.url;
    }
    get rawUrl() {
        return this.#request.url;
    }
    error(reason) {
        if (this.#resolved) {
            throw new Error("Request already responded to.");
        }
        this.#reject(reason);
        this.#resolved = true;
    }
    respond(response) {
        if (this.#resolved) {
            throw new Error("Request already responded to.");
        }
        this.#resolve(response);
        this.#resolved = true;
        return this.#requestPromise;
    }
    upgrade(options) {
        if (this.#resolved) {
            throw new Error("Request already responded to.");
        }
        if (!this.#upgradeWebSocket) {
            throw new TypeError("Upgrading web sockets not supported.");
        }
        const { response: response2 , websocket  } = this.#upgradeWebSocket(this.#request, options);
        this.#resolve(response2);
        this.#resolved = true;
        return websocket;
    }
}
class HttpServerNative {
    #app;
    #closed = false;
    #listener;
    #options;
    constructor(app1, options3){
        if (!("serveHttp" in Deno)) {
            throw new Error("The native bindings for serving HTTP are not available.");
        }
        this.#app = app1;
        this.#options = options3;
    }
    get app() {
        return this.#app;
    }
    get closed() {
        return this.#closed;
    }
    close() {
        this.#closed = true;
        if (this.#listener) {
            this.#listener.close();
            this.#listener = undefined;
        }
    }
    listen() {
        return this.#listener = isListenTlsOptions(this.#options) ? Deno.listenTls(this.#options) : Deno.listen(this.#options);
    }
    [Symbol.asyncIterator]() {
        const start = (controller)=>{
            const server = this;
            async function serve1(conn2) {
                const httpConn = serveHttp(conn2);
                while(true){
                    try {
                        const requestEvent1 = await httpConn.nextRequest();
                        if (requestEvent1 === null) {
                            return;
                        }
                        const nativeRequest = new NativeRequest(requestEvent1, {
                            conn: conn2
                        });
                        controller.enqueue(nativeRequest);
                        await nativeRequest.donePromise;
                    } catch (error) {
                        server.app.dispatchEvent(new ErrorEvent("error", {
                            error
                        }));
                    }
                    if (server.closed) {
                        httpConn.close();
                        controller.close();
                    }
                }
            }
            const listener1 = this.#listener;
            assert1(listener1);
            async function accept() {
                while(true){
                    try {
                        const conn2 = await listener1.accept();
                        serve1(conn2);
                    } catch (error) {
                        if (!server.closed) {
                            server.app.dispatchEvent(new ErrorEvent("error", {
                                error
                            }));
                        }
                    }
                    if (server.closed) {
                        controller.close();
                        return;
                    }
                }
            }
            accept();
        };
        const stream = new ReadableStream({
            start
        });
        return stream[Symbol.asyncIterator]();
    }
}
const SUBTYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/;
const TYPE_NAME_REGEXP = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/;
const TYPE_REGEXP = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;
class MediaType {
    type;
    subtype;
    suffix;
    constructor(type1, subtype, suffix){
        this.type = type1;
        this.subtype = subtype;
        this.suffix = suffix;
    }
}
function format3(obj) {
    const { subtype: subtype1 , suffix: suffix1 , type: type1  } = obj;
    if (!TYPE_NAME_REGEXP.test(type1)) {
        throw new TypeError("Invalid type.");
    }
    if (!SUBTYPE_NAME_REGEXP.test(subtype1)) {
        throw new TypeError("Invalid subtype.");
    }
    let str1 = `${type1}/${subtype1}`;
    if (suffix1) {
        if (!TYPE_NAME_REGEXP.test(suffix1)) {
            throw new TypeError("Invalid suffix.");
        }
        str1 += `+${suffix1}`;
    }
    return str1;
}
function parse4(str1) {
    const match = TYPE_REGEXP.exec(str1.toLowerCase());
    if (!match) {
        throw new TypeError("Invalid media type.");
    }
    let [, type1, subtype1] = match;
    let suffix1;
    const idx = subtype1.lastIndexOf("+");
    if (idx !== -1) {
        suffix1 = subtype1.substr(idx + 1);
        subtype1 = subtype1.substr(0, idx);
    }
    return new MediaType(type1, subtype1, suffix1);
}
function mimeMatch(expected, actual) {
    if (expected === undefined) {
        return false;
    }
    const actualParts = actual.split("/");
    const expectedParts = expected.split("/");
    if (actualParts.length !== 2 || expectedParts.length !== 2) {
        return false;
    }
    const [actualType, actualSubtype] = actualParts;
    const [expectedType, expectedSubtype] = expectedParts;
    if (expectedType !== "*" && expectedType !== actualType) {
        return false;
    }
    if (expectedSubtype.substr(0, 2) === "*+") {
        return expectedSubtype.length <= actualSubtype.length + 1 && expectedSubtype.substr(1) === actualSubtype.substr(1 - expectedSubtype.length);
    }
    if (expectedSubtype !== "*" && expectedSubtype !== actualSubtype) {
        return false;
    }
    return true;
}
function normalize3(type1) {
    if (type1 === "urlencoded") {
        return "application/x-www-form-urlencoded";
    } else if (type1 === "multipart") {
        return "multipart/*";
    } else if (type1[0] === "+") {
        return `*/*${type1}`;
    }
    return type1.includes("/") ? type1 : lookup(type1);
}
function normalizeType(value3) {
    try {
        const val = value3.split(";");
        const type1 = parse4(val[0]);
        return format3(type1);
    } catch  {
        return;
    }
}
function isMediaType(value3, types1) {
    const val = normalizeType(value3);
    if (!val) {
        return false;
    }
    if (!types1.length) {
        return val;
    }
    for (const type1 of types1){
        if (mimeMatch(normalize3(type1), val)) {
            return type1[0] === "+" || type1.includes("*") ? val : type1;
        }
    }
    return false;
}
const MIN_BUF_SIZE1 = 16;
const CR2 = "\r".charCodeAt(0);
const LF2 = "\n".charCodeAt(0);
class BufferFullError1 extends Error {
    partial;
    name = "BufferFullError";
    constructor(partial2){
        super("Buffer full");
        this.partial = partial2;
    }
}
class BufReader1 {
    #buffer;
    #reader;
    #posRead = 0;
    #posWrite = 0;
    #eof = false;
    async #fill() {
        if (this.#posRead > 0) {
            this.#buffer.copyWithin(0, this.#posRead, this.#posWrite);
            this.#posWrite -= this.#posRead;
            this.#posRead = 0;
        }
        if (this.#posWrite >= this.#buffer.byteLength) {
            throw Error("bufio: tried to fill full buffer");
        }
        for(let i = 100; i > 0; i--){
            const rr = await this.#reader.read(this.#buffer.subarray(this.#posWrite));
            if (rr === null) {
                this.#eof = true;
                return;
            }
            assert1(rr >= 0, "negative read");
            this.#posWrite += rr;
            if (rr > 0) {
                return;
            }
        }
        throw new Error(`No progress after ${100} read() calls`);
    }
     #reset(buffer, reader) {
        this.#buffer = buffer;
        this.#reader = reader;
        this.#eof = false;
    }
    constructor(rd2, size4 = 4096){
        if (size4 < 16) {
            size4 = MIN_BUF_SIZE1;
        }
        this.#reset(new Uint8Array(size4), rd2);
    }
    buffered() {
        return this.#posWrite - this.#posRead;
    }
    async readLine(strip = true) {
        let line;
        try {
            line = await this.readSlice(LF2);
        } catch (err) {
            let { partial: partial3  } = err;
            assert1(partial3 instanceof Uint8Array, "Caught error from `readSlice()` without `partial` property");
            if (!(err instanceof BufferFullError1)) {
                throw err;
            }
            if (!this.#eof && partial3.byteLength > 0 && partial3[partial3.byteLength - 1] === CR2) {
                assert1(this.#posRead > 0, "Tried to rewind past start of buffer");
                this.#posRead--;
                partial3 = partial3.subarray(0, partial3.byteLength - 1);
            }
            return {
                bytes: partial3,
                eol: this.#eof
            };
        }
        if (line === null) {
            return null;
        }
        if (line.byteLength === 0) {
            return {
                bytes: line,
                eol: true
            };
        }
        if (strip) {
            line = stripEol(line);
        }
        return {
            bytes: line,
            eol: true
        };
    }
    async readSlice(delim) {
        let s1 = 0;
        let slice;
        while(true){
            let i = this.#buffer.subarray(this.#posRead + s1, this.#posWrite).indexOf(delim);
            if (i >= 0) {
                i += s1;
                slice = this.#buffer.subarray(this.#posRead, this.#posRead + i + 1);
                this.#posRead += i + 1;
                break;
            }
            if (this.#eof) {
                if (this.#posRead === this.#posWrite) {
                    return null;
                }
                slice = this.#buffer.subarray(this.#posRead, this.#posWrite);
                this.#posRead = this.#posWrite;
                break;
            }
            if (this.buffered() >= this.#buffer.byteLength) {
                this.#posRead = this.#posWrite;
                const oldbuf = this.#buffer;
                const newbuf = this.#buffer.slice(0);
                this.#buffer = newbuf;
                throw new BufferFullError1(oldbuf);
            }
            s1 = this.#posWrite - this.#posRead;
            try {
                await this.#fill();
            } catch (err) {
                err.partial = slice;
                throw err;
            }
        }
        return slice;
    }
}
const COLON = ":".charCodeAt(0);
const HTAB1 = "\t".charCodeAt(0);
const SPACE1 = " ".charCodeAt(0);
const decoder1 = new TextDecoder();
function toParamRegExp(attributePattern, flags1) {
    return new RegExp(`(?:^|;)\\s*${attributePattern}\\s*=\\s*` + `(` + `[^";\\s][^;\\s]*` + `|` + `"(?:[^"\\\\]|\\\\"?)+"?` + `)`, flags1);
}
async function readHeaders(body) {
    const headers = {
    };
    let readResult = await body.readLine();
    while(readResult){
        const { bytes  } = readResult;
        if (!bytes.length) {
            return headers;
        }
        let i = bytes.indexOf(COLON);
        if (i === -1) {
            throw new httpErrors.BadRequest(`Malformed header: ${decoder1.decode(bytes)}`);
        }
        const key1 = decoder1.decode(bytes.subarray(0, i)).trim().toLowerCase();
        if (key1 === "") {
            throw new httpErrors.BadRequest("Invalid header key.");
        }
        i++;
        while(i < bytes.byteLength && (bytes[i] === SPACE1 || bytes[i] === HTAB1)){
            i++;
        }
        const value3 = decoder1.decode(bytes.subarray(i)).trim();
        headers[key1] = value3;
        readResult = await body.readLine();
    }
    throw new httpErrors.BadRequest("Unexpected end of body reached.");
}
function unquote(value3) {
    if (value3.startsWith(`"`)) {
        const parts = value3.slice(1).split(`\\"`);
        for(let i = 0; i < parts.length; ++i){
            const quoteIndex = parts[i].indexOf(`"`);
            if (quoteIndex !== -1) {
                parts[i] = parts[i].slice(0, quoteIndex);
                parts.length = i + 1;
            }
            parts[i] = parts[i].replace(/\\(.)/g, "$1");
        }
        value3 = parts.join(`"`);
    }
    return value3;
}
let needsEncodingFixup = false;
function fixupEncoding(value3) {
    if (needsEncodingFixup && /[\x80-\xff]/.test(value3)) {
        value3 = textDecode("utf-8", value3);
        if (needsEncodingFixup) {
            value3 = textDecode("iso-8859-1", value3);
        }
    }
    return value3;
}
const FILENAME_STAR_REGEX = toParamRegExp("filename\\*", "i");
const FILENAME_START_ITER_REGEX = toParamRegExp("filename\\*((?!0\\d)\\d+)(\\*?)", "ig");
const FILENAME_REGEX = toParamRegExp("filename", "i");
function rfc2047decode(value3) {
    if (!value3.startsWith("=?") || /[\x00-\x19\x80-\xff]/.test(value3)) {
        return value3;
    }
    return value3.replace(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g, (_, charset1, encoding, text)=>{
        if (encoding === "q" || encoding === "Q") {
            text = text.replace(/_/g, " ");
            text = text.replace(/=([0-9a-fA-F]{2})/g, (_1, hex)=>String.fromCharCode(parseInt(hex, 16))
            );
            return textDecode(charset1, text);
        }
        try {
            text = atob(text);
        } catch  {
        }
        return textDecode(charset1, text);
    });
}
function rfc2231getParam(header) {
    const matches = [];
    let match;
    while(match = FILENAME_START_ITER_REGEX.exec(header)){
        const [, ns, quote, part] = match;
        const n = parseInt(ns, 10);
        if (n in matches) {
            if (n === 0) {
                break;
            }
            continue;
        }
        matches[n] = [
            quote,
            part
        ];
    }
    const parts = [];
    for(let n = 0; n < matches.length; ++n){
        if (!(n in matches)) {
            break;
        }
        let [quote, part] = matches[n];
        part = unquote(part);
        if (quote) {
            part = unescape(part);
            if (n === 0) {
                part = rfc5987decode(part);
            }
        }
        parts.push(part);
    }
    return parts.join("");
}
function rfc5987decode(value3) {
    const encodingEnd = value3.indexOf(`'`);
    if (encodingEnd === -1) {
        return value3;
    }
    const encoding = value3.slice(0, encodingEnd);
    const langValue = value3.slice(encodingEnd + 1);
    return textDecode(encoding, langValue.replace(/^[^']*'/, ""));
}
function textDecode(encoding, value3) {
    if (encoding) {
        try {
            const decoder2 = new TextDecoder(encoding, {
                fatal: true
            });
            const bytes = Array.from(value3, (c)=>c.charCodeAt(0)
            );
            if (bytes.every((code)=>code <= 255
            )) {
                value3 = decoder2.decode(new Uint8Array(bytes));
                needsEncodingFixup = false;
            }
        } catch  {
        }
    }
    return value3;
}
function getFilename(header) {
    needsEncodingFixup = true;
    let matches = FILENAME_STAR_REGEX.exec(header);
    if (matches) {
        const [, filename] = matches;
        return fixupEncoding(rfc2047decode(rfc5987decode(unescape(unquote(filename)))));
    }
    const filename = rfc2231getParam(header);
    if (filename) {
        return fixupEncoding(rfc2047decode(filename));
    }
    matches = FILENAME_REGEX.exec(header);
    if (matches) {
        const [, filename1] = matches;
        return fixupEncoding(rfc2047decode(unquote(filename1)));
    }
    return "";
}
const decoder2 = new TextDecoder();
const encoder2 = new TextEncoder();
const BOUNDARY_PARAM_REGEX = toParamRegExp("boundary", "i");
const NAME_PARAM_REGEX = toParamRegExp("name", "i");
function append(a, b) {
    const ab1 = new Uint8Array(a.length + b.length);
    ab1.set(a, 0);
    ab1.set(b, a.length);
    return ab1;
}
function isEqual(a, b) {
    return equals(skipLWSPChar(a), b);
}
async function readToStartOrEnd(body, start, end) {
    let lineResult;
    while(lineResult = await body.readLine()){
        if (isEqual(lineResult.bytes, start)) {
            return true;
        }
        if (isEqual(lineResult.bytes, end)) {
            return false;
        }
    }
    throw new httpErrors.BadRequest("Unable to find multi-part boundary.");
}
async function* parts({ body , final: __final , part , maxFileSize , maxSize , outPath , prefix  }) {
    async function getFile(contentType1) {
        const ext = extension(contentType1);
        if (!ext) {
            throw new httpErrors.BadRequest(`Invalid media type for part: ${ext}`);
        }
        if (!outPath) {
            outPath = await Deno.makeTempDir();
        }
        const filename = `${outPath}/${await getRandomFilename(prefix, ext)}`;
        const file = await Deno.open(filename, {
            write: true,
            createNew: true
        });
        return [
            filename,
            file
        ];
    }
    while(true){
        const headers = await readHeaders(body);
        const contentType1 = headers["content-type"];
        const contentDisposition = headers["content-disposition"];
        if (!contentDisposition) {
            throw new httpErrors.BadRequest("Form data part missing content-disposition header");
        }
        if (!contentDisposition.match(/^form-data;/i)) {
            throw new httpErrors.BadRequest(`Unexpected content-disposition header: "${contentDisposition}"`);
        }
        const matches = NAME_PARAM_REGEX.exec(contentDisposition);
        if (!matches) {
            throw new httpErrors.BadRequest(`Unable to determine name of form body part`);
        }
        let [, name2] = matches;
        name2 = unquote(name2);
        if (contentType1) {
            const originalName = getFilename(contentDisposition);
            let byteLength = 0;
            let file;
            let filename;
            let buf;
            if (maxSize) {
                buf = new Uint8Array();
            } else {
                const result = await getFile(contentType1);
                filename = result[0];
                file = result[1];
            }
            while(true){
                const readResult = await body.readLine(false);
                if (!readResult) {
                    throw new httpErrors.BadRequest("Unexpected EOF reached");
                }
                const { bytes  } = readResult;
                const strippedBytes = stripEol(bytes);
                if (isEqual(strippedBytes, part) || isEqual(strippedBytes, __final)) {
                    if (file) {
                        const bytesDiff = bytes.length - strippedBytes.length;
                        if (bytesDiff) {
                            const originalBytesSize = await file.seek(-bytesDiff, Deno.SeekMode.Current);
                            await file.truncate(originalBytesSize);
                        }
                        file.close();
                    }
                    yield [
                        name2,
                        {
                            content: buf,
                            contentType: contentType1,
                            name: name2,
                            filename,
                            originalName
                        }, 
                    ];
                    if (isEqual(strippedBytes, __final)) {
                        return;
                    }
                    break;
                }
                byteLength += bytes.byteLength;
                if (byteLength > maxFileSize) {
                    if (file) {
                        file.close();
                    }
                    throw new httpErrors.RequestEntityTooLarge(`File size exceeds limit of ${maxFileSize} bytes.`);
                }
                if (buf) {
                    if (byteLength > maxSize) {
                        const result = await getFile(contentType1);
                        filename = result[0];
                        file = result[1];
                        await writeAll(file, buf);
                        buf = undefined;
                    } else {
                        buf = append(buf, bytes);
                    }
                }
                if (file) {
                    await writeAll(file, bytes);
                }
            }
        } else {
            const lines = [];
            while(true){
                const readResult = await body.readLine();
                if (!readResult) {
                    throw new httpErrors.BadRequest("Unexpected EOF reached");
                }
                const { bytes  } = readResult;
                if (isEqual(bytes, part) || isEqual(bytes, __final)) {
                    yield [
                        name2,
                        lines.join("\n")
                    ];
                    if (isEqual(bytes, __final)) {
                        return;
                    }
                    break;
                }
                lines.push(decoder2.decode(bytes));
            }
        }
    }
}
class FormDataReader {
    #body;
    #boundaryFinal;
    #boundaryPart;
    #reading = false;
    constructor(contentType1, body1){
        const matches = contentType1.match(BOUNDARY_PARAM_REGEX);
        if (!matches) {
            throw new httpErrors.BadRequest(`Content type "${contentType1}" does not contain a valid boundary.`);
        }
        let [, boundary] = matches;
        boundary = unquote(boundary);
        this.#boundaryPart = encoder2.encode(`--${boundary}`);
        this.#boundaryFinal = encoder2.encode(`--${boundary}--`);
        this.#body = body1;
    }
    async read(options = {
    }) {
        if (this.#reading) {
            throw new Error("Body is already being read.");
        }
        this.#reading = true;
        const { outPath , maxFileSize =10485760 , maxSize =0 , bufferSize =1048576 ,  } = options;
        const body1 = new BufReader1(this.#body, bufferSize);
        const result = {
            fields: {
            }
        };
        if (!await readToStartOrEnd(body1, this.#boundaryPart, this.#boundaryFinal)) {
            return result;
        }
        try {
            for await (const part of parts({
                body: body1,
                part: this.#boundaryPart,
                final: this.#boundaryFinal,
                maxFileSize,
                maxSize,
                outPath
            })){
                const [key1, value3] = part;
                if (typeof value3 === "string") {
                    result.fields[key1] = value3;
                } else {
                    if (!result.files) {
                        result.files = [];
                    }
                    result.files.push(value3);
                }
            }
        } catch (err) {
            if (err instanceof Deno.errors.PermissionDenied) {
                console.error(err.stack ? err.stack : `${err.name}: ${err.message}`);
            } else {
                throw err;
            }
        }
        return result;
    }
    async *stream(options = {
    }) {
        if (this.#reading) {
            throw new Error("Body is already being read.");
        }
        this.#reading = true;
        const { outPath , maxFileSize =10485760 , maxSize =0 , bufferSize =32000 ,  } = options;
        const body1 = new BufReader1(this.#body, bufferSize);
        if (!await readToStartOrEnd(body1, this.#boundaryPart, this.#boundaryFinal)) {
            return;
        }
        try {
            for await (const part of parts({
                body: body1,
                part: this.#boundaryPart,
                final: this.#boundaryFinal,
                maxFileSize,
                maxSize,
                outPath
            })){
                yield part;
            }
        } catch (err) {
            if (err instanceof Deno.errors.PermissionDenied) {
                console.error(err.stack ? err.stack : `${err.name}: ${err.message}`);
            } else {
                throw err;
            }
        }
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        return `${this.constructor.name} ${inspect({
        })}`;
    }
}
const defaultBodyContentTypes = {
    json: [
        "json",
        "application/*+json",
        "application/csp-report"
    ],
    form: [
        "urlencoded"
    ],
    formData: [
        "multipart"
    ],
    text: [
        "text"
    ]
};
function resolveType(contentType2, contentTypes) {
    const contentTypesJson = [
        ...defaultBodyContentTypes.json,
        ...contentTypes.json ?? [], 
    ];
    const contentTypesForm = [
        ...defaultBodyContentTypes.form,
        ...contentTypes.form ?? [], 
    ];
    const contentTypesFormData = [
        ...defaultBodyContentTypes.formData,
        ...contentTypes.formData ?? [], 
    ];
    const contentTypesText = [
        ...defaultBodyContentTypes.text,
        ...contentTypes.text ?? [], 
    ];
    if (contentTypes.bytes && isMediaType(contentType2, contentTypes.bytes)) {
        return "bytes";
    } else if (isMediaType(contentType2, contentTypesJson)) {
        return "json";
    } else if (isMediaType(contentType2, contentTypesForm)) {
        return "form";
    } else if (isMediaType(contentType2, contentTypesFormData)) {
        return "form-data";
    } else if (isMediaType(contentType2, contentTypesText)) {
        return "text";
    }
    return "bytes";
}
const decoder3 = new TextDecoder();
function bodyAsReader(body1) {
    return body1 instanceof ReadableStream ? readerFromStreamReader(body1.getReader()) : body1 ?? new Buffer1();
}
function bodyAsStream(body1) {
    return body1 instanceof ReadableStream ? body1 : readableStreamFromReader(body1);
}
class RequestBody {
    #formDataReader;
    #stream;
    #has;
    #readAllBody;
    #request;
    #type;
     #parse(type) {
        switch(type){
            case "form":
                this.#type = "bytes";
                return async ()=>new URLSearchParams(decoder3.decode(await this.#valuePromise()).replace(/\+/g, " "))
                ;
            case "form-data":
                this.#type = "form-data";
                return ()=>{
                    const contentType2 = this.#request.headers.get("content-type");
                    assert1(contentType2);
                    return this.#formDataReader ?? (this.#formDataReader = new FormDataReader(contentType2, bodyAsReader(this.#request.body)));
                };
            case "json":
                this.#type = "bytes";
                return async ()=>JSON.parse(decoder3.decode(await this.#valuePromise()))
                ;
            case "bytes":
                this.#type = "bytes";
                return ()=>this.#valuePromise()
                ;
            case "text":
                this.#type = "bytes";
                return async ()=>decoder3.decode(await this.#valuePromise())
                ;
            default:
                throw new TypeError(`Invalid body type: "${type}"`);
        }
    }
     #validateGetArgs(type, contentTypes) {
        if (type === "reader" && this.#type && this.#type !== "reader") {
            throw new TypeError(`Body already consumed as "${this.#type}" and cannot be returned as a reader.`);
        }
        if (type === "stream" && this.#type && this.#type !== "stream") {
            throw new TypeError(`Body already consumed as "${this.#type}" and cannot be returned as a stream.`);
        }
        if (type === "form-data" && this.#type && this.#type !== "form-data") {
            throw new TypeError(`Body already consumed as "${this.#type}" and cannot be returned as a stream.`);
        }
        if (this.#type === "reader" && type !== "reader") {
            throw new TypeError("Body already consumed as a reader and can only be returned as a reader.");
        }
        if (this.#type === "stream" && type !== "stream") {
            throw new TypeError("Body already consumed as a stream and can only be returned as a stream.");
        }
        if (this.#type === "form-data" && type !== "form-data") {
            throw new TypeError("Body already consumed as form data and can only be returned as form data.");
        }
        if (type && Object.keys(contentTypes).length) {
            throw new TypeError(`"type" and "contentTypes" cannot be specified at the same time`);
        }
    }
     #valuePromise() {
        return this.#readAllBody ?? (this.#readAllBody = this.#request instanceof Request ? this.#request.arrayBuffer().then((ab1)=>new Uint8Array(ab1)
        ) : readAll(this.#request.body));
    }
    constructor(request1){
        this.#request = request1;
    }
    get({ type , contentTypes ={
    }  }) {
        this.#validateGetArgs(type, contentTypes);
        if (type === "reader") {
            this.#type = "reader";
            return {
                type,
                value: bodyAsReader(this.#request.body)
            };
        }
        if (type === "stream") {
            if (!this.#request.body) {
                this.#type = "undefined";
                throw new TypeError(`Body is undefined and cannot be returned as "stream".`);
            }
            this.#type = "stream";
            const streams = (this.#stream ?? bodyAsStream(this.#request.body)).tee();
            this.#stream = streams[1];
            return {
                type,
                value: streams[0]
            };
        }
        if (!this.has()) {
            this.#type = "undefined";
        } else if (!this.#type) {
            const encoding = this.#request.headers.get("content-encoding") ?? "identity";
            if (encoding !== "identity") {
                throw new httpErrors.UnsupportedMediaType(`Unsupported content-encoding: ${encoding}`);
            }
        }
        if (this.#type === "undefined") {
            if (type && type !== "undefined") {
                throw new TypeError(`Body is undefined and cannot be returned as "${type}".`);
            }
            return {
                type: "undefined",
                value: undefined
            };
        }
        if (!type) {
            const contentType2 = this.#request.headers.get("content-type");
            assert1(contentType2, "The Content-Type header is missing from the request");
            type = resolveType(contentType2, contentTypes);
        }
        assert1(type);
        const body1 = Object.create(null);
        Object.defineProperties(body1, {
            type: {
                value: type,
                configurable: true,
                enumerable: true
            },
            value: {
                get: this.#parse(type),
                configurable: true,
                enumerable: true
            }
        });
        return body1;
    }
    has() {
        return this.#has !== undefined ? this.#has : this.#has = this.#request.body != null && (this.#request.headers.has("transfer-encoding") || !!parseInt(this.#request.headers.get("content-length") ?? "", 10)) || this.#request.body instanceof ReadableStream;
    }
}
function compareSpecs(a, b) {
    return b.q - a.q || (b.s ?? 0) - (a.s ?? 0) || (a.o ?? 0) - (b.o ?? 0) || a.i - b.i || 0;
}
function isQuality(spec) {
    return spec.q > 0;
}
const SIMPLE_CHARSET_REGEXP = /^\s*([^\s;]+)\s*(?:;(.*))?$/;
function parseCharset(str1, i) {
    const match = SIMPLE_CHARSET_REGEXP.exec(str1);
    if (!match) {
        return;
    }
    const [, charset1] = match;
    let q = 1;
    if (match[2]) {
        const params = match[2].split(";");
        for (const param of params){
            const [key1, value3] = param.trim().split("=");
            if (key1 === "q") {
                q = parseFloat(value3);
                break;
            }
        }
    }
    return {
        charset: charset1,
        q,
        i
    };
}
function parseAcceptCharset(accept) {
    const accepts = accept.split(",");
    const result = [];
    for(let i = 0; i < accepts.length; i++){
        const charset1 = parseCharset(accepts[i].trim(), i);
        if (charset1) {
            result.push(charset1);
        }
    }
    return result;
}
function specify(charset1, spec, i) {
    let s1 = 0;
    if (spec.charset.toLowerCase() === charset1.toLocaleLowerCase()) {
        s1 |= 1;
    } else if (spec.charset !== "*") {
        return;
    }
    return {
        i,
        o: spec.i,
        q: spec.q,
        s: s1
    };
}
function getCharsetPriority(charset1, accepted, index) {
    let priority = {
        i: -1,
        o: -1,
        q: 0,
        s: 0
    };
    for (const accepts of accepted){
        const spec = specify(charset1, accepts, index);
        if (spec && ((priority.s ?? 0) - (spec.s ?? 0) || priority.q - spec.q || (priority.o ?? 0) - (spec.o ?? 0)) < 0) {
            priority = spec;
        }
    }
    return priority;
}
function preferredCharsets(accept = "*", provided) {
    const accepts = parseAcceptCharset(accept);
    if (!provided) {
        return accepts.filter(isQuality).sort(compareSpecs).map((spec)=>spec.charset
        );
    }
    const priorities = provided.map((type2, index)=>getCharsetPriority(type2, accepts, index)
    );
    return priorities.filter(isQuality).sort(compareSpecs).map((priority)=>provided[priorities.indexOf(priority)]
    );
}
const simpleEncodingRegExp = /^\s*([^\s;]+)\s*(?:;(.*))?$/;
function parseEncoding(str1, i) {
    const match = simpleEncodingRegExp.exec(str1);
    if (!match) {
        return undefined;
    }
    const encoding = match[1];
    let q = 1;
    if (match[2]) {
        const params = match[2].split(";");
        for (const param of params){
            const p1 = param.trim().split("=");
            if (p1[0] === "q") {
                q = parseFloat(p1[1]);
                break;
            }
        }
    }
    return {
        encoding,
        q,
        i
    };
}
function specify1(encoding, spec, i = -1) {
    if (!spec.encoding) {
        return;
    }
    let s1 = 0;
    if (spec.encoding.toLocaleLowerCase() === encoding.toLocaleLowerCase()) {
        s1 = 1;
    } else if (spec.encoding !== "*") {
        return;
    }
    return {
        i,
        o: spec.i,
        q: spec.q,
        s: s1
    };
}
function parseAcceptEncoding(accept) {
    const accepts = accept.split(",");
    const parsedAccepts = [];
    let hasIdentity = false;
    let minQuality = 1;
    for(let i = 0; i < accepts.length; i++){
        const encoding = parseEncoding(accepts[i].trim(), i);
        if (encoding) {
            parsedAccepts.push(encoding);
            hasIdentity = hasIdentity || !!specify1("identity", encoding);
            minQuality = Math.min(minQuality, encoding.q || 1);
        }
    }
    if (!hasIdentity) {
        parsedAccepts.push({
            encoding: "identity",
            q: minQuality,
            i: accepts.length - 1
        });
    }
    return parsedAccepts;
}
function getEncodingPriority(encoding, accepted, index) {
    let priority = {
        o: -1,
        q: 0,
        s: 0,
        i: 0
    };
    for (const s1 of accepted){
        const spec = specify1(encoding, s1, index);
        if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {
            priority = spec;
        }
    }
    return priority;
}
function preferredEncodings(accept, provided) {
    const accepts = parseAcceptEncoding(accept);
    if (!provided) {
        return accepts.filter(isQuality).sort(compareSpecs).map((spec)=>spec.encoding
        );
    }
    const priorities = provided.map((type2, index)=>getEncodingPriority(type2, accepts, index)
    );
    return priorities.filter(isQuality).sort(compareSpecs).map((priority)=>provided[priorities.indexOf(priority)]
    );
}
const SIMPLE_LANGUAGE_REGEXP = /^\s*([^\s\-;]+)(?:-([^\s;]+))?\s*(?:;(.*))?$/;
function parseLanguage(str1, i) {
    const match = SIMPLE_LANGUAGE_REGEXP.exec(str1);
    if (!match) {
        return undefined;
    }
    const [, prefix, suffix1] = match;
    const full = suffix1 ? `${prefix}-${suffix1}` : prefix;
    let q = 1;
    if (match[3]) {
        const params = match[3].split(";");
        for (const param of params){
            const [key1, value3] = param.trim().split("=");
            if (key1 === "q") {
                q = parseFloat(value3);
                break;
            }
        }
    }
    return {
        prefix,
        suffix: suffix1,
        full,
        q,
        i
    };
}
function parseAcceptLanguage(accept) {
    const accepts = accept.split(",");
    const result = [];
    for(let i = 0; i < accepts.length; i++){
        const language = parseLanguage(accepts[i].trim(), i);
        if (language) {
            result.push(language);
        }
    }
    return result;
}
function specify2(language, spec, i) {
    const p1 = parseLanguage(language, i);
    if (!p1) {
        return undefined;
    }
    let s1 = 0;
    if (spec.full.toLowerCase() === p1.full.toLowerCase()) {
        s1 |= 4;
    } else if (spec.prefix.toLowerCase() === p1.prefix.toLowerCase()) {
        s1 |= 2;
    } else if (spec.full.toLowerCase() === p1.prefix.toLowerCase()) {
        s1 |= 1;
    } else if (spec.full !== "*") {
        return;
    }
    return {
        i,
        o: spec.i,
        q: spec.q,
        s: s1
    };
}
function getLanguagePriority(language, accepted, index) {
    let priority = {
        i: -1,
        o: -1,
        q: 0,
        s: 0
    };
    for (const accepts of accepted){
        const spec = specify2(language, accepts, index);
        if (spec && ((priority.s ?? 0) - (spec.s ?? 0) || priority.q - spec.q || (priority.o ?? 0) - (spec.o ?? 0)) < 0) {
            priority = spec;
        }
    }
    return priority;
}
function preferredLanguages(accept = "*", provided) {
    const accepts = parseAcceptLanguage(accept);
    if (!provided) {
        return accepts.filter(isQuality).sort(compareSpecs).map((spec)=>spec.full
        );
    }
    const priorities = provided.map((type2, index)=>getLanguagePriority(type2, accepts, index)
    );
    return priorities.filter(isQuality).sort(compareSpecs).map((priority)=>provided[priorities.indexOf(priority)]
    );
}
const simpleMediaTypeRegExp = /^\s*([^\s\/;]+)\/([^;\s]+)\s*(?:;(.*))?$/;
function quoteCount(str1) {
    let count = 0;
    let index = 0;
    while((index = str1.indexOf(`"`, index)) !== -1){
        count++;
        index++;
    }
    return count;
}
function splitMediaTypes(accept) {
    const accepts = accept.split(",");
    let j = 0;
    for(let i = 1; i < accepts.length; i++){
        if (quoteCount(accepts[j]) % 2 === 0) {
            accepts[++j] = accepts[i];
        } else {
            accepts[j] += `,${accepts[i]}`;
        }
    }
    accepts.length = j + 1;
    return accepts;
}
function splitParameters(str1) {
    const parameters = str1.split(";");
    let j = 0;
    for(let i = 1; i < parameters.length; i++){
        if (quoteCount(parameters[j]) % 2 === 0) {
            parameters[++j] = parameters[i];
        } else {
            parameters[j] += `;${parameters[i]}`;
        }
    }
    parameters.length = j + 1;
    return parameters.map((p1)=>p1.trim()
    );
}
function splitKeyValuePair(str1) {
    const [key1, value3] = str1.split("=");
    return [
        key1.toLowerCase(),
        value3
    ];
}
function parseMediaType(str1, i) {
    const match = simpleMediaTypeRegExp.exec(str1);
    if (!match) {
        return;
    }
    const params = Object.create(null);
    let q = 1;
    const [, type2, subtype1, parameters] = match;
    if (parameters) {
        const kvps = splitParameters(parameters).map(splitKeyValuePair);
        for (const [key1, val] of kvps){
            const value3 = val && val[0] === `"` && val[val.length - 1] === `"` ? val.substr(1, val.length - 2) : val;
            if (key1 === "q" && value3) {
                q = parseFloat(value3);
                break;
            }
            params[key1] = value3;
        }
    }
    return {
        type: type2,
        subtype: subtype1,
        params,
        q,
        i
    };
}
function parseAccept(accept) {
    const accepts = splitMediaTypes(accept);
    const mediaTypes = [];
    for(let i = 0; i < accepts.length; i++){
        const mediaType = parseMediaType(accepts[i].trim(), i);
        if (mediaType) {
            mediaTypes.push(mediaType);
        }
    }
    return mediaTypes;
}
function getFullType(spec) {
    return `${spec.type}/${spec.subtype}`;
}
function specify3(type2, spec, index) {
    const p1 = parseMediaType(type2, index);
    if (!p1) {
        return;
    }
    let s1 = 0;
    if (spec.type.toLowerCase() === p1.type.toLowerCase()) {
        s1 |= 4;
    } else if (spec.type !== "*") {
        return;
    }
    if (spec.subtype.toLowerCase() === p1.subtype.toLowerCase()) {
        s1 |= 2;
    } else if (spec.subtype !== "*") {
        return;
    }
    const keys1 = Object.keys(spec.params);
    if (keys1.length) {
        if (keys1.every((key1)=>(spec.params[key1] || "").toLowerCase() === (p1.params[key1] || "").toLowerCase()
        )) {
            s1 |= 1;
        } else {
            return;
        }
    }
    return {
        i: index,
        o: spec.o,
        q: spec.q,
        s: s1
    };
}
function getMediaTypePriority(type2, accepted, index) {
    let priority = {
        o: -1,
        q: 0,
        s: 0,
        i: index
    };
    for (const accepts of accepted){
        const spec = specify3(type2, accepts, index);
        if (spec && ((priority.s || 0) - (spec.s || 0) || (priority.q || 0) - (spec.q || 0) || (priority.o || 0) - (spec.o || 0)) < 0) {
            priority = spec;
        }
    }
    return priority;
}
function preferredMediaTypes(accept, provided) {
    const accepts = parseAccept(accept === undefined ? "*/*" : accept || "");
    if (!provided) {
        return accepts.filter(isQuality).sort(compareSpecs).map(getFullType);
    }
    const priorities = provided.map((type2, index)=>{
        return getMediaTypePriority(type2, accepts, index);
    });
    return priorities.filter(isQuality).sort(compareSpecs).map((priority)=>provided[priorities.indexOf(priority)]
    );
}
class Request1 {
    #body;
    #proxy;
    #secure;
    #serverRequest;
    #url;
     #getRemoteAddr() {
        return this.#serverRequest instanceof NativeRequest ? this.#serverRequest.remoteAddr ?? "" : this.#serverRequest?.conn?.remoteAddr?.hostname ?? "";
    }
    get hasBody() {
        return this.#body.has();
    }
    get headers() {
        return this.#serverRequest.headers;
    }
    get ip() {
        return (this.#proxy ? this.ips[0] : this.#getRemoteAddr()) ?? "";
    }
    get ips() {
        return this.#proxy ? (this.#serverRequest.headers.get("x-forwarded-for") ?? this.#getRemoteAddr()).split(/\s*,\s*/) : [];
    }
    get method() {
        return this.#serverRequest.method;
    }
    get secure() {
        return this.#secure;
    }
    get originalRequest() {
        return this.#serverRequest;
    }
    get url() {
        if (!this.#url) {
            const serverRequest = this.#serverRequest;
            if (serverRequest instanceof NativeRequest && !this.#proxy) {
                try {
                    this.#url = new URL(serverRequest.rawUrl);
                    return this.#url;
                } catch  {
                }
            }
            let proto;
            let host;
            if (this.#proxy) {
                proto = serverRequest.headers.get("x-forwarded-proto")?.split(/\s*,\s*/, 1)[0] ?? "http";
                host = (serverRequest.headers.get("x-forwarded-host") ?? serverRequest.headers.get("host")) ?? "";
            } else {
                proto = this.#secure ? "https" : "http";
                host = serverRequest.headers.get("host") ?? "";
            }
            try {
                this.#url = new URL(`${proto}://${host}${serverRequest.url}`);
            } catch  {
                throw new TypeError(`The server request URL of "${proto}://${host}${serverRequest.url}" is invalid.`);
            }
        }
        return this.#url;
    }
    constructor(serverRequest, proxy1 = false, secure1 = false){
        this.#proxy = proxy1;
        this.#secure = secure1;
        this.#serverRequest = serverRequest;
        this.#body = new RequestBody(serverRequest instanceof NativeRequest ? serverRequest.request : serverRequest);
    }
    accepts(...types) {
        const acceptValue = this.#serverRequest.headers.get("Accept");
        if (!acceptValue) {
            return;
        }
        if (types.length) {
            return preferredMediaTypes(acceptValue, types)[0];
        }
        return preferredMediaTypes(acceptValue);
    }
    acceptsCharsets(...charsets) {
        const acceptCharsetValue = this.#serverRequest.headers.get("Accept-Charset");
        if (!acceptCharsetValue) {
            return;
        }
        if (charsets.length) {
            return preferredCharsets(acceptCharsetValue, charsets)[0];
        }
        return preferredCharsets(acceptCharsetValue);
    }
    acceptsEncodings(...encodings) {
        const acceptEncodingValue = this.#serverRequest.headers.get("Accept-Encoding");
        if (!acceptEncodingValue) {
            return;
        }
        if (encodings.length) {
            return preferredEncodings(acceptEncodingValue, encodings)[0];
        }
        return preferredEncodings(acceptEncodingValue);
    }
    acceptsLanguages(...langs) {
        const acceptLanguageValue = this.#serverRequest.headers.get("Accept-Language");
        if (!acceptLanguageValue) {
            return;
        }
        if (langs.length) {
            return preferredLanguages(acceptLanguageValue, langs)[0];
        }
        return preferredLanguages(acceptLanguageValue);
    }
    body(options = {
    }) {
        return this.#body.get(options);
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        const { hasBody , headers , ip , ips , method , secure: secure2 , url  } = this;
        return `${this.constructor.name} ${inspect({
            hasBody,
            headers,
            ip,
            ips,
            method,
            secure: secure2,
            url: url.toString()
        })}`;
    }
}
class AsyncIterableReader {
    #asyncIterator;
    #closed = false;
    #current;
    #processValue;
    constructor(asyncIterable, processValue){
        this.#asyncIterator = asyncIterable[Symbol.asyncIterator]();
        this.#processValue = processValue;
    }
     #close() {
        if (this.#asyncIterator.return) {
            this.#asyncIterator.return();
        }
        this.#asyncIterator = undefined;
        this.#closed = true;
    }
    async read(p) {
        if (this.#closed) {
            return null;
        }
        if (p.byteLength === 0) {
            this.#close();
            return 0;
        }
        if (!this.#current) {
            const { value: value3 , done  } = await this.#asyncIterator.next();
            if (done) {
                this.#close();
            }
            if (value3 !== undefined) {
                this.#current = this.#processValue(value3);
            }
        }
        if (!this.#current) {
            if (!this.#closed) {
                this.#close();
            }
            return null;
        }
        const len = copy(this.#current, p);
        if (len >= this.#current.byteLength) {
            this.#current = undefined;
        } else {
            this.#current = this.#current.slice(len);
        }
        return len;
    }
}
const REDIRECT_BACK = Symbol("redirect backwards");
const encoder3 = new TextEncoder();
function toUint8Array(body1) {
    let bodyText;
    if (BODY_TYPES.includes(typeof body1)) {
        bodyText = String(body1);
    } else {
        bodyText = JSON.stringify(body1);
    }
    return encoder3.encode(bodyText);
}
async function convertBodyToBodyInit(body1, type2) {
    let result;
    if (BODY_TYPES.includes(typeof body1)) {
        result = String(body1);
        type2 = type2 ?? (isHtml(result) ? "html" : "text/plain");
    } else if (isReader(body1)) {
        result = readableStreamFromReader(body1);
    } else if (ArrayBuffer.isView(body1) || body1 instanceof ArrayBuffer || body1 instanceof Blob || body1 instanceof URLSearchParams) {
        result = body1;
    } else if (body1 instanceof ReadableStream) {
        result = body1.pipeThrough(new Uint8ArrayTransformStream());
    } else if (body1 instanceof FormData) {
        result = body1;
        type2 = "multipart/form-data";
    } else if (body1 && typeof body1 === "object") {
        result = JSON.stringify(body1);
        type2 = type2 ?? "json";
    } else if (typeof body1 === "function") {
        const result1 = body1.call(null);
        return convertBodyToBodyInit(await result1, type2);
    } else if (body1) {
        throw new TypeError("Response body was set but could not be converted.");
    }
    return [
        result,
        type2
    ];
}
async function convertBodyToStdBody(body1, type2) {
    let result;
    if (BODY_TYPES.includes(typeof body1)) {
        const bodyText = String(body1);
        result = encoder3.encode(bodyText);
        type2 = type2 ?? (isHtml(bodyText) ? "html" : "text/plain");
    } else if (body1 instanceof Uint8Array || isReader(body1)) {
        result = body1;
    } else if (body1 instanceof ReadableStream) {
        result = readerFromStreamReader(body1.pipeThrough(new Uint8ArrayTransformStream()).getReader());
    } else if (isAsyncIterable(body1)) {
        result = new AsyncIterableReader(body1, toUint8Array);
    } else if (body1 && typeof body1 === "object") {
        result = encoder3.encode(JSON.stringify(body1));
        type2 = type2 ?? "json";
    } else if (typeof body1 === "function") {
        const result1 = body1.call(null);
        return convertBodyToStdBody(await result1, type2);
    } else if (body1) {
        throw new TypeError("Response body was set but could not be converted.");
    }
    return [
        result,
        type2
    ];
}
class Response1 {
    #body;
    #bodySet = false;
    #domResponse;
    #headers = new Headers();
    #request;
    #resources = [];
    #serverResponse;
    #status;
    #type;
    #writable = true;
    async #getBodyInit() {
        const [body1, type2] = await convertBodyToBodyInit(this.body, this.type);
        this.type = type2;
        return body1;
    }
    async #getStdBody() {
        const [body1, type2] = await convertBodyToStdBody(this.body, this.type);
        this.type = type2;
        return body1;
    }
     #setContentType() {
        if (this.type) {
            const contentTypeString = contentType(this.type);
            if (contentTypeString && !this.headers.has("Content-Type")) {
                this.headers.append("Content-Type", contentTypeString);
            }
        }
    }
    get body() {
        return this.#body;
    }
    set body(value) {
        if (!this.#writable) {
            throw new Error("The response is not writable.");
        }
        this.#bodySet = true;
        this.#body = value;
    }
    get headers() {
        return this.#headers;
    }
    set headers(value) {
        if (!this.#writable) {
            throw new Error("The response is not writable.");
        }
        this.#headers = value;
    }
    get status() {
        if (this.#status) {
            return this.#status;
        }
        return this.body != null ? Status.OK : this.#bodySet ? Status.NoContent : Status.NotFound;
    }
    set status(value) {
        if (!this.#writable) {
            throw new Error("The response is not writable.");
        }
        this.#status = value;
    }
    get type() {
        return this.#type;
    }
    set type(value) {
        if (!this.#writable) {
            throw new Error("The response is not writable.");
        }
        this.#type = value;
    }
    get writable() {
        return this.#writable;
    }
    constructor(request2){
        this.#request = request2;
    }
    addResource(rid) {
        this.#resources.push(rid);
    }
    destroy(closeResources = true) {
        this.#writable = false;
        this.#body = undefined;
        this.#serverResponse = undefined;
        this.#domResponse = undefined;
        if (closeResources) {
            for (const rid of this.#resources){
                Deno.close(rid);
            }
        }
    }
    redirect(url, alt = "/") {
        if (url === REDIRECT_BACK) {
            url = this.#request.headers.get("Referer") ?? String(alt);
        } else if (typeof url === "object") {
            url = String(url);
        }
        this.headers.set("Location", encodeUrl(url));
        if (!this.status || !isRedirectStatus(this.status)) {
            this.status = Status.Found;
        }
        if (this.#request.accepts("html")) {
            url = encodeURI(url);
            this.type = "text/html; charset=utf-8";
            this.body = `Redirecting to <a href="${url}">${url}</a>.`;
            return;
        }
        this.type = "text/plain; charset=utf-8";
        this.body = `Redirecting to ${url}.`;
    }
    async toDomResponse() {
        if (this.#domResponse) {
            return this.#domResponse;
        }
        const bodyInit = await this.#getBodyInit();
        this.#setContentType();
        const { headers  } = this;
        if (!(bodyInit || headers.has("Content-Type") || headers.has("Content-Length"))) {
            headers.append("Content-Length", "0");
        }
        this.#writable = false;
        const status = this.status;
        const responseInit = {
            headers,
            status,
            statusText: STATUS_TEXT.get(status)
        };
        return this.#domResponse = new DomResponse(bodyInit, responseInit);
    }
    async toServerResponse() {
        if (this.#serverResponse) {
            return this.#serverResponse;
        }
        const body1 = await this.#getStdBody();
        this.#setContentType();
        const { headers  } = this;
        if (!(body1 || headers.has("Content-Type") || headers.has("Content-Length"))) {
            headers.append("Content-Length", "0");
        }
        this.#writable = false;
        return this.#serverResponse = {
            body: body1,
            headers,
            status: this.status
        };
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        const { body: body1 , headers , status , type: type2 , writable  } = this;
        return `${this.constructor.name} ${inspect({
            body: body1,
            headers,
            status,
            type: type2,
            writable
        })}`;
    }
}
function isFileInfo(value3) {
    return Boolean(value3 && typeof value3 === "object" && "mtime" in value3 && "size" in value3);
}
function calcStatTag(entity) {
    const mtime = entity.mtime?.getTime().toString(16) ?? "0";
    const size5 = entity.size.toString(16);
    return `"${size5}-${mtime}"`;
}
const encoder4 = new TextEncoder();
async function calcEntityTag(entity) {
    if (entity.length === 0) {
        return `"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk="`;
    }
    if (typeof entity === "string") {
        entity = encoder4.encode(entity);
    }
    const hash = mod.encode(await crypto.subtle.digest("SHA-1", entity)).substring(0, 27);
    return `"${entity.length.toString(16)}-${hash}"`;
}
async function calculate(entity, options4 = {
}) {
    const weak = options4.weak ?? isFileInfo(entity);
    const tag = isFileInfo(entity) ? calcStatTag(entity) : await calcEntityTag(entity);
    return weak ? `W/${tag}` : tag;
}
async function ifNoneMatch(value3, entity, options4 = {
}) {
    if (value3.trim() === "*") {
        return false;
    }
    const etag = await calculate(entity, options4);
    const tags = value3.split(/\s*,\s*/);
    return !tags.includes(etag);
}
const ETAG_RE = /(?:W\/)?"[ !#-\x7E\x80-\xFF]+"/;
async function ifRange(value3, mtime, entity) {
    if (value3) {
        const matches1 = value3.match(ETAG_RE);
        if (matches1) {
            const [match] = matches1;
            if (await calculate(entity) === match) {
                return true;
            }
        } else {
            return new Date(value3).getTime() >= mtime;
        }
    }
    return false;
}
function parseRange(value3, size5) {
    const ranges = [];
    const [unit, rangesStr] = value3.split("=");
    if (unit !== "bytes") {
        throw createHttpError(Status.RequestedRangeNotSatisfiable);
    }
    for (const range of rangesStr.split(/\s*,\s+/)){
        const item = range.split("-");
        if (item.length !== 2) {
            throw createHttpError(Status.RequestedRangeNotSatisfiable);
        }
        const [startStr, endStr] = item;
        let start;
        let end;
        try {
            if (startStr === "") {
                start = size5 - parseInt(endStr, 10) - 1;
                end = size5 - 1;
            } else if (endStr === "") {
                start = parseInt(startStr, 10);
                end = size5 - 1;
            } else {
                start = parseInt(startStr, 10);
                end = parseInt(endStr, 10);
            }
        } catch  {
            throw createHttpError();
        }
        if (start < 0 || start >= size5 || end < 0 || end >= size5 || start > end) {
            throw createHttpError(Status.RequestedRangeNotSatisfiable);
        }
        ranges.push({
            start,
            end
        });
    }
    return ranges;
}
async function readRange(file, range) {
    let length = range.end - range.start + 1;
    assert1(length);
    await file.seek(range.start, Deno.SeekMode.Start);
    const result = new Uint8Array(length);
    let off = 0;
    while(length){
        const p2 = new Uint8Array(Math.min(length, 16640));
        const nread = await file.read(p2);
        assert1(nread !== null, "Unexpected EOF encountered when reading a range.");
        assert1(nread > 0, "Unexpected read of 0 bytes while reading a range.");
        copy(p2, result, off);
        off += nread;
        length -= nread;
        assert1(length >= 0, "Unexpected length remaining.");
    }
    return result;
}
const encoder5 = new TextEncoder();
class MultiPartStream extends ReadableStream {
    #contentLength;
    #postscript;
    #preamble;
    constructor(file, type2, ranges, size5, boundary1){
        super({
            pull: async (controller)=>{
                const range = ranges.shift();
                if (!range) {
                    controller.enqueue(this.#postscript);
                    controller.close();
                    if (!(file instanceof Uint8Array)) {
                        file.close();
                    }
                    return;
                }
                let bytes;
                if (file instanceof Uint8Array) {
                    bytes = file.subarray(range.start, range.end + 1);
                } else {
                    bytes = await readRange(file, range);
                }
                const rangeHeader = encoder5.encode(`Content-Range: ${range.start}-${range.end}/${size5}\n\n`);
                controller.enqueue(concat(this.#preamble, rangeHeader, bytes));
            }
        });
        const resolvedType = contentType(type2);
        if (!resolvedType) {
            throw new TypeError(`Could not resolve media type for "${type2}"`);
        }
        this.#preamble = encoder5.encode(`\n--${boundary1}\nContent-Type: ${resolvedType}\n`);
        this.#postscript = encoder5.encode(`\n--${boundary1}--\n`);
        this.#contentLength = ranges.reduce((prev, { start , end  })=>{
            return prev + this.#preamble.length + String(start).length + String(end).length + String(size5).length + 20 + (end - start);
        }, this.#postscript.length);
    }
    contentLength() {
        return this.#contentLength;
    }
}
const BOUNDARY = await getBoundary();
function isHidden(path1) {
    const pathArr = path1.split("/");
    for (const segment of pathArr){
        if (segment[0] === "." && segment !== "." && segment !== "..") {
            return true;
        }
        return false;
    }
}
async function exists(path1) {
    try {
        return (await Deno.stat(path1)).isFile;
    } catch  {
        return false;
    }
}
async function getEntity(path1, mtime, stats, maxbuffer, response2) {
    let body1;
    let entity;
    const file1 = await Deno.open(path1, {
        read: true
    });
    if (stats.size < maxbuffer) {
        const buffer = await readAll(file1);
        file1.close();
        body1 = entity = buffer;
    } else {
        response2.addResource(file1.rid);
        body1 = file1;
        entity = {
            mtime: new Date(mtime),
            size: stats.size
        };
    }
    return [
        body1,
        entity
    ];
}
async function sendRange(response2, body1, range, size6) {
    const ranges1 = parseRange(range, size6);
    if (ranges1.length === 0) {
        throw createHttpError(Status.RequestedRangeNotSatisfiable);
    }
    response2.status = Status.PartialContent;
    if (ranges1.length === 1) {
        const [byteRange] = ranges1;
        response2.headers.set("Content-Length", String(byteRange.end - byteRange.start + 1));
        response2.headers.set("Content-Range", `bytes ${byteRange.start}-${byteRange.end}/${size6}`);
        if (body1 instanceof Uint8Array) {
            response2.body = body1.slice(byteRange.start, byteRange.end + 1);
        } else {
            await body1.seek(byteRange.start, Deno.SeekMode.Start);
            response2.body = new LimitedReader(body1, byteRange.end - byteRange.start + 1);
        }
    } else {
        assert1(response2.type);
        response2.headers.set("content-type", `multipart/byteranges; boundary=${BOUNDARY}`);
        const multipartBody = new MultiPartStream(body1, response2.type, ranges1, size6, BOUNDARY);
        response2.headers.set("content-length", String(multipartBody.contentLength()));
        response2.body = multipartBody;
    }
}
async function send({ request: request3 , response: response2  }, path1, options4 = {
    root: ""
}) {
    const { brotli =true , contentTypes ={
    } , extensions: extensions1 , format: format4 = true , gzip =true , hidden =false , immutable =false , index , maxbuffer =1048576 , maxage =0 , root ,  } = options4;
    const trailingSlash = path1[path1.length - 1] === "/";
    path1 = decodeComponent(path1.substr(parse2(path1).root.length));
    if (index && trailingSlash) {
        path1 += index;
    }
    if (!hidden && isHidden(path1)) {
        throw createHttpError(403);
    }
    path1 = resolvePath(root, path1);
    let encodingExt = "";
    if (brotli && request3.acceptsEncodings("br", "identity") === "br" && await exists(`${path1}.br`)) {
        path1 = `${path1}.br`;
        response2.headers.set("Content-Encoding", "br");
        response2.headers.delete("Content-Length");
        encodingExt = ".br";
    } else if (gzip && request3.acceptsEncodings("gzip", "identity") === "gzip" && await exists(`${path1}.gz`)) {
        path1 = `${path1}.gz`;
        response2.headers.set("Content-Encoding", "gzip");
        response2.headers.delete("Content-Length");
        encodingExt = ".gz";
    }
    if (extensions1 && !/\.[^/]*$/.exec(path1)) {
        for (let ext of extensions1){
            if (!/^\./.exec(ext)) {
                ext = `.${ext}`;
            }
            if (await exists(`${path1}${ext}`)) {
                path1 += ext;
                break;
            }
        }
    }
    let stats;
    try {
        stats = await Deno.stat(path1);
        if (stats.isDirectory) {
            if (format4 && index) {
                path1 += `/${index}`;
                stats = await Deno.stat(path1);
            } else {
                return;
            }
        }
    } catch (err) {
        if (err instanceof Deno.errors.NotFound) {
            throw createHttpError(404, err.message);
        }
        throw createHttpError(500, err.message);
    }
    let mtime = null;
    if (response2.headers.has("Last-Modified")) {
        mtime = new Date(response2.headers.get("Last-Modified")).getTime();
    } else if (stats.mtime) {
        mtime = stats.mtime.getTime();
        mtime -= mtime % 1000;
        response2.headers.set("Last-Modified", new Date(mtime).toUTCString());
    }
    if (!response2.headers.has("Cache-Control")) {
        const directives = [
            `max-age=${maxage / 1000 | 0}`
        ];
        if (immutable) {
            directives.push("immutable");
        }
        response2.headers.set("Cache-Control", directives.join(","));
    }
    if (!response2.type) {
        response2.type = encodingExt !== "" ? extname2(basename2(path1, encodingExt)) : contentTypes[extname2(path1)] ?? extname2(path1);
    }
    let entity = null;
    let body1 = null;
    if (request3.headers.has("If-None-Match") && mtime) {
        [body1, entity] = await getEntity(path1, mtime, stats, maxbuffer, response2);
        if (!await ifNoneMatch(request3.headers.get("If-None-Match"), entity)) {
            response2.headers.set("ETag", await calculate(entity));
            response2.status = 304;
            return path1;
        }
    }
    if (request3.headers.has("If-Modified-Since") && mtime) {
        const ifModifiedSince = new Date(request3.headers.get("If-Modified-Since"));
        if (ifModifiedSince.getTime() >= mtime) {
            response2.status = 304;
            return path1;
        }
    }
    if (!body1 || !entity) {
        [body1, entity] = await getEntity(path1, mtime ?? 0, stats, maxbuffer, response2);
    }
    if (request3.headers.has("If-Range") && mtime && await ifRange(request3.headers.get("If-Range"), mtime, entity) && request3.headers.has("Range")) {
        await sendRange(response2, body1, request3.headers.get("Range"), stats.size);
        return path1;
    }
    if (request3.headers.has("Range")) {
        await sendRange(response2, body1, request3.headers.get("Range"), stats.size);
        return path1;
    }
    response2.headers.set("Content-Length", String(stats.size));
    response2.body = body1;
    if (!response2.headers.has("ETag")) {
        response2.headers.set("ETag", await calculate(entity));
    }
    if (!response2.headers.has("Accept-Ranges")) {
        response2.headers.set("Accept-Ranges", "bytes");
    }
    return path1;
}
const encoder6 = new TextEncoder();
class CloseEvent1 extends Event {
    constructor(eventInit){
        super("close", eventInit);
    }
}
class ServerSentEvent extends Event {
    #data;
    #id;
    #type;
    constructor(type3, data2, { replacer , space , ...eventInit1 } = {
    }){
        super(type3, eventInit1);
        this.#type = type3;
        try {
            this.#data = typeof data2 === "string" ? data2 : JSON.stringify(data2, replacer, space);
        } catch (e) {
            assert1(e instanceof Error);
            throw new TypeError(`data could not be coerced into a serialized string.\n  ${e.message}`);
        }
        const { id  } = eventInit1;
        this.#id = id;
    }
    get data() {
        return this.#data;
    }
    get id() {
        return this.#id;
    }
    toString() {
        const data3 = `data: ${this.#data.split("\n").join("\ndata: ")}\n`;
        return `${this.#type === "__message" ? "" : `event: ${this.#type}\n`}${this.#id ? `id: ${String(this.#id)}\n` : ""}${data3}\n`;
    }
}
const response2 = `HTTP/1.1 200 OK\n`;
const responseHeaders = new Headers([
    [
        "Connection",
        "Keep-Alive"
    ],
    [
        "Content-Type",
        "text/event-stream"
    ],
    [
        "Cache-Control",
        "no-cache"
    ],
    [
        "Keep-Alive",
        `timeout=${Number.MAX_SAFE_INTEGER}`
    ], 
]);
class SSEStreamTarget extends EventTarget {
    #closed = false;
    #context;
    #controller;
    #keepAliveId;
     #error(error) {
        console.log("error", error);
        this.dispatchEvent(new CloseEvent1({
            cancelable: false
        }));
        const errorEvent = new ErrorEvent("error", {
            error
        });
        this.dispatchEvent(errorEvent);
        this.#context.app.dispatchEvent(errorEvent);
    }
     #push(payload) {
        if (!this.#controller) {
            this.#error(new Error("The controller has not been set."));
            return;
        }
        if (this.#closed) {
            return;
        }
        this.#controller.enqueue(encoder6.encode(payload));
    }
    get closed() {
        return this.#closed;
    }
    constructor(context2, { headers , keepAlive =false  } = {
    }){
        super();
        this.#context = context2;
        context2.response.body = new ReadableStream({
            start: (controller)=>{
                this.#controller = controller;
            },
            cancel: (error)=>{
                if (error instanceof Error && error.message.includes("connection closed")) {
                    this.close();
                } else {
                    this.#error(error);
                }
            }
        });
        if (headers) {
            for (const [key1, value3] of headers){
                context2.response.headers.set(key1, value3);
            }
        }
        for (const [key1, value3] of responseHeaders){
            context2.response.headers.set(key1, value3);
        }
        this.addEventListener("close", ()=>{
            this.#closed = true;
            if (this.#keepAliveId != null) {
                clearInterval(this.#keepAliveId);
                this.#keepAliveId = undefined;
            }
            if (this.#controller) {
                try {
                    this.#controller.close();
                } catch  {
                }
            }
        });
        if (keepAlive) {
            const interval = typeof keepAlive === "number" ? keepAlive : 30000;
            this.#keepAliveId = setInterval(()=>{
                this.dispatchComment("keep-alive comment");
            }, interval);
        }
    }
    close() {
        this.dispatchEvent(new CloseEvent1({
            cancelable: false
        }));
        return Promise.resolve();
    }
    dispatchComment(comment) {
        this.#push(`: ${comment.split("\n").join("\n: ")}\n\n`);
        return true;
    }
    dispatchMessage(data) {
        const event = new ServerSentEvent("__message", data);
        return this.dispatchEvent(event);
    }
    dispatchEvent(event) {
        const dispatched = super.dispatchEvent(event);
        if (dispatched && event instanceof ServerSentEvent) {
            this.#push(String(event));
        }
        return dispatched;
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        return `${this.constructor.name} ${inspect({
            "#closed": this.#closed,
            "#context": this.#context
        })}`;
    }
}
class SSEStdLibTarget extends EventTarget {
    #app;
    #closed = false;
    #keepAliveId;
    #prev = Promise.resolve();
    #ready;
    #serverRequest;
    #writer;
    async #send(payload, prev) {
        if (this.#closed) {
            return;
        }
        if (this.#ready !== true) {
            await this.#ready;
            this.#ready = true;
        }
        try {
            await prev;
            await this.#writer.write(encoder6.encode(payload));
            await this.#writer.flush();
        } catch (error) {
            this.dispatchEvent(new CloseEvent1({
                cancelable: false
            }));
            const errorEvent = new ErrorEvent("error", {
                error
            });
            this.dispatchEvent(errorEvent);
            this.#app.dispatchEvent(errorEvent);
        }
    }
    async #setup(overrideHeaders) {
        const headers1 = new Headers(responseHeaders);
        if (overrideHeaders) {
            for (const [key2, value4] of overrideHeaders){
                headers1.set(key2, value4);
            }
        }
        let payload = response2;
        for (const [key2, value4] of headers1){
            payload += `${key2}: ${value4}\n`;
        }
        payload += `\n`;
        try {
            await this.#writer.write(encoder6.encode(payload));
            await this.#writer.flush();
        } catch (error) {
            this.dispatchEvent(new CloseEvent1({
                cancelable: false
            }));
            const errorEvent = new ErrorEvent("error", {
                error
            });
            this.dispatchEvent(errorEvent);
            this.#app.dispatchEvent(errorEvent);
            throw error;
        }
    }
    get closed() {
        return this.#closed;
    }
    constructor(context1, { headers: headers1 , keepAlive: keepAlive1 = false  } = {
    }){
        super();
        this.#app = context1.app;
        assert1(!(context1.request.originalRequest instanceof NativeRequest));
        this.#serverRequest = context1.request.originalRequest;
        this.#writer = this.#serverRequest.w;
        this.addEventListener("close", ()=>{
            this.#closed = true;
            if (this.#keepAliveId != null) {
                clearInterval(this.#keepAliveId);
                this.#keepAliveId = undefined;
            }
            try {
                this.#serverRequest.conn.close();
            } catch (error) {
                if (!(error instanceof Deno.errors.BadResource)) {
                    const errorEvent = new ErrorEvent("error", {
                        error
                    });
                    this.dispatchEvent(errorEvent);
                    this.#app.dispatchEvent(errorEvent);
                }
            }
        });
        if (keepAlive1) {
            const interval = typeof keepAlive1 === "number" ? keepAlive1 : 30000;
            this.#keepAliveId = setInterval(()=>{
                this.dispatchComment("keep-alive comment");
            }, interval);
        }
        this.#ready = this.#setup(headers1);
    }
    async close() {
        if (this.#ready !== true) {
            await this.#ready;
        }
        await this.#prev;
        this.dispatchEvent(new CloseEvent1({
            cancelable: false
        }));
    }
    dispatchComment(comment) {
        this.#prev = this.#send(`: ${comment.split("\n").join("\n: ")}\n\n`, this.#prev);
        return true;
    }
    dispatchMessage(data) {
        const event = new ServerSentEvent("__message", data);
        return this.dispatchEvent(event);
    }
    dispatchEvent(event) {
        const dispatched = super.dispatchEvent(event);
        if (dispatched && event instanceof ServerSentEvent) {
            this.#prev = this.#send(String(event), this.#prev);
        }
        return dispatched;
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        return `${this.constructor.name} ${inspect({
            "closed": this.closed
        })}`;
    }
}
class WebSocketShim extends EventTarget {
    #binaryType = "blob";
    #protocol = "";
    #readyState = WebSocket.CONNECTING;
    #socket;
    #url;
    #wasClean = false;
     #getBinaryData(data) {
        if (this.#binaryType === "arraybuffer") {
            return data.buffer;
        }
        return new Blob([
            data
        ]);
    }
     #listen() {
        queueMicrotask(async ()=>{
            for await (const event of this.#socket){
                if (this.#readyState === WebSocket.CONNECTING) {
                    this.#readyState = WebSocket.OPEN;
                    this.dispatchEvent(new Event("open", {
                        cancelable: false
                    }));
                }
                if (this.#readyState === WebSocket.CLOSING && !isWebSocketCloseEvent(event)) {
                    const error = new Error("Received an event while closing.");
                    this.dispatchEvent(new ErrorEvent("error", {
                        error,
                        cancelable: false
                    }));
                }
                if (isWebSocketCloseEvent(event)) {
                    this.#readyState = WebSocket.CLOSED;
                    const { code , reason  } = event;
                    const wasClean = this.#wasClean;
                    this.dispatchEvent(new CloseEvent("close", {
                        code,
                        reason,
                        wasClean,
                        cancelable: false
                    }));
                    return;
                } else if (isWebSocketPingEvent(event) || isWebSocketPongEvent(event)) {
                    const [type4, data3] = event;
                    this.dispatchEvent(new MessageEvent("message", {
                        data: type4,
                        cancelable: false
                    }));
                    this.dispatchEvent(new MessageEvent("message", {
                        data: data3,
                        cancelable: false
                    }));
                } else {
                    const data3 = typeof event === "string" ? event : this.#getBinaryData(event);
                    this.dispatchEvent(new MessageEvent("message", {
                        data: data3,
                        cancelable: false
                    }));
                }
                if (this.#readyState === WebSocket.CLOSED) {
                    return;
                }
            }
        });
    }
    get binaryType() {
        return this.#binaryType;
    }
    set binaryType(value) {
        this.#binaryType = value;
    }
    get bufferedAmount() {
        return 0;
    }
    get extensions() {
        return "";
    }
    onclose = null;
    onerror = null;
    onmessage = null;
    onopen = null;
    get protocol() {
        return this.#protocol;
    }
    get readyState() {
        return this.#readyState;
    }
    get url() {
        return this.#url;
    }
    constructor(socket, url1, protocol3 = ""){
        super();
        this.#protocol = protocol3;
        this.#socket = socket;
        this.#url = url1;
        this.#listen();
    }
    close(code, reason) {
        queueMicrotask(async ()=>{
            try {
                this.#readyState = WebSocket.CLOSING;
                await this.#socket.close(code, reason);
                this.#wasClean = true;
            } catch (error) {
                this.dispatchEvent(new ErrorEvent("error", {
                    error
                }));
            }
        });
    }
    send(data) {
        queueMicrotask(async ()=>{
            try {
                let d;
                if (typeof data === "string") {
                    d = data;
                } else if (data instanceof Blob) {
                    d = new Uint8Array(await data.arrayBuffer());
                } else if (ArrayBuffer.isView(data)) {
                    d = new Uint8Array(data.buffer);
                } else {
                    d = new Uint8Array(data);
                }
                await this.#socket.send(d);
            } catch (error) {
                this.dispatchEvent(new ErrorEvent("error", {
                    error,
                    cancelable: false
                }));
            }
        });
    }
    dispatchEvent(event) {
        if (event.type === "error" && this.onerror) {
            this.onerror.call(this, event);
        } else if (event.type === "close" && event instanceof CloseEvent && this.onclose) {
            this.onclose.call(this, event);
        } else if (event.type === "message" && event instanceof MessageEvent && this.onmessage) {
            this.onmessage.call(this, event);
        } else if (event.type === "open" && this.onopen) {
            this.onopen.call(this, event);
        }
        if (!event.defaultPrevented) {
            return super.dispatchEvent(event);
        } else {
            return false;
        }
    }
    get CLOSED() {
        return WebSocket.CLOSED;
    }
    get CLOSING() {
        return WebSocket.CLOSING;
    }
    get CONNECTING() {
        return WebSocket.CONNECTING;
    }
    get OPEN() {
        return WebSocket.OPEN;
    }
}
class Context {
    #socket;
    #sse;
    app;
    cookies;
    get isUpgradable() {
        return acceptable(this.request);
    }
    respond;
    request;
    response;
    get socket() {
        return this.#socket;
    }
    state;
    constructor(app2, serverRequest1, state1, secure2 = false){
        this.app = app2;
        this.state = state1;
        this.request = new Request1(serverRequest1, app2.proxy, secure2);
        this.respond = true;
        this.response = new Response1(this.request);
        this.cookies = new Cookies(this.request, this.response, {
            keys: this.app.keys,
            secure: this.request.secure
        });
    }
    assert(condition, errorStatus = 500, message, props) {
        if (condition) {
            return;
        }
        const err = createHttpError(errorStatus, message);
        if (props) {
            Object.assign(err, props);
        }
        throw err;
    }
    send(options) {
        const { path: path1 = this.request.url.pathname , ...sendOptions } = options;
        return send(this, path1, sendOptions);
    }
    sendEvents(options) {
        if (!this.#sse) {
            if (this.request.originalRequest instanceof NativeRequest) {
                this.#sse = new SSEStreamTarget(this, options);
            } else {
                this.respond = false;
                this.#sse = new SSEStdLibTarget(this, options);
            }
        }
        return this.#sse;
    }
    throw(errorStatus, message, props) {
        const err = createHttpError(errorStatus, message);
        if (props) {
            Object.assign(err, props);
        }
        throw err;
    }
    async upgrade(options) {
        if (this.#socket) {
            return this.#socket;
        }
        if (this.request.originalRequest instanceof NativeRequest) {
            this.#socket = this.request.originalRequest.upgrade(options);
        } else {
            const { conn: conn2 , r: bufReader1 , w: bufWriter1 , headers: headers2  } = this.request.originalRequest;
            this.#socket = new WebSocketShim(await acceptWebSocket({
                conn: conn2,
                bufReader: bufReader1,
                bufWriter: bufWriter1,
                headers: headers2
            }), this.request.url.toString(), options?.protocol);
        }
        this.respond = false;
        return this.#socket;
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        const { app: app3 , cookies , isUpgradable , respond , request: request4 , response: response3 , socket: socket1 , state: state1 ,  } = this;
        return `${this.constructor.name} ${inspect({
            app: app3,
            cookies,
            isUpgradable,
            respond,
            request: request4,
            response: response3,
            socket: socket1,
            state: state1
        })}`;
    }
}
class HttpServerStd {
    #options;
    #server;
    constructor(_app, options4){
        this.#options = options4;
    }
    close() {
        if (this.#server) {
            this.#server.close();
        }
    }
    listen() {
        this.#server = isListenTlsOptions(this.#options) ? serveTLS(this.#options) : serve(this.#options);
        return this.#server.listener;
    }
    [Symbol.asyncIterator]() {
        assert1(this.#server);
        return this.#server[Symbol.asyncIterator]();
    }
}
function compareArrayBuffer(a, b) {
    assert1(a.byteLength === b.byteLength, "ArrayBuffer lengths must match.");
    const va = new DataView(a);
    const vb = new DataView(b);
    const length = va.byteLength;
    let out = 0;
    let i = -1;
    while(++i < length){
        out |= va.getUint8(i) ^ vb.getUint8(i);
    }
    return out === 0;
}
async function compare(a, b) {
    const key2 = new Uint8Array(32);
    globalThis.crypto.getRandomValues(key2);
    const cryptoKey = await importKey(key2);
    const ah = await sign(a, cryptoKey);
    const bh = await sign(b, cryptoKey);
    return compareArrayBuffer(ah, bh);
}
class KeyStack {
    #cryptoKeys = new Map();
    #keys;
    async #toCryptoKey(key) {
        if (!this.#cryptoKeys.has(key)) {
            this.#cryptoKeys.set(key, await importKey(key));
        }
        return this.#cryptoKeys.get(key);
    }
    get length() {
        return this.#keys.length;
    }
    constructor(keys1){
        if (!(0 in keys1)) {
            throw new TypeError("keys must contain at least one value");
        }
        this.#keys = keys1;
    }
    async sign(data) {
        const key3 = await this.#toCryptoKey(this.#keys[0]);
        return encodeBase64Safe(await sign(data, key3));
    }
    async verify(data, digest) {
        return await this.indexOf(data, digest) > -1;
    }
    async indexOf(data, digest) {
        for(let i = 0; i < this.#keys.length; i++){
            const cryptoKey = await this.#toCryptoKey(this.#keys[i]);
            if (await compare(digest, encodeBase64Safe(await sign(data, cryptoKey)))) {
                return i;
            }
        }
        return -1;
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        return `${this.constructor.name} ${inspect({
            length: this.length
        })}`;
    }
}
function compose(middleware) {
    return function composedMiddleware(context2, next) {
        let index = -1;
        async function dispatch(i) {
            if (i <= index) {
                throw new Error("next() called multiple times.");
            }
            index = i;
            let fn = middleware[i];
            if (i === middleware.length) {
                fn = next;
            }
            if (!fn) {
                return;
            }
            await fn(context2, dispatch.bind(null, i + 1));
        }
        return dispatch(0);
    };
}
const objectCloneMemo = new WeakMap();
function cloneArrayBuffer(srcBuffer, srcByteOffset, srcLength, _cloneConstructor) {
    return srcBuffer.slice(srcByteOffset, srcByteOffset + srcLength);
}
function cloneValue(value4) {
    switch(typeof value4){
        case "number":
        case "string":
        case "boolean":
        case "undefined":
        case "bigint":
            return value4;
        case "object":
            {
                if (objectCloneMemo.has(value4)) {
                    return objectCloneMemo.get(value4);
                }
                if (value4 === null) {
                    return value4;
                }
                if (value4 instanceof Date) {
                    return new Date(value4.valueOf());
                }
                if (value4 instanceof RegExp) {
                    return new RegExp(value4);
                }
                if (value4 instanceof SharedArrayBuffer) {
                    return value4;
                }
                if (value4 instanceof ArrayBuffer) {
                    const cloned = cloneArrayBuffer(value4, 0, value4.byteLength, ArrayBuffer);
                    objectCloneMemo.set(value4, cloned);
                    return cloned;
                }
                if (ArrayBuffer.isView(value4)) {
                    const clonedBuffer = cloneValue(value4.buffer);
                    let length;
                    if (value4 instanceof DataView) {
                        length = value4.byteLength;
                    } else {
                        length = value4.length;
                    }
                    return new value4.constructor(clonedBuffer, value4.byteOffset, length);
                }
                if (value4 instanceof Map) {
                    const clonedMap = new Map();
                    objectCloneMemo.set(value4, clonedMap);
                    value4.forEach((v, k)=>{
                        clonedMap.set(cloneValue(k), cloneValue(v));
                    });
                    return clonedMap;
                }
                if (value4 instanceof Set) {
                    const clonedSet = new Set([
                        ...value4
                    ].map(cloneValue));
                    objectCloneMemo.set(value4, clonedSet);
                    return clonedSet;
                }
                const clonedObj = {
                };
                objectCloneMemo.set(value4, clonedObj);
                const sourceKeys = Object.getOwnPropertyNames(value4);
                for (const key3 of sourceKeys){
                    clonedObj[key3] = cloneValue(value4[key3]);
                }
                Reflect.setPrototypeOf(clonedObj, Reflect.getPrototypeOf(value4));
                return clonedObj;
            }
        case "symbol":
        case "function":
        default:
            throw new DOMException("Uncloneable value in stream", "DataCloneError");
    }
}
const core = Deno?.core;
const structuredClone = globalThis.structuredClone;
function sc(value4) {
    return structuredClone ? structuredClone(value4) : core ? core.deserialize(core.serialize(value4)) : cloneValue(value4);
}
function cloneState(state1) {
    const clone = {
    };
    for (const [key3, value4] of Object.entries(state1)){
        try {
            const clonedValue = sc(value4);
            clone[key3] = clonedValue;
        } catch  {
        }
    }
    return clone;
}
const ADDR_REGEXP = /^\[?([^\]]*)\]?:([0-9]{1,5})$/;
class ApplicationErrorEvent extends ErrorEvent {
    context;
    constructor(eventInitDict){
        super("error", eventInitDict);
        this.context = eventInitDict.context;
    }
}
function logErrorListener({ error , context: context3  }) {
    if (error instanceof Error) {
        console.error(`[uncaught oak error]: ${error.name} - ${error.message}`);
    } else {
        console.error(`[uncaught oak error]\n`, error);
    }
    if (context3) {
        let url1;
        try {
            url1 = context3.request.url.toString();
        } catch  {
            url1 = "[malformed url]";
        }
        console.error(`\nrequest:`, {
            url: url1,
            method: context3.request.method,
            hasBody: context3.request.hasBody
        });
        console.error(`response:`, {
            status: context3.response.status,
            type: context3.response.type,
            hasBody: !!context3.response.body,
            writable: context3.response.writable
        });
    }
    if (error instanceof Error && error.stack) {
        console.error(`\n${error.stack.split("\n").slice(1).join("\n")}`);
    }
}
class ApplicationListenEvent extends Event {
    hostname;
    listener;
    port;
    secure;
    serverType;
    constructor(eventInitDict1){
        super("listen", eventInitDict1);
        this.hostname = eventInitDict1.hostname;
        this.listener = eventInitDict1.listener;
        this.port = eventInitDict1.port;
        this.secure = eventInitDict1.secure;
        this.serverType = eventInitDict1.serverType;
    }
}
class Application extends EventTarget {
    #composedMiddleware;
    #contextState;
    #eventHandler;
    #keys;
    #middleware = [];
    #serverConstructor;
    get keys() {
        return this.#keys;
    }
    set keys(keys) {
        if (!keys) {
            this.#keys = undefined;
            return;
        } else if (Array.isArray(keys)) {
            this.#keys = new KeyStack(keys);
        } else {
            this.#keys = keys;
        }
    }
    proxy;
    state;
    constructor(options5 = {
    }){
        super();
        const { state: state2 , keys: keys3 , proxy: proxy2 , serverConstructor =hasNativeHttp() ? HttpServerNative : HttpServerStd , contextState ="clone" , logErrors =true ,  } = options5;
        this.proxy = proxy2 ?? false;
        this.keys = keys3;
        this.state = state2 ?? {
        };
        this.#serverConstructor = serverConstructor;
        this.#contextState = contextState;
        if (logErrors) {
            this.addEventListener("error", logErrorListener);
        }
    }
     #getComposed() {
        if (!this.#composedMiddleware) {
            this.#composedMiddleware = compose(this.#middleware);
        }
        return this.#composedMiddleware;
    }
     #getContextState() {
        switch(this.#contextState){
            case "alias":
                return this.state;
            case "clone":
                return cloneState(this.state);
            case "empty":
                return {
                };
            case "prototype":
                return Object.create(this.state);
        }
    }
     #handleError(context, error) {
        if (!(error instanceof Error)) {
            error = new Error(`non-error thrown: ${JSON.stringify(error)}`);
        }
        const { message: message3  } = error;
        this.dispatchEvent(new ApplicationErrorEvent({
            context,
            message: message3,
            error
        }));
        if (!context.response.writable) {
            return;
        }
        for (const key3 of [
            ...context.response.headers.keys()
        ]){
            context.response.headers.delete(key3);
        }
        if (error.headers && error.headers instanceof Headers) {
            for (const [key4, value4] of error.headers){
                context.response.headers.set(key4, value4);
            }
        }
        context.response.type = "text";
        const status = context.response.status = Deno.errors && error instanceof Deno.errors.NotFound ? 404 : error.status && typeof error.status === "number" ? error.status : 500;
        context.response.body = error.expose ? error.message : STATUS_TEXT.get(status);
    }
    async #handleRequest(request, secure, state) {
        const context3 = new Context(this, request, this.#getContextState(), secure);
        let resolve3;
        const handlingPromise = new Promise((res)=>resolve3 = res
        );
        state.handling.add(handlingPromise);
        if (!state.closing && !state.closed) {
            try {
                await this.#getComposed()(context3);
            } catch (err) {
                this.#handleError(context3, err);
            }
        }
        if (context3.respond === false) {
            context3.response.destroy();
            resolve3();
            state.handling.delete(handlingPromise);
            return;
        }
        let closeResources = true;
        let response3;
        try {
            if (request instanceof NativeRequest) {
                closeResources = false;
                response3 = await context3.response.toDomResponse();
            } else {
                response3 = await context3.response.toServerResponse();
            }
        } catch (err) {
            this.#handleError(context3, err);
            if (request instanceof NativeRequest) {
                response3 = await context3.response.toDomResponse();
            } else {
                response3 = await context3.response.toServerResponse();
            }
        }
        assert1(response3);
        try {
            await request.respond(response3);
        } catch (err) {
            this.#handleError(context3, err);
        } finally{
            context3.response.destroy(closeResources);
            resolve3();
            state.handling.delete(handlingPromise);
            if (state.closing) {
                state.server.close();
                state.closed = true;
            }
        }
    }
    addEventListener(type, listener, options) {
        super.addEventListener(type, listener, options);
    }
    fetchEventHandler({ proxy =true , secure =true  } = {
    }) {
        if (this.#eventHandler) {
            return this.#eventHandler;
        }
        this.proxy = proxy;
        return this.#eventHandler = {
            handleEvent: async (requestEvent1)=>{
                let resolve3;
                let reject;
                const responsePromise = new Promise((res, rej)=>{
                    resolve3 = res;
                    reject = rej;
                });
                const respondedPromise = requestEvent1.respondWith(responsePromise);
                const response3 = await this.handle(requestEvent1.request, undefined, secure);
                if (response3) {
                    resolve3(response3);
                } else {
                    reject(new Error("No response returned from app handler."));
                }
                try {
                    await respondedPromise;
                } catch (error) {
                    this.dispatchEvent(new ApplicationErrorEvent({
                        error
                    }));
                }
            }
        };
    }
    handle = async (request4, secureOrConn, secure4 = false)=>{
        if (!this.#middleware.length) {
            throw new TypeError("There is no middleware to process requests.");
        }
        let contextRequest;
        if (request4 instanceof Request) {
            assert1(isConn(secureOrConn) || typeof secureOrConn === "undefined");
            contextRequest = new NativeRequest({
                request: request4,
                respondWith () {
                    return Promise.resolve(undefined);
                }
            }, {
                conn: secureOrConn
            });
        } else {
            assert1(typeof secureOrConn === "boolean" || typeof secureOrConn === "undefined");
            secure4 = secureOrConn ?? false;
            contextRequest = request4;
        }
        const context3 = new Context(this, contextRequest, this.#getContextState(), secure4);
        try {
            await this.#getComposed()(context3);
        } catch (err) {
            this.#handleError(context3, err);
        }
        if (context3.respond === false) {
            context3.response.destroy();
            return;
        }
        try {
            const response3 = contextRequest instanceof NativeRequest ? await context3.response.toDomResponse() : await context3.response.toServerResponse();
            context3.response.destroy(false);
            return response3;
        } catch (err) {
            this.#handleError(context3, err);
            throw err;
        }
    };
    async listen(options) {
        if (!this.#middleware.length) {
            throw new TypeError("There is no middleware to process requests.");
        }
        if (typeof options === "string") {
            const match = ADDR_REGEXP.exec(options);
            if (!match) {
                throw TypeError(`Invalid address passed: "${options}"`);
            }
            const [, hostname, portStr] = match;
            options = {
                hostname,
                port: parseInt(portStr, 10)
            };
        }
        const server = new this.#serverConstructor(this, options);
        const { signal  } = options;
        const state3 = {
            closed: false,
            closing: false,
            handling: new Set(),
            server
        };
        if (signal) {
            signal.addEventListener("abort", ()=>{
                if (!state3.handling.size) {
                    server.close();
                    state3.closed = true;
                }
                state3.closing = true;
            });
        }
        const { secure: secure4 = false  } = options;
        const serverType = server instanceof HttpServerStd ? "std" : server instanceof HttpServerNative ? "native" : "custom";
        const listener2 = server.listen();
        const { hostname , port  } = listener2.addr;
        this.dispatchEvent(new ApplicationListenEvent({
            hostname,
            listener: listener2,
            port,
            secure: secure4,
            serverType
        }));
        try {
            for await (const request4 of server){
                this.#handleRequest(request4, secure4, state3);
            }
            await Promise.all(state3.handling);
        } catch (error) {
            const message3 = error instanceof Error ? error.message : "Application Error";
            this.dispatchEvent(new ApplicationErrorEvent({
                message: message3,
                error
            }));
        }
    }
    use(...middleware) {
        this.#middleware.push(...middleware);
        this.#composedMiddleware = undefined;
        return this;
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        const { keys: keys4 , proxy: proxy3 , state: state3  } = this;
        return `${this.constructor.name} ${inspect({
            "#middleware": this.#middleware,
            keys: keys4,
            proxy: proxy3,
            state: state3
        })}`;
    }
}
function toUrl(url1, params = {
}, options6) {
    const tokens = parse3(url1);
    let replace = {
    };
    if (tokens.some((token)=>typeof token === "object"
    )) {
        replace = params;
    } else {
        options6 = params;
    }
    const toPath = compile(url1, options6);
    const replaced = toPath(replace);
    if (options6 && options6.query) {
        const url2 = new URL(replaced, "http://oak");
        if (typeof options6.query === "string") {
            url2.search = options6.query;
        } else {
            url2.search = String(options6.query instanceof URLSearchParams ? options6.query : new URLSearchParams(options6.query));
        }
        return `${url2.pathname}${url2.search}${url2.hash}`;
    }
    return replaced;
}
class Layer {
    #opts;
    #paramNames = [];
    #regexp;
    methods;
    name;
    path;
    stack;
    constructor(path2, methods1, middleware1, { name: name2 , ...opts } = {
    }){
        this.#opts = opts;
        this.name = name2;
        this.methods = [
            ...methods1
        ];
        if (this.methods.includes("GET")) {
            this.methods.unshift("HEAD");
        }
        this.stack = Array.isArray(middleware1) ? middleware1.slice() : [
            middleware1
        ];
        this.path = path2;
        this.#regexp = pathToRegexp(path2, this.#paramNames, this.#opts);
    }
    clone() {
        return new Layer(this.path, this.methods, this.stack, {
            name: this.name,
            ...this.#opts
        });
    }
    match(path) {
        return this.#regexp.test(path);
    }
    params(captures, existingParams = {
    }) {
        const params = existingParams;
        for(let i = 0; i < captures.length; i++){
            if (this.#paramNames[i]) {
                const c = captures[i];
                params[this.#paramNames[i].name] = c ? decodeComponent(c) : c;
            }
        }
        return params;
    }
    captures(path) {
        if (this.#opts.ignoreCaptures) {
            return [];
        }
        return path.match(this.#regexp)?.slice(1) ?? [];
    }
    url(params = {
    }, options) {
        const url1 = this.path.replace(/\(\.\*\)/g, "");
        return toUrl(url1, params, options);
    }
    param(param, fn) {
        const stack = this.stack;
        const params = this.#paramNames;
        const middleware1 = function(ctx, next) {
            const p2 = ctx.params[param];
            assert1(p2);
            return fn.call(this, p2, ctx, next);
        };
        middleware1.param = param;
        const names = params.map((p2)=>p2.name
        );
        const x = names.indexOf(param);
        if (x >= 0) {
            for(let i = 0; i < stack.length; i++){
                const fn = stack[i];
                if (!fn.param || names.indexOf(fn.param) > x) {
                    stack.splice(i, 0, middleware1);
                    break;
                }
            }
        }
        return this;
    }
    setPrefix(prefix) {
        if (this.path) {
            this.path = this.path !== "/" || this.#opts.strict === true ? `${prefix}${this.path}` : prefix;
            this.#paramNames = [];
            this.#regexp = pathToRegexp(this.path, this.#paramNames, this.#opts);
        }
        return this;
    }
    toJSON() {
        return {
            methods: [
                ...this.methods
            ],
            middleware: [
                ...this.stack
            ],
            paramNames: this.#paramNames.map((key3)=>key3.name
            ),
            path: this.path,
            regexp: this.#regexp,
            options: {
                ...this.#opts
            }
        };
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        return `${this.constructor.name} ${inspect({
            methods: this.methods,
            middleware: this.stack,
            options: this.#opts,
            paramNames: this.#paramNames.map((key3)=>key3.name
            ),
            path: this.path,
            regexp: this.#regexp
        })}`;
    }
}
class Router {
    #opts;
    #methods;
    #params = {
    };
    #stack = [];
     #match(path, method) {
        const matches1 = {
            path: [],
            pathAndMethod: [],
            route: false
        };
        for (const route of this.#stack){
            if (route.match(path)) {
                matches1.path.push(route);
                if (route.methods.length === 0 || route.methods.includes(method)) {
                    matches1.pathAndMethod.push(route);
                    if (route.methods.length) {
                        matches1.route = true;
                    }
                }
            }
        }
        return matches1;
    }
     #register(path, middlewares, methods, options = {
    }) {
        if (Array.isArray(path)) {
            for (const p2 of path){
                this.#register(p2, middlewares, methods, options);
            }
            return;
        }
        let layerMiddlewares = [];
        for (const middleware1 of middlewares){
            if (!middleware1.router) {
                layerMiddlewares.push(middleware1);
                continue;
            }
            if (layerMiddlewares.length) {
                this.#addLayer(path, layerMiddlewares, methods, options);
                layerMiddlewares = [];
            }
            const router = middleware1.router.#clone();
            for (const layer of router.#stack){
                if (!options.ignorePrefix) {
                    layer.setPrefix(path);
                }
                if (this.#opts.prefix) {
                    layer.setPrefix(this.#opts.prefix);
                }
                this.#stack.push(layer);
            }
            for (const [param, mw] of Object.entries(this.#params)){
                router.param(param, mw);
            }
        }
        if (layerMiddlewares.length) {
            this.#addLayer(path, layerMiddlewares, methods, options);
        }
    }
     #addLayer(path, middlewares, methods, options = {
    }) {
        const { end , name: name3 , sensitive =this.#opts.sensitive , strict =this.#opts.strict , ignoreCaptures ,  } = options;
        const route = new Layer(path, methods, middlewares, {
            end,
            name: name3,
            sensitive,
            strict,
            ignoreCaptures
        });
        if (this.#opts.prefix) {
            route.setPrefix(this.#opts.prefix);
        }
        for (const [param, mw] of Object.entries(this.#params)){
            route.param(param, mw);
        }
        this.#stack.push(route);
    }
     #route(name) {
        for (const route of this.#stack){
            if (route.name === name) {
                return route;
            }
        }
    }
     #useVerb(nameOrPath, pathOrMiddleware, middleware, methods) {
        let name3 = undefined;
        let path3;
        if (typeof pathOrMiddleware === "string") {
            name3 = nameOrPath;
            path3 = pathOrMiddleware;
        } else {
            path3 = nameOrPath;
            middleware.unshift(pathOrMiddleware);
        }
        this.#register(path3, middleware, methods, {
            name: name3
        });
    }
     #clone() {
        const router = new Router(this.#opts);
        router.#methods = router.#methods.slice();
        router.#params = {
            ...this.#params
        };
        router.#stack = this.#stack.map((layer)=>layer.clone()
        );
        return router;
    }
    constructor(opts1 = {
    }){
        this.#opts = opts1;
        this.#methods = opts1.methods ?? [
            "DELETE",
            "GET",
            "HEAD",
            "OPTIONS",
            "PATCH",
            "POST",
            "PUT", 
        ];
    }
    all(nameOrPath, pathOrMiddleware, ...middleware) {
        this.#useVerb(nameOrPath, pathOrMiddleware, middleware, [
            "DELETE",
            "GET",
            "POST",
            "PUT"
        ]);
        return this;
    }
    allowedMethods(options = {
    }) {
        const implemented = this.#methods;
        const allowedMethods = async (context3, next)=>{
            const ctx = context3;
            await next();
            if (!ctx.response.status || ctx.response.status === Status.NotFound) {
                assert1(ctx.matched);
                const allowed = new Set();
                for (const route of ctx.matched){
                    for (const method of route.methods){
                        allowed.add(method);
                    }
                }
                const allowedStr = [
                    ...allowed
                ].join(", ");
                if (!implemented.includes(ctx.request.method)) {
                    if (options.throw) {
                        throw options.notImplemented ? options.notImplemented() : new httpErrors.NotImplemented();
                    } else {
                        ctx.response.status = Status.NotImplemented;
                        ctx.response.headers.set("Allowed", allowedStr);
                    }
                } else if (allowed.size) {
                    if (ctx.request.method === "OPTIONS") {
                        ctx.response.status = Status.OK;
                        ctx.response.headers.set("Allowed", allowedStr);
                    } else if (!allowed.has(ctx.request.method)) {
                        if (options.throw) {
                            throw options.methodNotAllowed ? options.methodNotAllowed() : new httpErrors.MethodNotAllowed();
                        } else {
                            ctx.response.status = Status.MethodNotAllowed;
                            ctx.response.headers.set("Allowed", allowedStr);
                        }
                    }
                }
            }
        };
        return allowedMethods;
    }
    delete(nameOrPath, pathOrMiddleware, ...middleware) {
        this.#useVerb(nameOrPath, pathOrMiddleware, middleware, [
            "DELETE"
        ]);
        return this;
    }
    *entries() {
        for (const route of this.#stack){
            const value4 = route.toJSON();
            yield [
                value4,
                value4
            ];
        }
    }
    forEach(callback, thisArg = null) {
        for (const route of this.#stack){
            const value4 = route.toJSON();
            callback.call(thisArg, value4, value4, this);
        }
    }
    get(nameOrPath, pathOrMiddleware, ...middleware) {
        this.#useVerb(nameOrPath, pathOrMiddleware, middleware, [
            "GET"
        ]);
        return this;
    }
    head(nameOrPath, pathOrMiddleware, ...middleware) {
        this.#useVerb(nameOrPath, pathOrMiddleware, middleware, [
            "HEAD"
        ]);
        return this;
    }
    *keys() {
        for (const route of this.#stack){
            yield route.toJSON();
        }
    }
    options(nameOrPath, pathOrMiddleware, ...middleware) {
        this.#useVerb(nameOrPath, pathOrMiddleware, middleware, [
            "OPTIONS"
        ]);
        return this;
    }
    param(param, middleware) {
        this.#params[param] = middleware;
        for (const route of this.#stack){
            route.param(param, middleware);
        }
        return this;
    }
    patch(nameOrPath, pathOrMiddleware, ...middleware) {
        this.#useVerb(nameOrPath, pathOrMiddleware, middleware, [
            "PATCH"
        ]);
        return this;
    }
    post(nameOrPath, pathOrMiddleware, ...middleware) {
        this.#useVerb(nameOrPath, pathOrMiddleware, middleware, [
            "POST"
        ]);
        return this;
    }
    prefix(prefix) {
        prefix = prefix.replace(/\/$/, "");
        this.#opts.prefix = prefix;
        for (const route of this.#stack){
            route.setPrefix(prefix);
        }
        return this;
    }
    put(nameOrPath, pathOrMiddleware, ...middleware) {
        this.#useVerb(nameOrPath, pathOrMiddleware, middleware, [
            "PUT"
        ]);
        return this;
    }
    redirect(source, destination, status = Status.Found) {
        if (source[0] !== "/") {
            const s1 = this.url(source);
            if (!s1) {
                throw new RangeError(`Could not resolve named route: "${source}"`);
            }
            source = s1;
        }
        if (typeof destination === "string") {
            if (destination[0] !== "/") {
                const d = this.url(destination);
                if (!d) {
                    try {
                        const url1 = new URL(destination);
                        destination = url1;
                    } catch  {
                        throw new RangeError(`Could not resolve named route: "${source}"`);
                    }
                } else {
                    destination = d;
                }
            }
        }
        this.all(source, async (ctx, next)=>{
            await next();
            ctx.response.redirect(destination);
            ctx.response.status = status;
        });
        return this;
    }
    routes() {
        const dispatch = (context3, next)=>{
            const ctx = context3;
            let pathname;
            let method;
            try {
                const { url: { pathname: p2  } , method: m  } = ctx.request;
                pathname = p2;
                method = m;
            } catch (e) {
                return Promise.reject(e);
            }
            const path3 = (this.#opts.routerPath ?? ctx.routerPath) ?? decodeURIComponent(pathname);
            const matches1 = this.#match(path3, method);
            if (ctx.matched) {
                ctx.matched.push(...matches1.path);
            } else {
                ctx.matched = [
                    ...matches1.path
                ];
            }
            ctx.router = this;
            if (!matches1.route) return next();
            const { pathAndMethod: matchedRoutes  } = matches1;
            const chain = matchedRoutes.reduce((prev, route)=>[
                    ...prev,
                    (ctx1, next1)=>{
                        ctx1.captures = route.captures(path3);
                        ctx1.params = route.params(ctx1.captures, ctx1.params);
                        ctx1.routeName = route.name;
                        return next1();
                    },
                    ...route.stack, 
                ]
            , []);
            return compose(chain)(ctx, next);
        };
        dispatch.router = this;
        return dispatch;
    }
    url(name, params, options) {
        const route = this.#route(name);
        if (route) {
            return route.url(params, options);
        }
    }
    use(pathOrMiddleware, ...middleware) {
        let path3;
        if (typeof pathOrMiddleware === "string" || Array.isArray(pathOrMiddleware)) {
            path3 = pathOrMiddleware;
        } else {
            middleware.unshift(pathOrMiddleware);
        }
        this.#register(path3 ?? "(.*)", middleware, [], {
            end: false,
            ignoreCaptures: !path3,
            ignorePrefix: !path3
        });
        return this;
    }
    *values() {
        for (const route of this.#stack){
            yield route.toJSON();
        }
    }
    *[Symbol.iterator]() {
        for (const route of this.#stack){
            yield route.toJSON();
        }
    }
    static url(path, params, options) {
        return toUrl(path, params, options);
    }
    [Symbol.for("Deno.customInspect")](inspect) {
        return `${this.constructor.name} ${inspect({
            "#params": this.#params,
            "#stack": this.#stack
        })}`;
    }
}
function removeEmptyValues(obj) {
    return Object.fromEntries(Object.entries(obj).filter(([, value4])=>{
        if (value4 === null) return false;
        if (value4 === undefined) return false;
        if (value4 === "") return false;
        return true;
    }));
}
function difference(arrA, arrB) {
    return arrA.filter((a)=>arrB.indexOf(a) < 0
    );
}
function parse5(rawDotenv) {
    const env = {
    };
    for (const line of rawDotenv.split("\n")){
        if (!isVariableStart(line)) continue;
        const key3 = line.slice(0, line.indexOf("=")).trim();
        let value4 = line.slice(line.indexOf("=") + 1).trim();
        if (hasSingleQuotes(value4)) {
            value4 = value4.slice(1, -1);
        } else if (hasDoubleQuotes(value4)) {
            value4 = value4.slice(1, -1);
            value4 = expandNewlines(value4);
        } else value4 = value4.trim();
        env[key3] = value4;
    }
    return env;
}
function config(options6 = {
}) {
    const o = Object.assign({
        path: `.env`,
        export: false,
        safe: false,
        example: `.env.example`,
        allowEmptyValues: false,
        defaults: `.env.defaults`
    }, options6);
    const conf = parseFile(o.path);
    if (o.defaults) {
        const confDefaults = parseFile(o.defaults);
        for(const key3 in confDefaults){
            if (!(key3 in conf)) {
                conf[key3] = confDefaults[key3];
            }
        }
    }
    if (o.safe) {
        const confExample = parseFile(o.example);
        assertSafe(conf, confExample, o.allowEmptyValues);
    }
    if (o.export) {
        for(const key3 in conf){
            if (Deno.env.get(key3) !== undefined) continue;
            Deno.env.set(key3, conf[key3]);
        }
    }
    return conf;
}
function parseFile(filepath) {
    try {
        return parse5(new TextDecoder("utf-8").decode(Deno.readFileSync(filepath)));
    } catch (e) {
        if (e instanceof Deno.errors.NotFound) return {
        };
        throw e;
    }
}
function isVariableStart(str1) {
    return /^\s*[a-zA-Z_][a-zA-Z_0-9 ]*\s*=/.test(str1);
}
function hasSingleQuotes(str1) {
    return /^'([\s\S]*)'$/.test(str1);
}
function hasDoubleQuotes(str1) {
    return /^"([\s\S]*)"$/.test(str1);
}
function expandNewlines(str1) {
    return str1.replaceAll("\\n", "\n");
}
function assertSafe(conf, confExample, allowEmptyValues) {
    const currentEnv = Deno.env.toObject();
    const confWithEnv = Object.assign({
    }, currentEnv, conf);
    const missing = difference(Object.keys(confExample), Object.keys(allowEmptyValues ? confWithEnv : removeEmptyValues(confWithEnv)));
    if (missing.length > 0) {
        const errorMessages = [
            `The following variables were defined in the example file but are not present in the environment:\n  ${missing.join(", ")}`,
            `Make sure to add them to your env file.`,
            !allowEmptyValues && `If you expect any of these variables to be empty, you can set the allowEmptyValues option to true.`, 
        ];
        throw new MissingEnvVarsError(errorMessages.filter(Boolean).join("\n\n"));
    }
}
class MissingEnvVarsError extends Error {
    constructor(message3){
        super(message3);
        this.name = "MissingEnvVarsError";
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
config({
    export: true
});
function translate(values, desiredLanguage) {
    return values.find((item)=>item.language === desiredLanguage
    ) || values.find((item)=>!item.language
    ) || values[0];
}
const DEFAULT_LANGUAGE = "en";
var global$1 = typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {
};
function createCommonjsModule(fn, module) {
    return module = {
        exports: {
        }
    }, fn(module, module.exports), module.exports;
}
var byteLength_1 = byteLength1;
var toByteArray_1 = toByteArray;
var fromByteArray_1 = fromByteArray;
var lookup1 = [];
var revLookup = [];
var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
for(var i8 = 0, len3 = code.length; i8 < len3; ++i8){
    lookup1[i8] = code[i8];
    revLookup[code.charCodeAt(i8)] = i8;
}
revLookup["-".charCodeAt(0)] = 62;
revLookup["_".charCodeAt(0)] = 63;
function getLens(b64) {
    var len1 = b64.length;
    if (len1 % 4 > 0) {
        throw new Error("Invalid string. Length must be a multiple of 4");
    }
    var validLen = b64.indexOf("=");
    if (validLen === -1) validLen = len1;
    var placeHoldersLen = validLen === len1 ? 0 : 4 - validLen % 4;
    return [
        validLen,
        placeHoldersLen
    ];
}
function byteLength1(b64) {
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function _byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function toByteArray(b64) {
    var tmp;
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
    var curByte = 0;
    var len1 = placeHoldersLen > 0 ? validLen - 4 : validLen;
    var i1;
    for(i1 = 0; i1 < len1; i1 += 4){
        tmp = revLookup[b64.charCodeAt(i1)] << 18 | revLookup[b64.charCodeAt(i1 + 1)] << 12 | revLookup[b64.charCodeAt(i1 + 2)] << 6 | revLookup[b64.charCodeAt(i1 + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
    }
    if (placeHoldersLen === 2) {
        tmp = revLookup[b64.charCodeAt(i1)] << 2 | revLookup[b64.charCodeAt(i1 + 1)] >> 4;
        arr[curByte++] = tmp & 255;
    }
    if (placeHoldersLen === 1) {
        tmp = revLookup[b64.charCodeAt(i1)] << 10 | revLookup[b64.charCodeAt(i1 + 1)] << 4 | revLookup[b64.charCodeAt(i1 + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
    }
    return arr;
}
function tripletToBase64(num) {
    return lookup1[num >> 18 & 63] + lookup1[num >> 12 & 63] + lookup1[num >> 6 & 63] + lookup1[num & 63];
}
function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for(var i1 = start; i1 < end; i1 += 3){
        tmp = (uint8[i1] << 16 & 16711680) + (uint8[i1 + 1] << 8 & 65280) + (uint8[i1 + 2] & 255);
        output.push(tripletToBase64(tmp));
    }
    return output.join("");
}
function fromByteArray(uint8) {
    var tmp;
    var len1 = uint8.length;
    var extraBytes = len1 % 3;
    var parts1 = [];
    var maxChunkLength = 16383;
    for(var i1 = 0, len2 = len1 - extraBytes; i1 < len2; i1 += maxChunkLength){
        parts1.push(encodeChunk(uint8, i1, i1 + maxChunkLength > len2 ? len2 : i1 + maxChunkLength));
    }
    if (extraBytes === 1) {
        tmp = uint8[len1 - 1];
        parts1.push(lookup1[tmp >> 2] + lookup1[tmp << 4 & 63] + "==");
    } else if (extraBytes === 2) {
        tmp = (uint8[len1 - 2] << 8) + uint8[len1 - 1];
        parts1.push(lookup1[tmp >> 10] + lookup1[tmp >> 4 & 63] + lookup1[tmp << 2 & 63] + "=");
    }
    return parts1.join("");
}
var base64Js = {
    byteLength: byteLength_1,
    toByteArray: toByteArray_1,
    fromByteArray: fromByteArray_1
};
var read = function read2(buffer2, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i1 = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s1 = buffer2[offset + i1];
    i1 += d;
    e = s1 & (1 << -nBits) - 1;
    s1 >>= -nBits;
    nBits += eLen;
    for(; nBits > 0; e = e * 256 + buffer2[offset + i1], i1 += d, nBits -= 8){
    }
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for(; nBits > 0; m = m * 256 + buffer2[offset + i1], i1 += d, nBits -= 8){
    }
    if (e === 0) {
        e = 1 - eBias;
    } else if (e === eMax) {
        return m ? NaN : (s1 ? -1 : 1) * Infinity;
    } else {
        m = m + Math.pow(2, mLen);
        e = e - eBias;
    }
    return (s1 ? -1 : 1) * m * Math.pow(2, e - mLen);
};
var write = function write2(buffer2, value4, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i1 = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s1 = value4 < 0 || value4 === 0 && 1 / value4 < 0 ? 1 : 0;
    value4 = Math.abs(value4);
    if (isNaN(value4) || value4 === Infinity) {
        m = isNaN(value4) ? 1 : 0;
        e = eMax;
    } else {
        e = Math.floor(Math.log(value4) / Math.LN2);
        if (value4 * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
        }
        if (e + eBias >= 1) {
            value4 += rt / c;
        } else {
            value4 += rt * Math.pow(2, 1 - eBias);
        }
        if (value4 * c >= 2) {
            e++;
            c /= 2;
        }
        if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
        } else if (e + eBias >= 1) {
            m = (value4 * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
        } else {
            m = value4 * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
        }
    }
    for(; mLen >= 8; buffer2[offset + i1] = m & 255, i1 += d, m /= 256, mLen -= 8){
    }
    e = e << mLen | m;
    eLen += mLen;
    for(; eLen > 0; buffer2[offset + i1] = e & 255, i1 += d, e /= 256, eLen -= 8){
    }
    buffer2[offset + i1 - d] |= s1 * 128;
};
var ieee754 = {
    read,
    write
};
var buffer$1 = createCommonjsModule(function(module, exports) {
    var customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
    exports.Buffer = Buffer2;
    exports.SlowBuffer = SlowBuffer;
    exports.INSPECT_MAX_BYTES = 50;
    var K_MAX_LENGTH = 2147483647;
    exports.kMaxLength = K_MAX_LENGTH;
    Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
    if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
        console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    }
    function typedArraySupport() {
        try {
            var arr = new Uint8Array(1);
            var proto = {
                foo: function foo() {
                    return 42;
                }
            };
            Object.setPrototypeOf(proto, Uint8Array.prototype);
            Object.setPrototypeOf(arr, proto);
            return arr.foo() === 42;
        } catch (e) {
            return false;
        }
    }
    Object.defineProperty(Buffer2.prototype, "parent", {
        enumerable: true,
        get: function get() {
            if (!Buffer2.isBuffer(this)) return void 0;
            return this.buffer;
        }
    });
    Object.defineProperty(Buffer2.prototype, "offset", {
        enumerable: true,
        get: function get() {
            if (!Buffer2.isBuffer(this)) return void 0;
            return this.byteOffset;
        }
    });
    function createBuffer(length) {
        if (length > K_MAX_LENGTH) {
            throw new RangeError('The value "' + length + '" is invalid for option "size"');
        }
        var buf = new Uint8Array(length);
        Object.setPrototypeOf(buf, Buffer2.prototype);
        return buf;
    }
    function Buffer2(arg, encodingOrOffset, length) {
        if (typeof arg === "number") {
            if (typeof encodingOrOffset === "string") {
                throw new TypeError('The "string" argument must be of type string. Received type number');
            }
            return allocUnsafe(arg);
        }
        return from(arg, encodingOrOffset, length);
    }
    Buffer2.poolSize = 8192;
    function from(value4, encodingOrOffset, length) {
        if (typeof value4 === "string") {
            return fromString(value4, encodingOrOffset);
        }
        if (ArrayBuffer.isView(value4)) {
            return fromArrayView(value4);
        }
        if (value4 == null) {
            throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + babelHelpers["typeof"](value4));
        }
        if (isInstance(value4, ArrayBuffer) || value4 && isInstance(value4.buffer, ArrayBuffer)) {
            return fromArrayBuffer(value4, encodingOrOffset, length);
        }
        if (typeof SharedArrayBuffer !== "undefined" && (isInstance(value4, SharedArrayBuffer) || value4 && isInstance(value4.buffer, SharedArrayBuffer))) {
            return fromArrayBuffer(value4, encodingOrOffset, length);
        }
        if (typeof value4 === "number") {
            throw new TypeError('The "value" argument must not be of type number. Received type number');
        }
        var valueOf = value4.valueOf && value4.valueOf();
        if (valueOf != null && valueOf !== value4) {
            return Buffer2.from(valueOf, encodingOrOffset, length);
        }
        var b = fromObject(value4);
        if (b) return b;
        if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value4[Symbol.toPrimitive] === "function") {
            return Buffer2.from(value4[Symbol.toPrimitive]("string"), encodingOrOffset, length);
        }
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + babelHelpers["typeof"](value4));
    }
    Buffer2.from = function(value4, encodingOrOffset, length) {
        return from(value4, encodingOrOffset, length);
    };
    Object.setPrototypeOf(Buffer2.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(Buffer2, Uint8Array);
    function assertSize(size6) {
        if (typeof size6 !== "number") {
            throw new TypeError('"size" argument must be of type number');
        } else if (size6 < 0) {
            throw new RangeError('The value "' + size6 + '" is invalid for option "size"');
        }
    }
    function alloc(size6, fill, encoding) {
        assertSize(size6);
        if (size6 <= 0) {
            return createBuffer(size6);
        }
        if (fill !== void 0) {
            return typeof encoding === "string" ? createBuffer(size6).fill(fill, encoding) : createBuffer(size6).fill(fill);
        }
        return createBuffer(size6);
    }
    Buffer2.alloc = function(size6, fill, encoding) {
        return alloc(size6, fill, encoding);
    };
    function allocUnsafe(size6) {
        assertSize(size6);
        return createBuffer(size6 < 0 ? 0 : checked(size6) | 0);
    }
    Buffer2.allocUnsafe = function(size6) {
        return allocUnsafe(size6);
    };
    Buffer2.allocUnsafeSlow = function(size6) {
        return allocUnsafe(size6);
    };
    function fromString(string, encoding) {
        if (typeof encoding !== "string" || encoding === "") {
            encoding = "utf8";
        }
        if (!Buffer2.isEncoding(encoding)) {
            throw new TypeError("Unknown encoding: " + encoding);
        }
        var length = byteLength2(string, encoding) | 0;
        var buf = createBuffer(length);
        var actual = buf.write(string, encoding);
        if (actual !== length) {
            buf = buf.slice(0, actual);
        }
        return buf;
    }
    function fromArrayLike(array) {
        var length = array.length < 0 ? 0 : checked(array.length) | 0;
        var buf = createBuffer(length);
        for(var i1 = 0; i1 < length; i1 += 1){
            buf[i1] = array[i1] & 255;
        }
        return buf;
    }
    function fromArrayView(arrayView) {
        if (isInstance(arrayView, Uint8Array)) {
            var copy2 = new Uint8Array(arrayView);
            return fromArrayBuffer(copy2.buffer, copy2.byteOffset, copy2.byteLength);
        }
        return fromArrayLike(arrayView);
    }
    function fromArrayBuffer(array, byteOffset, length) {
        if (byteOffset < 0 || array.byteLength < byteOffset) {
            throw new RangeError('"offset" is outside of buffer bounds');
        }
        if (array.byteLength < byteOffset + (length || 0)) {
            throw new RangeError('"length" is outside of buffer bounds');
        }
        var buf;
        if (byteOffset === void 0 && length === void 0) {
            buf = new Uint8Array(array);
        } else if (length === void 0) {
            buf = new Uint8Array(array, byteOffset);
        } else {
            buf = new Uint8Array(array, byteOffset, length);
        }
        Object.setPrototypeOf(buf, Buffer2.prototype);
        return buf;
    }
    function fromObject(obj) {
        if (Buffer2.isBuffer(obj)) {
            var len1 = checked(obj.length) | 0;
            var buf = createBuffer(len1);
            if (buf.length === 0) {
                return buf;
            }
            obj.copy(buf, 0, 0, len1);
            return buf;
        }
        if (obj.length !== void 0) {
            if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
                return createBuffer(0);
            }
            return fromArrayLike(obj);
        }
        if (obj.type === "Buffer" && Array.isArray(obj.data)) {
            return fromArrayLike(obj.data);
        }
    }
    function checked(length) {
        if (length >= K_MAX_LENGTH) {
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
        }
        return length | 0;
    }
    function SlowBuffer(length) {
        if (+length != length) {
            length = 0;
        }
        return Buffer2.alloc(+length);
    }
    Buffer2.isBuffer = function isBuffer(b) {
        return b != null && b._isBuffer === true && b !== Buffer2.prototype;
    };
    Buffer2.compare = function compare1(a, b) {
        if (isInstance(a, Uint8Array)) a = Buffer2.from(a, a.offset, a.byteLength);
        if (isInstance(b, Uint8Array)) b = Buffer2.from(b, b.offset, b.byteLength);
        if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b)) {
            throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        }
        if (a === b) return 0;
        var x = a.length;
        var y = b.length;
        for(var i1 = 0, len2 = Math.min(x, y); i1 < len2; ++i1){
            if (a[i1] !== b[i1]) {
                x = a[i1];
                y = b[i1];
                break;
            }
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
    };
    Buffer2.isEncoding = function isEncoding(encoding) {
        switch(String(encoding).toLowerCase()){
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
                return true;
            default:
                return false;
        }
    };
    Buffer2.concat = function concat1(list, length) {
        if (!Array.isArray(list)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
        }
        if (list.length === 0) {
            return Buffer2.alloc(0);
        }
        var i1;
        if (length === void 0) {
            length = 0;
            for(i1 = 0; i1 < list.length; ++i1){
                length += list[i1].length;
            }
        }
        var buffer2 = Buffer2.allocUnsafe(length);
        var pos = 0;
        for(i1 = 0; i1 < list.length; ++i1){
            var buf = list[i1];
            if (isInstance(buf, Uint8Array)) {
                if (pos + buf.length > buffer2.length) {
                    Buffer2.from(buf).copy(buffer2, pos);
                } else {
                    Uint8Array.prototype.set.call(buffer2, buf, pos);
                }
            } else if (!Buffer2.isBuffer(buf)) {
                throw new TypeError('"list" argument must be an Array of Buffers');
            } else {
                buf.copy(buffer2, pos);
            }
            pos += buf.length;
        }
        return buffer2;
    };
    function byteLength2(string, encoding) {
        if (Buffer2.isBuffer(string)) {
            return string.length;
        }
        if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
            return string.byteLength;
        }
        if (typeof string !== "string") {
            throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + babelHelpers["typeof"](string));
        }
        var len2 = string.length;
        var mustMatch = arguments.length > 2 && arguments[2] === true;
        if (!mustMatch && len2 === 0) return 0;
        var loweredCase = false;
        for(;;){
            switch(encoding){
                case "ascii":
                case "latin1":
                case "binary":
                    return len2;
                case "utf8":
                case "utf-8":
                    return utf8ToBytes(string).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return len2 * 2;
                case "hex":
                    return len2 >>> 1;
                case "base64":
                    return base64ToBytes(string).length;
                default:
                    if (loweredCase) {
                        return mustMatch ? -1 : utf8ToBytes(string).length;
                    }
                    encoding = ("" + encoding).toLowerCase();
                    loweredCase = true;
            }
        }
    }
    Buffer2.byteLength = byteLength2;
    function slowToString(encoding, start, end) {
        var loweredCase = false;
        if (start === void 0 || start < 0) {
            start = 0;
        }
        if (start > this.length) {
            return "";
        }
        if (end === void 0 || end > this.length) {
            end = this.length;
        }
        if (end <= 0) {
            return "";
        }
        end >>>= 0;
        start >>>= 0;
        if (end <= start) {
            return "";
        }
        if (!encoding) encoding = "utf8";
        while(true){
            switch(encoding){
                case "hex":
                    return hexSlice(this, start, end);
                case "utf8":
                case "utf-8":
                    return utf8Slice(this, start, end);
                case "ascii":
                    return asciiSlice(this, start, end);
                case "latin1":
                case "binary":
                    return latin1Slice(this, start, end);
                case "base64":
                    return base64Slice(this, start, end);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return utf16leSlice(this, start, end);
                default:
                    if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
                    encoding = (encoding + "").toLowerCase();
                    loweredCase = true;
            }
        }
    }
    Buffer2.prototype._isBuffer = true;
    function swap(b, n, m) {
        var i1 = b[n];
        b[n] = b[m];
        b[m] = i1;
    }
    Buffer2.prototype.swap16 = function swap16() {
        var len2 = this.length;
        if (len2 % 2 !== 0) {
            throw new RangeError("Buffer size must be a multiple of 16-bits");
        }
        for(var i1 = 0; i1 < len2; i1 += 2){
            swap(this, i1, i1 + 1);
        }
        return this;
    };
    Buffer2.prototype.swap32 = function swap32() {
        var len2 = this.length;
        if (len2 % 4 !== 0) {
            throw new RangeError("Buffer size must be a multiple of 32-bits");
        }
        for(var i1 = 0; i1 < len2; i1 += 4){
            swap(this, i1, i1 + 3);
            swap(this, i1 + 1, i1 + 2);
        }
        return this;
    };
    Buffer2.prototype.swap64 = function swap64() {
        var len2 = this.length;
        if (len2 % 8 !== 0) {
            throw new RangeError("Buffer size must be a multiple of 64-bits");
        }
        for(var i1 = 0; i1 < len2; i1 += 8){
            swap(this, i1, i1 + 7);
            swap(this, i1 + 1, i1 + 6);
            swap(this, i1 + 2, i1 + 5);
            swap(this, i1 + 3, i1 + 4);
        }
        return this;
    };
    Buffer2.prototype.toString = function toString() {
        var length = this.length;
        if (length === 0) return "";
        if (arguments.length === 0) return utf8Slice(this, 0, length);
        return slowToString.apply(this, arguments);
    };
    Buffer2.prototype.toLocaleString = Buffer2.prototype.toString;
    Buffer2.prototype.equals = function equals1(b) {
        if (!Buffer2.isBuffer(b)) throw new TypeError("Argument must be a Buffer");
        if (this === b) return true;
        return Buffer2.compare(this, b) === 0;
    };
    Buffer2.prototype.inspect = function inspect() {
        var str1 = "";
        var max = exports.INSPECT_MAX_BYTES;
        str1 = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
        if (this.length > max) str1 += " ... ";
        return "<Buffer " + str1 + ">";
    };
    if (customInspectSymbol) {
        Buffer2.prototype[customInspectSymbol] = Buffer2.prototype.inspect;
    }
    Buffer2.prototype.compare = function compare2(target, start, end, thisStart, thisEnd) {
        if (isInstance(target, Uint8Array)) {
            target = Buffer2.from(target, target.offset, target.byteLength);
        }
        if (!Buffer2.isBuffer(target)) {
            throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + babelHelpers["typeof"](target));
        }
        if (start === void 0) {
            start = 0;
        }
        if (end === void 0) {
            end = target ? target.length : 0;
        }
        if (thisStart === void 0) {
            thisStart = 0;
        }
        if (thisEnd === void 0) {
            thisEnd = this.length;
        }
        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
            throw new RangeError("out of range index");
        }
        if (thisStart >= thisEnd && start >= end) {
            return 0;
        }
        if (thisStart >= thisEnd) {
            return -1;
        }
        if (start >= end) {
            return 1;
        }
        start >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target) return 0;
        var x = thisEnd - thisStart;
        var y = end - start;
        var len2 = Math.min(x, y);
        var thisCopy = this.slice(thisStart, thisEnd);
        var targetCopy = target.slice(start, end);
        for(var i1 = 0; i1 < len2; ++i1){
            if (thisCopy[i1] !== targetCopy[i1]) {
                x = thisCopy[i1];
                y = targetCopy[i1];
                break;
            }
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
    };
    function bidirectionalIndexOf(buffer2, val, byteOffset, encoding, dir) {
        if (buffer2.length === 0) return -1;
        if (typeof byteOffset === "string") {
            encoding = byteOffset;
            byteOffset = 0;
        } else if (byteOffset > 2147483647) {
            byteOffset = 2147483647;
        } else if (byteOffset < -2147483648) {
            byteOffset = -2147483648;
        }
        byteOffset = +byteOffset;
        if (numberIsNaN(byteOffset)) {
            byteOffset = dir ? 0 : buffer2.length - 1;
        }
        if (byteOffset < 0) byteOffset = buffer2.length + byteOffset;
        if (byteOffset >= buffer2.length) {
            if (dir) return -1;
            else byteOffset = buffer2.length - 1;
        } else if (byteOffset < 0) {
            if (dir) byteOffset = 0;
            else return -1;
        }
        if (typeof val === "string") {
            val = Buffer2.from(val, encoding);
        }
        if (Buffer2.isBuffer(val)) {
            if (val.length === 0) {
                return -1;
            }
            return arrayIndexOf(buffer2, val, byteOffset, encoding, dir);
        } else if (typeof val === "number") {
            val = val & 255;
            if (typeof Uint8Array.prototype.indexOf === "function") {
                if (dir) {
                    return Uint8Array.prototype.indexOf.call(buffer2, val, byteOffset);
                } else {
                    return Uint8Array.prototype.lastIndexOf.call(buffer2, val, byteOffset);
                }
            }
            return arrayIndexOf(buffer2, [
                val
            ], byteOffset, encoding, dir);
        }
        throw new TypeError("val must be string, number or Buffer");
    }
    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
        var indexSize = 1;
        var arrLength = arr.length;
        var valLength = val.length;
        if (encoding !== void 0) {
            encoding = String(encoding).toLowerCase();
            if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
                if (arr.length < 2 || val.length < 2) {
                    return -1;
                }
                indexSize = 2;
                arrLength /= 2;
                valLength /= 2;
                byteOffset /= 2;
            }
        }
        function read3(buf, i2) {
            if (indexSize === 1) {
                return buf[i2];
            } else {
                return buf.readUInt16BE(i2 * indexSize);
            }
        }
        var i1;
        if (dir) {
            var foundIndex = -1;
            for(i1 = byteOffset; i1 < arrLength; i1++){
                if (read3(arr, i1) === read3(val, foundIndex === -1 ? 0 : i1 - foundIndex)) {
                    if (foundIndex === -1) foundIndex = i1;
                    if (i1 - foundIndex + 1 === valLength) return foundIndex * indexSize;
                } else {
                    if (foundIndex !== -1) i1 -= i1 - foundIndex;
                    foundIndex = -1;
                }
            }
        } else {
            if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
            for(i1 = byteOffset; i1 >= 0; i1--){
                var found = true;
                for(var j = 0; j < valLength; j++){
                    if (read3(arr, i1 + j) !== read3(val, j)) {
                        found = false;
                        break;
                    }
                }
                if (found) return i1;
            }
        }
        return -1;
    }
    Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {
        return this.indexOf(val, byteOffset, encoding) !== -1;
    };
    Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
    };
    Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
    };
    function hexWrite(buf, string, offset, length) {
        offset = Number(offset) || 0;
        var remaining = buf.length - offset;
        if (!length) {
            length = remaining;
        } else {
            length = Number(length);
            if (length > remaining) {
                length = remaining;
            }
        }
        var strLen = string.length;
        if (length > strLen / 2) {
            length = strLen / 2;
        }
        for(var i1 = 0; i1 < length; ++i1){
            var parsed = parseInt(string.substr(i1 * 2, 2), 16);
            if (numberIsNaN(parsed)) return i1;
            buf[offset + i1] = parsed;
        }
        return i1;
    }
    function utf8Write(buf, string, offset, length) {
        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
    }
    function asciiWrite(buf, string, offset, length) {
        return blitBuffer(asciiToBytes(string), buf, offset, length);
    }
    function base64Write(buf, string, offset, length) {
        return blitBuffer(base64ToBytes(string), buf, offset, length);
    }
    function ucs2Write(buf, string, offset, length) {
        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
    }
    Buffer2.prototype.write = function write3(string, offset, length, encoding) {
        if (offset === void 0) {
            encoding = "utf8";
            length = this.length;
            offset = 0;
        } else if (length === void 0 && typeof offset === "string") {
            encoding = offset;
            length = this.length;
            offset = 0;
        } else if (isFinite(offset)) {
            offset = offset >>> 0;
            if (isFinite(length)) {
                length = length >>> 0;
                if (encoding === void 0) encoding = "utf8";
            } else {
                encoding = length;
                length = void 0;
            }
        } else {
            throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
        }
        var remaining = this.length - offset;
        if (length === void 0 || length > remaining) length = remaining;
        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
            throw new RangeError("Attempt to write outside buffer bounds");
        }
        if (!encoding) encoding = "utf8";
        var loweredCase = false;
        for(;;){
            switch(encoding){
                case "hex":
                    return hexWrite(this, string, offset, length);
                case "utf8":
                case "utf-8":
                    return utf8Write(this, string, offset, length);
                case "ascii":
                case "latin1":
                case "binary":
                    return asciiWrite(this, string, offset, length);
                case "base64":
                    return base64Write(this, string, offset, length);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return ucs2Write(this, string, offset, length);
                default:
                    if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
                    encoding = ("" + encoding).toLowerCase();
                    loweredCase = true;
            }
        }
    };
    Buffer2.prototype.toJSON = function toJSON() {
        return {
            type: "Buffer",
            data: Array.prototype.slice.call(this._arr || this, 0)
        };
    };
    function base64Slice(buf, start, end) {
        if (start === 0 && end === buf.length) {
            return base64Js.fromByteArray(buf);
        } else {
            return base64Js.fromByteArray(buf.slice(start, end));
        }
    }
    function utf8Slice(buf, start, end) {
        end = Math.min(buf.length, end);
        var res = [];
        var i1 = start;
        while(i1 < end){
            var firstByte = buf[i1];
            var codePoint = null;
            var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
            if (i1 + bytesPerSequence <= end) {
                var secondByte, thirdByte, fourthByte, tempCodePoint;
                switch(bytesPerSequence){
                    case 1:
                        if (firstByte < 128) {
                            codePoint = firstByte;
                        }
                        break;
                    case 2:
                        secondByte = buf[i1 + 1];
                        if ((secondByte & 192) === 128) {
                            tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                            if (tempCodePoint > 127) {
                                codePoint = tempCodePoint;
                            }
                        }
                        break;
                    case 3:
                        secondByte = buf[i1 + 1];
                        thirdByte = buf[i1 + 2];
                        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                            tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                            if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                                codePoint = tempCodePoint;
                            }
                        }
                        break;
                    case 4:
                        secondByte = buf[i1 + 1];
                        thirdByte = buf[i1 + 2];
                        fourthByte = buf[i1 + 3];
                        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                            tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                            if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                                codePoint = tempCodePoint;
                            }
                        }
                }
            }
            if (codePoint === null) {
                codePoint = 65533;
                bytesPerSequence = 1;
            } else if (codePoint > 65535) {
                codePoint -= 65536;
                res.push(codePoint >>> 10 & 1023 | 55296);
                codePoint = 56320 | codePoint & 1023;
            }
            res.push(codePoint);
            i1 += bytesPerSequence;
        }
        return decodeCodePointsArray(res);
    }
    var MAX_ARGUMENTS_LENGTH = 4096;
    function decodeCodePointsArray(codePoints) {
        var len2 = codePoints.length;
        if (len2 <= MAX_ARGUMENTS_LENGTH) {
            return String.fromCharCode.apply(String, codePoints);
        }
        var res = "";
        var i1 = 0;
        while(i1 < len2){
            res += String.fromCharCode.apply(String, codePoints.slice(i1, i1 += MAX_ARGUMENTS_LENGTH));
        }
        return res;
    }
    function asciiSlice(buf, start, end) {
        var ret2 = "";
        end = Math.min(buf.length, end);
        for(var i1 = start; i1 < end; ++i1){
            ret2 += String.fromCharCode(buf[i1] & 127);
        }
        return ret2;
    }
    function latin1Slice(buf, start, end) {
        var ret2 = "";
        end = Math.min(buf.length, end);
        for(var i1 = start; i1 < end; ++i1){
            ret2 += String.fromCharCode(buf[i1]);
        }
        return ret2;
    }
    function hexSlice(buf, start, end) {
        var len2 = buf.length;
        if (!start || start < 0) start = 0;
        if (!end || end < 0 || end > len2) end = len2;
        var out = "";
        for(var i1 = start; i1 < end; ++i1){
            out += hexSliceLookupTable[buf[i1]];
        }
        return out;
    }
    function utf16leSlice(buf, start, end) {
        var bytes = buf.slice(start, end);
        var res = "";
        for(var i1 = 0; i1 < bytes.length - 1; i1 += 2){
            res += String.fromCharCode(bytes[i1] + bytes[i1 + 1] * 256);
        }
        return res;
    }
    Buffer2.prototype.slice = function slice(start, end) {
        var len2 = this.length;
        start = ~~start;
        end = end === void 0 ? len2 : ~~end;
        if (start < 0) {
            start += len2;
            if (start < 0) start = 0;
        } else if (start > len2) {
            start = len2;
        }
        if (end < 0) {
            end += len2;
            if (end < 0) end = 0;
        } else if (end > len2) {
            end = len2;
        }
        if (end < start) end = start;
        var newBuf = this.subarray(start, end);
        Object.setPrototypeOf(newBuf, Buffer2.prototype);
        return newBuf;
    };
    function checkOffset(offset, ext, length) {
        if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
        if (offset + ext > length) throw new RangeError("Trying to access beyond buffer length");
    }
    Buffer2.prototype.readUintLE = Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength3, noAssert) {
        offset = offset >>> 0;
        byteLength3 = byteLength3 >>> 0;
        if (!noAssert) checkOffset(offset, byteLength3, this.length);
        var val = this[offset];
        var mul = 1;
        var i1 = 0;
        while(++i1 < byteLength3 && (mul *= 256)){
            val += this[offset + i1] * mul;
        }
        return val;
    };
    Buffer2.prototype.readUintBE = Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength3, noAssert) {
        offset = offset >>> 0;
        byteLength3 = byteLength3 >>> 0;
        if (!noAssert) {
            checkOffset(offset, byteLength3, this.length);
        }
        var val = this[offset + --byteLength3];
        var mul = 1;
        while(byteLength3 > 0 && (mul *= 256)){
            val += this[offset + --byteLength3] * mul;
        }
        return val;
    };
    Buffer2.prototype.readUint8 = Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 1, this.length);
        return this[offset];
    };
    Buffer2.prototype.readUint16LE = Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        return this[offset] | this[offset + 1] << 8;
    };
    Buffer2.prototype.readUint16BE = Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        return this[offset] << 8 | this[offset + 1];
    };
    Buffer2.prototype.readUint32LE = Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
    };
    Buffer2.prototype.readUint32BE = Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
    };
    Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength3, noAssert) {
        offset = offset >>> 0;
        byteLength3 = byteLength3 >>> 0;
        if (!noAssert) checkOffset(offset, byteLength3, this.length);
        var val = this[offset];
        var mul = 1;
        var i1 = 0;
        while(++i1 < byteLength3 && (mul *= 256)){
            val += this[offset + i1] * mul;
        }
        mul *= 128;
        if (val >= mul) val -= Math.pow(2, 8 * byteLength3);
        return val;
    };
    Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength3, noAssert) {
        offset = offset >>> 0;
        byteLength3 = byteLength3 >>> 0;
        if (!noAssert) checkOffset(offset, byteLength3, this.length);
        var i1 = byteLength3;
        var mul = 1;
        var val = this[offset + --i1];
        while(i1 > 0 && (mul *= 256)){
            val += this[offset + --i1] * mul;
        }
        mul *= 128;
        if (val >= mul) val -= Math.pow(2, 8 * byteLength3);
        return val;
    };
    Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 1, this.length);
        if (!(this[offset] & 128)) return this[offset];
        return (255 - this[offset] + 1) * -1;
    };
    Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        var val = this[offset] | this[offset + 1] << 8;
        return val & 32768 ? val | 4294901760 : val;
    };
    Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 2, this.length);
        var val = this[offset + 1] | this[offset] << 8;
        return val & 32768 ? val | 4294901760 : val;
    };
    Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
    };
    Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
    };
    Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, true, 23, 4);
    };
    Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, false, 23, 4);
    };
    Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, true, 52, 8);
    };
    Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
        offset = offset >>> 0;
        if (!noAssert) checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, false, 52, 8);
    };
    function checkInt(buf, value4, offset, ext, max, min) {
        if (!Buffer2.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (value4 > max || value4 < min) throw new RangeError('"value" argument is out of bounds');
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
    }
    Buffer2.prototype.writeUintLE = Buffer2.prototype.writeUIntLE = function writeUIntLE(value4, offset, byteLength3, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        byteLength3 = byteLength3 >>> 0;
        if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength3) - 1;
            checkInt(this, value4, offset, byteLength3, maxBytes, 0);
        }
        var mul = 1;
        var i1 = 0;
        this[offset] = value4 & 255;
        while(++i1 < byteLength3 && (mul *= 256)){
            this[offset + i1] = value4 / mul & 255;
        }
        return offset + byteLength3;
    };
    Buffer2.prototype.writeUintBE = Buffer2.prototype.writeUIntBE = function writeUIntBE(value4, offset, byteLength3, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        byteLength3 = byteLength3 >>> 0;
        if (!noAssert) {
            var maxBytes = Math.pow(2, 8 * byteLength3) - 1;
            checkInt(this, value4, offset, byteLength3, maxBytes, 0);
        }
        var i1 = byteLength3 - 1;
        var mul = 1;
        this[offset + i1] = value4 & 255;
        while(--i1 >= 0 && (mul *= 256)){
            this[offset + i1] = value4 / mul & 255;
        }
        return offset + byteLength3;
    };
    Buffer2.prototype.writeUint8 = Buffer2.prototype.writeUInt8 = function writeUInt8(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 1, 255, 0);
        this[offset] = value4 & 255;
        return offset + 1;
    };
    Buffer2.prototype.writeUint16LE = Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 2, 65535, 0);
        this[offset] = value4 & 255;
        this[offset + 1] = value4 >>> 8;
        return offset + 2;
    };
    Buffer2.prototype.writeUint16BE = Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 2, 65535, 0);
        this[offset] = value4 >>> 8;
        this[offset + 1] = value4 & 255;
        return offset + 2;
    };
    Buffer2.prototype.writeUint32LE = Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 4, 4294967295, 0);
        this[offset + 3] = value4 >>> 24;
        this[offset + 2] = value4 >>> 16;
        this[offset + 1] = value4 >>> 8;
        this[offset] = value4 & 255;
        return offset + 4;
    };
    Buffer2.prototype.writeUint32BE = Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 4, 4294967295, 0);
        this[offset] = value4 >>> 24;
        this[offset + 1] = value4 >>> 16;
        this[offset + 2] = value4 >>> 8;
        this[offset + 3] = value4 & 255;
        return offset + 4;
    };
    Buffer2.prototype.writeIntLE = function writeIntLE(value4, offset, byteLength3, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) {
            var limit1 = Math.pow(2, 8 * byteLength3 - 1);
            checkInt(this, value4, offset, byteLength3, limit1 - 1, -limit1);
        }
        var i1 = 0;
        var mul = 1;
        var sub = 0;
        this[offset] = value4 & 255;
        while(++i1 < byteLength3 && (mul *= 256)){
            if (value4 < 0 && sub === 0 && this[offset + i1 - 1] !== 0) {
                sub = 1;
            }
            this[offset + i1] = (value4 / mul >> 0) - sub & 255;
        }
        return offset + byteLength3;
    };
    Buffer2.prototype.writeIntBE = function writeIntBE(value4, offset, byteLength3, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) {
            var limit2 = Math.pow(2, 8 * byteLength3 - 1);
            checkInt(this, value4, offset, byteLength3, limit2 - 1, -limit2);
        }
        var i1 = byteLength3 - 1;
        var mul = 1;
        var sub = 0;
        this[offset + i1] = value4 & 255;
        while(--i1 >= 0 && (mul *= 256)){
            if (value4 < 0 && sub === 0 && this[offset + i1 + 1] !== 0) {
                sub = 1;
            }
            this[offset + i1] = (value4 / mul >> 0) - sub & 255;
        }
        return offset + byteLength3;
    };
    Buffer2.prototype.writeInt8 = function writeInt8(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 1, 127, -128);
        if (value4 < 0) value4 = 255 + value4 + 1;
        this[offset] = value4 & 255;
        return offset + 1;
    };
    Buffer2.prototype.writeInt16LE = function writeInt16LE(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 2, 32767, -32768);
        this[offset] = value4 & 255;
        this[offset + 1] = value4 >>> 8;
        return offset + 2;
    };
    Buffer2.prototype.writeInt16BE = function writeInt16BE(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 2, 32767, -32768);
        this[offset] = value4 >>> 8;
        this[offset + 1] = value4 & 255;
        return offset + 2;
    };
    Buffer2.prototype.writeInt32LE = function writeInt32LE(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 4, 2147483647, -2147483648);
        this[offset] = value4 & 255;
        this[offset + 1] = value4 >>> 8;
        this[offset + 2] = value4 >>> 16;
        this[offset + 3] = value4 >>> 24;
        return offset + 4;
    };
    Buffer2.prototype.writeInt32BE = function writeInt32BE(value4, offset, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) checkInt(this, value4, offset, 4, 2147483647, -2147483648);
        if (value4 < 0) value4 = 4294967295 + value4 + 1;
        this[offset] = value4 >>> 24;
        this[offset + 1] = value4 >>> 16;
        this[offset + 2] = value4 >>> 8;
        this[offset + 3] = value4 & 255;
        return offset + 4;
    };
    function checkIEEE754(buf, value4, offset, ext, max, min) {
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
        if (offset < 0) throw new RangeError("Index out of range");
    }
    function writeFloat(buf, value4, offset, littleEndian, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) {
            checkIEEE754(buf, value4, offset, 4);
        }
        ieee754.write(buf, value4, offset, littleEndian, 23, 4);
        return offset + 4;
    }
    Buffer2.prototype.writeFloatLE = function writeFloatLE(value4, offset, noAssert) {
        return writeFloat(this, value4, offset, true, noAssert);
    };
    Buffer2.prototype.writeFloatBE = function writeFloatBE(value4, offset, noAssert) {
        return writeFloat(this, value4, offset, false, noAssert);
    };
    function writeDouble(buf, value4, offset, littleEndian, noAssert) {
        value4 = +value4;
        offset = offset >>> 0;
        if (!noAssert) {
            checkIEEE754(buf, value4, offset, 8);
        }
        ieee754.write(buf, value4, offset, littleEndian, 52, 8);
        return offset + 8;
    }
    Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value4, offset, noAssert) {
        return writeDouble(this, value4, offset, true, noAssert);
    };
    Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value4, offset, noAssert) {
        return writeDouble(this, value4, offset, false, noAssert);
    };
    Buffer2.prototype.copy = function copy3(target, targetStart, start, end) {
        if (!Buffer2.isBuffer(target)) throw new TypeError("argument should be a Buffer");
        if (!start) start = 0;
        if (!end && end !== 0) end = this.length;
        if (targetStart >= target.length) targetStart = target.length;
        if (!targetStart) targetStart = 0;
        if (end > 0 && end < start) end = start;
        if (end === start) return 0;
        if (target.length === 0 || this.length === 0) return 0;
        if (targetStart < 0) {
            throw new RangeError("targetStart out of bounds");
        }
        if (start < 0 || start >= this.length) throw new RangeError("Index out of range");
        if (end < 0) throw new RangeError("sourceEnd out of bounds");
        if (end > this.length) end = this.length;
        if (target.length - targetStart < end - start) {
            end = target.length - targetStart + start;
        }
        var len2 = end - start;
        if (this === target && typeof Uint8Array.prototype.copyWithin === "function") {
            this.copyWithin(targetStart, start, end);
        } else {
            Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
        }
        return len2;
    };
    Buffer2.prototype.fill = function fill(val, start, end, encoding) {
        if (typeof val === "string") {
            if (typeof start === "string") {
                encoding = start;
                start = 0;
                end = this.length;
            } else if (typeof end === "string") {
                encoding = end;
                end = this.length;
            }
            if (encoding !== void 0 && typeof encoding !== "string") {
                throw new TypeError("encoding must be a string");
            }
            if (typeof encoding === "string" && !Buffer2.isEncoding(encoding)) {
                throw new TypeError("Unknown encoding: " + encoding);
            }
            if (val.length === 1) {
                var code2 = val.charCodeAt(0);
                if (encoding === "utf8" && code2 < 128 || encoding === "latin1") {
                    val = code2;
                }
            }
        } else if (typeof val === "number") {
            val = val & 255;
        } else if (typeof val === "boolean") {
            val = Number(val);
        }
        if (start < 0 || this.length < start || this.length < end) {
            throw new RangeError("Out of range index");
        }
        if (end <= start) {
            return this;
        }
        start = start >>> 0;
        end = end === void 0 ? this.length : end >>> 0;
        if (!val) val = 0;
        var i1;
        if (typeof val === "number") {
            for(i1 = start; i1 < end; ++i1){
                this[i1] = val;
            }
        } else {
            var bytes = Buffer2.isBuffer(val) ? val : Buffer2.from(val, encoding);
            var len2 = bytes.length;
            if (len2 === 0) {
                throw new TypeError('The value "' + val + '" is invalid for argument "value"');
            }
            for(i1 = 0; i1 < end - start; ++i1){
                this[i1 + start] = bytes[i1 % len2];
            }
        }
        return this;
    };
    var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
    function base64clean(str1) {
        str1 = str1.split("=")[0];
        str1 = str1.trim().replace(INVALID_BASE64_RE, "");
        if (str1.length < 2) return "";
        while(str1.length % 4 !== 0){
            str1 = str1 + "=";
        }
        return str1;
    }
    function utf8ToBytes(string, units) {
        units = units || Infinity;
        var codePoint;
        var length = string.length;
        var leadSurrogate = null;
        var bytes = [];
        for(var i1 = 0; i1 < length; ++i1){
            codePoint = string.charCodeAt(i1);
            if (codePoint > 55295 && codePoint < 57344) {
                if (!leadSurrogate) {
                    if (codePoint > 56319) {
                        if ((units -= 3) > -1) bytes.push(239, 191, 189);
                        continue;
                    } else if (i1 + 1 === length) {
                        if ((units -= 3) > -1) bytes.push(239, 191, 189);
                        continue;
                    }
                    leadSurrogate = codePoint;
                    continue;
                }
                if (codePoint < 56320) {
                    if ((units -= 3) > -1) bytes.push(239, 191, 189);
                    leadSurrogate = codePoint;
                    continue;
                }
                codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
            } else if (leadSurrogate) {
                if ((units -= 3) > -1) bytes.push(239, 191, 189);
            }
            leadSurrogate = null;
            if (codePoint < 128) {
                if ((units -= 1) < 0) break;
                bytes.push(codePoint);
            } else if (codePoint < 2048) {
                if ((units -= 2) < 0) break;
                bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
            } else if (codePoint < 65536) {
                if ((units -= 3) < 0) break;
                bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
            } else if (codePoint < 1114112) {
                if ((units -= 4) < 0) break;
                bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
            } else {
                throw new Error("Invalid code point");
            }
        }
        return bytes;
    }
    function asciiToBytes(str1) {
        var byteArray = [];
        for(var i1 = 0; i1 < str1.length; ++i1){
            byteArray.push(str1.charCodeAt(i1) & 255);
        }
        return byteArray;
    }
    function utf16leToBytes(str1, units) {
        var c, hi, lo;
        var byteArray = [];
        for(var i1 = 0; i1 < str1.length; ++i1){
            if ((units -= 2) < 0) break;
            c = str1.charCodeAt(i1);
            hi = c >> 8;
            lo = c % 256;
            byteArray.push(lo);
            byteArray.push(hi);
        }
        return byteArray;
    }
    function base64ToBytes(str1) {
        return base64Js.toByteArray(base64clean(str1));
    }
    function blitBuffer(src, dst, offset, length) {
        for(var i1 = 0; i1 < length; ++i1){
            if (i1 + offset >= dst.length || i1 >= src.length) break;
            dst[i1 + offset] = src[i1];
        }
        return i1;
    }
    function isInstance(obj, type4) {
        return obj instanceof type4 || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type4.name;
    }
    function numberIsNaN(obj) {
        return obj !== obj;
    }
    var hexSliceLookupTable = function() {
        var alphabet = "0123456789abcdef";
        var table = new Array(256);
        for(var i1 = 0; i1 < 16; ++i1){
            var i16 = i1 * 16;
            for(var j = 0; j < 16; ++j){
                table[i16 + j] = alphabet[i1] + alphabet[j];
            }
        }
        return table;
    }();
});
var buffer_1 = buffer$1.Buffer;
buffer$1.SlowBuffer;
buffer$1.INSPECT_MAX_BYTES;
buffer$1.kMaxLength;
function checkForMath(potentialGlobal) {
    return potentialGlobal && potentialGlobal.Math == Math && potentialGlobal;
}
function getGlobal() {
    return checkForMath(typeof globalThis === "object" && globalThis) || checkForMath(typeof window === "object" && window) || checkForMath(typeof self === "object" && self) || checkForMath(typeof global$1 === "object" && global$1) || Function("return this")();
}
function normalizedFunctionString(fn) {
    return fn.toString().replace("function(", "function (");
}
function isReactNative() {
    var g = getGlobal();
    return typeof g.navigator === "object" && g.navigator.product === "ReactNative";
}
var insecureRandomBytes = function insecureRandomBytes2(size6) {
    var insecureWarning = isReactNative() ? "BSON: For React Native please polyfill crypto.getRandomValues, e.g. using: https://www.npmjs.com/package/react-native-get-random-values." : "BSON: No cryptographic implementation for random bytes present, falling back to a less secure implementation.";
    console.warn(insecureWarning);
    var result = buffer_1.alloc(size6);
    for(var i1 = 0; i1 < size6; ++i1)result[i1] = Math.floor(Math.random() * 256);
    return result;
};
var detectRandomBytes = function() {
    if (typeof window !== "undefined") {
        var target_1 = window.crypto || window.msCrypto;
        if (target_1 && target_1.getRandomValues) {
            return function(size6) {
                return target_1.getRandomValues(buffer_1.alloc(size6));
            };
        }
    }
    if (typeof global$1 !== "undefined" && global$1.crypto && global$1.crypto.getRandomValues) {
        return function(size6) {
            return global$1.crypto.getRandomValues(buffer_1.alloc(size6));
        };
    }
    var requiredRandomBytes;
    try {
        requiredRandomBytes = require("crypto").randomBytes;
    } catch (e) {
    }
    return requiredRandomBytes || insecureRandomBytes;
};
var randomBytes = detectRandomBytes();
function isAnyArrayBuffer(value4) {
    return [
        "[object ArrayBuffer]",
        "[object SharedArrayBuffer]"
    ].includes(Object.prototype.toString.call(value4));
}
function isUint8Array(value4) {
    return Object.prototype.toString.call(value4) === "[object Uint8Array]";
}
function isBigInt64Array(value4) {
    return Object.prototype.toString.call(value4) === "[object BigInt64Array]";
}
function isBigUInt64Array(value4) {
    return Object.prototype.toString.call(value4) === "[object BigUint64Array]";
}
function isRegExp(d) {
    return Object.prototype.toString.call(d) === "[object RegExp]";
}
function isMap(d) {
    return Object.prototype.toString.call(d) === "[object Map]";
}
function isDate(d) {
    return isObjectLike(d) && Object.prototype.toString.call(d) === "[object Date]";
}
function isObjectLike(candidate) {
    return typeof candidate === "object" && candidate !== null;
}
function deprecate(fn, message4) {
    var warned = false;
    function deprecated() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++){
            args[_i] = arguments[_i];
        }
        if (!warned) {
            console.warn(message4);
            warned = true;
        }
        return fn.apply(this, args);
    }
    return deprecated;
}
function ensureBuffer(potentialBuffer) {
    if (ArrayBuffer.isView(potentialBuffer)) {
        return buffer_1.from(potentialBuffer.buffer, potentialBuffer.byteOffset, potentialBuffer.byteLength);
    }
    if (isAnyArrayBuffer(potentialBuffer)) {
        return buffer_1.from(potentialBuffer);
    }
    throw new TypeError("Must use either Buffer or TypedArray");
}
var VALIDATION_REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|[0-9a-f]{12}4[0-9a-f]{3}[89ab][0-9a-f]{15})$/i;
var uuidValidateString = function(str1) {
    return typeof str1 === "string" && VALIDATION_REGEX.test(str1);
};
var uuidHexStringToBuffer = function(hexString) {
    if (!uuidValidateString(hexString)) {
        throw new TypeError('UUID string representations must be a 32 or 36 character hex string (dashes excluded/included). Format: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" or "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx".');
    }
    var sanitizedHexString = hexString.replace(/-/g, "");
    return buffer_1.from(sanitizedHexString, "hex");
};
var bufferToUuidHexString = function(buffer2, includeDashes) {
    if (includeDashes === void 0) {
        includeDashes = true;
    }
    return includeDashes ? buffer2.toString("hex", 0, 4) + "-" + buffer2.toString("hex", 4, 6) + "-" + buffer2.toString("hex", 6, 8) + "-" + buffer2.toString("hex", 8, 10) + "-" + buffer2.toString("hex", 10, 16) : buffer2.toString("hex");
};
var BYTE_LENGTH = 16;
var kId$1 = Symbol("id");
var UUID = function() {
    function UUID2(input) {
        if (typeof input === "undefined") {
            this.id = UUID2.generate();
        } else if (input instanceof UUID2) {
            this[kId$1] = buffer_1.from(input.id);
            this.__id = input.__id;
        } else if (ArrayBuffer.isView(input) && input.byteLength === BYTE_LENGTH) {
            this.id = ensureBuffer(input);
        } else if (typeof input === "string") {
            this.id = uuidHexStringToBuffer(input);
        } else {
            throw new TypeError("Argument passed in UUID constructor must be a UUID, a 16 byte Buffer or a 32/36 character hex string (dashes excluded/included, format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).");
        }
    }
    Object.defineProperty(UUID2.prototype, "id", {
        get: function() {
            return this[kId$1];
        },
        set: function(value4) {
            this[kId$1] = value4;
            if (UUID2.cacheHexString) {
                this.__id = bufferToUuidHexString(value4);
            }
        },
        enumerable: false,
        configurable: true
    });
    UUID2.prototype.toHexString = function(includeDashes) {
        if (includeDashes === void 0) {
            includeDashes = true;
        }
        if (UUID2.cacheHexString && this.__id) {
            return this.__id;
        }
        var uuidHexString = bufferToUuidHexString(this.id, includeDashes);
        if (UUID2.cacheHexString) {
            this.__id = uuidHexString;
        }
        return uuidHexString;
    };
    UUID2.prototype.toString = function(encoding) {
        return encoding ? this.id.toString(encoding) : this.toHexString();
    };
    UUID2.prototype.toJSON = function() {
        return this.toHexString();
    };
    UUID2.prototype.equals = function(otherId) {
        if (!otherId) {
            return false;
        }
        if (otherId instanceof UUID2) {
            return otherId.id.equals(this.id);
        }
        try {
            return new UUID2(otherId).id.equals(this.id);
        } catch (_a) {
            return false;
        }
    };
    UUID2.prototype.toBinary = function() {
        return new Binary(this.id, Binary.SUBTYPE_UUID);
    };
    UUID2.generate = function() {
        var bytes = randomBytes(BYTE_LENGTH);
        bytes[6] = bytes[6] & 15 | 64;
        bytes[8] = bytes[8] & 63 | 128;
        return buffer_1.from(bytes);
    };
    UUID2.isValid = function(input) {
        if (!input) {
            return false;
        }
        if (input instanceof UUID2) {
            return true;
        }
        if (typeof input === "string") {
            return uuidValidateString(input);
        }
        if (isUint8Array(input)) {
            if (input.length !== BYTE_LENGTH) {
                return false;
            }
            try {
                return parseInt(input[6].toString(16)[0], 10) === Binary.SUBTYPE_UUID;
            } catch (_a) {
                return false;
            }
        }
        return false;
    };
    UUID2.createFromHexString = function(hexString) {
        var buffer2 = uuidHexStringToBuffer(hexString);
        return new UUID2(buffer2);
    };
    UUID2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    UUID2.prototype.inspect = function() {
        return 'new UUID("' + this.toHexString() + '")';
    };
    return UUID2;
}();
Object.defineProperty(UUID.prototype, "_bsontype", {
    value: "UUID"
});
var Binary = function() {
    function Binary2(buffer2, subType) {
        if (!(this instanceof Binary2)) return new Binary2(buffer2, subType);
        if (!(buffer2 == null) && !(typeof buffer2 === "string") && !ArrayBuffer.isView(buffer2) && !(buffer2 instanceof ArrayBuffer) && !Array.isArray(buffer2)) {
            throw new TypeError("Binary can only be constructed from string, Buffer, TypedArray, or Array<number>");
        }
        this.sub_type = subType !== null && subType !== void 0 ? subType : Binary2.BSON_BINARY_SUBTYPE_DEFAULT;
        if (buffer2 == null) {
            this.buffer = buffer_1.alloc(Binary2.BUFFER_SIZE);
            this.position = 0;
        } else {
            if (typeof buffer2 === "string") {
                this.buffer = buffer_1.from(buffer2, "binary");
            } else if (Array.isArray(buffer2)) {
                this.buffer = buffer_1.from(buffer2);
            } else {
                this.buffer = ensureBuffer(buffer2);
            }
            this.position = this.buffer.byteLength;
        }
    }
    Binary2.prototype.put = function(byteValue) {
        if (typeof byteValue === "string" && byteValue.length !== 1) {
            throw new TypeError("only accepts single character String");
        } else if (typeof byteValue !== "number" && byteValue.length !== 1) throw new TypeError("only accepts single character Uint8Array or Array");
        var decodedByte;
        if (typeof byteValue === "string") {
            decodedByte = byteValue.charCodeAt(0);
        } else if (typeof byteValue === "number") {
            decodedByte = byteValue;
        } else {
            decodedByte = byteValue[0];
        }
        if (decodedByte < 0 || decodedByte > 255) {
            throw new TypeError("only accepts number in a valid unsigned byte range 0-255");
        }
        if (this.buffer.length > this.position) {
            this.buffer[this.position++] = decodedByte;
        } else {
            var buffer2 = buffer_1.alloc(Binary2.BUFFER_SIZE + this.buffer.length);
            this.buffer.copy(buffer2, 0, 0, this.buffer.length);
            this.buffer = buffer2;
            this.buffer[this.position++] = decodedByte;
        }
    };
    Binary2.prototype.write = function(sequence, offset) {
        offset = typeof offset === "number" ? offset : this.position;
        if (this.buffer.length < offset + sequence.length) {
            var buffer2 = buffer_1.alloc(this.buffer.length + sequence.length);
            this.buffer.copy(buffer2, 0, 0, this.buffer.length);
            this.buffer = buffer2;
        }
        if (ArrayBuffer.isView(sequence)) {
            this.buffer.set(ensureBuffer(sequence), offset);
            this.position = offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;
        } else if (typeof sequence === "string") {
            this.buffer.write(sequence, offset, sequence.length, "binary");
            this.position = offset + sequence.length > this.position ? offset + sequence.length : this.position;
        }
    };
    Binary2.prototype.read = function(position, length) {
        length = length && length > 0 ? length : this.position;
        return this.buffer.slice(position, position + length);
    };
    Binary2.prototype.value = function(asRaw) {
        asRaw = !!asRaw;
        if (asRaw && this.buffer.length === this.position) {
            return this.buffer;
        }
        if (asRaw) {
            return this.buffer.slice(0, this.position);
        }
        return this.buffer.toString("binary", 0, this.position);
    };
    Binary2.prototype.length = function() {
        return this.position;
    };
    Binary2.prototype.toJSON = function() {
        return this.buffer.toString("base64");
    };
    Binary2.prototype.toString = function(format4) {
        return this.buffer.toString(format4);
    };
    Binary2.prototype.toExtendedJSON = function(options6) {
        options6 = options6 || {
        };
        var base64String = this.buffer.toString("base64");
        var subType = Number(this.sub_type).toString(16);
        if (options6.legacy) {
            return {
                $binary: base64String,
                $type: subType.length === 1 ? "0" + subType : subType
            };
        }
        return {
            $binary: {
                base64: base64String,
                subType: subType.length === 1 ? "0" + subType : subType
            }
        };
    };
    Binary2.prototype.toUUID = function() {
        if (this.sub_type === Binary2.SUBTYPE_UUID) {
            return new UUID(this.buffer.slice(0, this.position));
        }
        throw new Error('Binary sub_type "' + this.sub_type + '" is not supported for converting to UUID. Only "' + Binary2.SUBTYPE_UUID + '" is currently supported.');
    };
    Binary2.fromExtendedJSON = function(doc, options6) {
        options6 = options6 || {
        };
        var data3;
        var type4;
        if ("$binary" in doc) {
            if (options6.legacy && typeof doc.$binary === "string" && "$type" in doc) {
                type4 = doc.$type ? parseInt(doc.$type, 16) : 0;
                data3 = buffer_1.from(doc.$binary, "base64");
            } else {
                if (typeof doc.$binary !== "string") {
                    type4 = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;
                    data3 = buffer_1.from(doc.$binary.base64, "base64");
                }
            }
        } else if ("$uuid" in doc) {
            type4 = 4;
            data3 = uuidHexStringToBuffer(doc.$uuid);
        }
        if (!data3) {
            throw new TypeError("Unexpected Binary Extended JSON format " + JSON.stringify(doc));
        }
        return new Binary2(data3, type4);
    };
    Binary2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    Binary2.prototype.inspect = function() {
        var asBuffer = this.value(true);
        return 'new Binary(Buffer.from("' + asBuffer.toString("hex") + '", "hex"), ' + this.sub_type + ")";
    };
    Binary2.BSON_BINARY_SUBTYPE_DEFAULT = 0;
    Binary2.BUFFER_SIZE = 256;
    Binary2.SUBTYPE_DEFAULT = 0;
    Binary2.SUBTYPE_FUNCTION = 1;
    Binary2.SUBTYPE_BYTE_ARRAY = 2;
    Binary2.SUBTYPE_UUID_OLD = 3;
    Binary2.SUBTYPE_UUID = 4;
    Binary2.SUBTYPE_MD5 = 5;
    Binary2.SUBTYPE_USER_DEFINED = 128;
    return Binary2;
}();
Object.defineProperty(Binary.prototype, "_bsontype", {
    value: "Binary"
});
var Code = function() {
    function Code2(code2, scope) {
        if (!(this instanceof Code2)) return new Code2(code2, scope);
        this.code = code2;
        this.scope = scope;
    }
    Code2.prototype.toJSON = function() {
        return {
            code: this.code,
            scope: this.scope
        };
    };
    Code2.prototype.toExtendedJSON = function() {
        if (this.scope) {
            return {
                $code: this.code,
                $scope: this.scope
            };
        }
        return {
            $code: this.code
        };
    };
    Code2.fromExtendedJSON = function(doc) {
        return new Code2(doc.$code, doc.$scope);
    };
    Code2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    Code2.prototype.inspect = function() {
        var codeJson = this.toJSON();
        return 'new Code("' + codeJson.code + '"' + (codeJson.scope ? ", " + JSON.stringify(codeJson.scope) : "") + ")";
    };
    return Code2;
}();
Object.defineProperty(Code.prototype, "_bsontype", {
    value: "Code"
});
function isDBRefLike(value4) {
    return isObjectLike(value4) && value4.$id != null && typeof value4.$ref === "string" && (value4.$db == null || typeof value4.$db === "string");
}
var DBRef = function() {
    function DBRef2(collection, oid, db1, fields) {
        if (!(this instanceof DBRef2)) return new DBRef2(collection, oid, db1, fields);
        var parts1 = collection.split(".");
        if (parts1.length === 2) {
            db1 = parts1.shift();
            collection = parts1.shift();
        }
        this.collection = collection;
        this.oid = oid;
        this.db = db1;
        this.fields = fields || {
        };
    }
    Object.defineProperty(DBRef2.prototype, "namespace", {
        get: function() {
            return this.collection;
        },
        set: function(value4) {
            this.collection = value4;
        },
        enumerable: false,
        configurable: true
    });
    DBRef2.prototype.toJSON = function() {
        var o = Object.assign({
            $ref: this.collection,
            $id: this.oid
        }, this.fields);
        if (this.db != null) o.$db = this.db;
        return o;
    };
    DBRef2.prototype.toExtendedJSON = function(options6) {
        options6 = options6 || {
        };
        var o = {
            $ref: this.collection,
            $id: this.oid
        };
        if (options6.legacy) {
            return o;
        }
        if (this.db) o.$db = this.db;
        o = Object.assign(o, this.fields);
        return o;
    };
    DBRef2.fromExtendedJSON = function(doc) {
        var copy3 = Object.assign({
        }, doc);
        delete copy3.$ref;
        delete copy3.$id;
        delete copy3.$db;
        return new DBRef2(doc.$ref, doc.$id, doc.$db, copy3);
    };
    DBRef2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    DBRef2.prototype.inspect = function() {
        var oid = this.oid === void 0 || this.oid.toString === void 0 ? this.oid : this.oid.toString();
        return 'new DBRef("' + this.namespace + '", new ObjectId("' + oid + '")' + (this.db ? ', "' + this.db + '"' : "") + ")";
    };
    return DBRef2;
}();
Object.defineProperty(DBRef.prototype, "_bsontype", {
    value: "DBRef"
});
var wasm1 = void 0;
try {
    wasm1 = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([
        0,
        97,
        115,
        109,
        1,
        0,
        0,
        0,
        1,
        13,
        2,
        96,
        0,
        1,
        127,
        96,
        4,
        127,
        127,
        127,
        127,
        1,
        127,
        3,
        7,
        6,
        0,
        1,
        1,
        1,
        1,
        1,
        6,
        6,
        1,
        127,
        1,
        65,
        0,
        11,
        7,
        50,
        6,
        3,
        109,
        117,
        108,
        0,
        1,
        5,
        100,
        105,
        118,
        95,
        115,
        0,
        2,
        5,
        100,
        105,
        118,
        95,
        117,
        0,
        3,
        5,
        114,
        101,
        109,
        95,
        115,
        0,
        4,
        5,
        114,
        101,
        109,
        95,
        117,
        0,
        5,
        8,
        103,
        101,
        116,
        95,
        104,
        105,
        103,
        104,
        0,
        0,
        10,
        191,
        1,
        6,
        4,
        0,
        35,
        0,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        126,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        127,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        128,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        129,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11,
        36,
        1,
        1,
        126,
        32,
        0,
        173,
        32,
        1,
        173,
        66,
        32,
        134,
        132,
        32,
        2,
        173,
        32,
        3,
        173,
        66,
        32,
        134,
        132,
        130,
        34,
        4,
        66,
        32,
        135,
        167,
        36,
        0,
        32,
        4,
        167,
        11
    ])), {
    }).exports;
} catch (_a) {
}
var TWO_PWR_16_DBL = 1 << 16;
var TWO_PWR_24_DBL = 1 << 24;
var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;
var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;
var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;
var INT_CACHE = {
};
var UINT_CACHE = {
};
var Long = function() {
    function Long2(low, high, unsigned) {
        if (low === void 0) {
            low = 0;
        }
        if (!(this instanceof Long2)) return new Long2(low, high, unsigned);
        if (typeof low === "bigint") {
            Object.assign(this, Long2.fromBigInt(low, !!high));
        } else if (typeof low === "string") {
            Object.assign(this, Long2.fromString(low, !!high));
        } else {
            this.low = low | 0;
            this.high = high | 0;
            this.unsigned = !!unsigned;
        }
        Object.defineProperty(this, "__isLong__", {
            value: true,
            configurable: false,
            writable: false,
            enumerable: false
        });
    }
    Long2.fromBits = function(lowBits, highBits, unsigned) {
        return new Long2(lowBits, highBits, unsigned);
    };
    Long2.fromInt = function(value4, unsigned) {
        var obj, cachedObj, cache;
        if (unsigned) {
            value4 >>>= 0;
            if (cache = 0 <= value4 && value4 < 256) {
                cachedObj = UINT_CACHE[value4];
                if (cachedObj) return cachedObj;
            }
            obj = Long2.fromBits(value4, (value4 | 0) < 0 ? -1 : 0, true);
            if (cache) UINT_CACHE[value4] = obj;
            return obj;
        } else {
            value4 |= 0;
            if (cache = -128 <= value4 && value4 < 128) {
                cachedObj = INT_CACHE[value4];
                if (cachedObj) return cachedObj;
            }
            obj = Long2.fromBits(value4, value4 < 0 ? -1 : 0, false);
            if (cache) INT_CACHE[value4] = obj;
            return obj;
        }
    };
    Long2.fromNumber = function(value4, unsigned) {
        if (isNaN(value4)) return unsigned ? Long2.UZERO : Long2.ZERO;
        if (unsigned) {
            if (value4 < 0) return Long2.UZERO;
            if (value4 >= TWO_PWR_64_DBL) return Long2.MAX_UNSIGNED_VALUE;
        } else {
            if (value4 <= -TWO_PWR_63_DBL) return Long2.MIN_VALUE;
            if (value4 + 1 >= TWO_PWR_63_DBL) return Long2.MAX_VALUE;
        }
        if (value4 < 0) return Long2.fromNumber(-value4, unsigned).neg();
        return Long2.fromBits(value4 % TWO_PWR_32_DBL | 0, value4 / TWO_PWR_32_DBL | 0, unsigned);
    };
    Long2.fromBigInt = function(value4, unsigned) {
        return Long2.fromString(value4.toString(), unsigned);
    };
    Long2.fromString = function(str1, unsigned, radix) {
        if (str1.length === 0) throw Error("empty string");
        if (str1 === "NaN" || str1 === "Infinity" || str1 === "+Infinity" || str1 === "-Infinity") return Long2.ZERO;
        if (typeof unsigned === "number") {
            radix = unsigned, unsigned = false;
        } else {
            unsigned = !!unsigned;
        }
        radix = radix || 10;
        if (radix < 2 || 36 < radix) throw RangeError("radix");
        var p2;
        if ((p2 = str1.indexOf("-")) > 0) throw Error("interior hyphen");
        else if (p2 === 0) {
            return Long2.fromString(str1.substring(1), unsigned, radix).neg();
        }
        var radixToPower = Long2.fromNumber(Math.pow(radix, 8));
        var result = Long2.ZERO;
        for(var i1 = 0; i1 < str1.length; i1 += 8){
            var size6 = Math.min(8, str1.length - i1), value4 = parseInt(str1.substring(i1, i1 + size6), radix);
            if (size6 < 8) {
                var power = Long2.fromNumber(Math.pow(radix, size6));
                result = result.mul(power).add(Long2.fromNumber(value4));
            } else {
                result = result.mul(radixToPower);
                result = result.add(Long2.fromNumber(value4));
            }
        }
        result.unsigned = unsigned;
        return result;
    };
    Long2.fromBytes = function(bytes, unsigned, le) {
        return le ? Long2.fromBytesLE(bytes, unsigned) : Long2.fromBytesBE(bytes, unsigned);
    };
    Long2.fromBytesLE = function(bytes, unsigned) {
        return new Long2(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);
    };
    Long2.fromBytesBE = function(bytes, unsigned) {
        return new Long2(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);
    };
    Long2.isLong = function(value5) {
        return isObjectLike(value5) && value5["__isLong__"] === true;
    };
    Long2.fromValue = function(val, unsigned) {
        if (typeof val === "number") return Long2.fromNumber(val, unsigned);
        if (typeof val === "string") return Long2.fromString(val, unsigned);
        return Long2.fromBits(val.low, val.high, typeof unsigned === "boolean" ? unsigned : val.unsigned);
    };
    Long2.prototype.add = function(addend) {
        if (!Long2.isLong(addend)) addend = Long2.fromValue(addend);
        var a48 = this.high >>> 16;
        var a32 = this.high & 65535;
        var a16 = this.low >>> 16;
        var a00 = this.low & 65535;
        var b48 = addend.high >>> 16;
        var b32 = addend.high & 65535;
        var b16 = addend.low >>> 16;
        var b00 = addend.low & 65535;
        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
        c00 += a00 + b00;
        c16 += c00 >>> 16;
        c00 &= 65535;
        c16 += a16 + b16;
        c32 += c16 >>> 16;
        c16 &= 65535;
        c32 += a32 + b32;
        c48 += c32 >>> 16;
        c32 &= 65535;
        c48 += a48 + b48;
        c48 &= 65535;
        return Long2.fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);
    };
    Long2.prototype.and = function(other) {
        if (!Long2.isLong(other)) other = Long2.fromValue(other);
        return Long2.fromBits(this.low & other.low, this.high & other.high, this.unsigned);
    };
    Long2.prototype.compare = function(other) {
        if (!Long2.isLong(other)) other = Long2.fromValue(other);
        if (this.eq(other)) return 0;
        var thisNeg = this.isNegative(), otherNeg = other.isNegative();
        if (thisNeg && !otherNeg) return -1;
        if (!thisNeg && otherNeg) return 1;
        if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1;
        return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;
    };
    Long2.prototype.comp = function(other) {
        return this.compare(other);
    };
    Long2.prototype.divide = function(divisor) {
        if (!Long2.isLong(divisor)) divisor = Long2.fromValue(divisor);
        if (divisor.isZero()) throw Error("division by zero");
        if (wasm1) {
            if (!this.unsigned && this.high === -2147483648 && divisor.low === -1 && divisor.high === -1) {
                return this;
            }
            var low = (this.unsigned ? wasm1.div_u : wasm1.div_s)(this.low, this.high, divisor.low, divisor.high);
            return Long2.fromBits(low, wasm1.get_high(), this.unsigned);
        }
        if (this.isZero()) return this.unsigned ? Long2.UZERO : Long2.ZERO;
        var approx, rem, res;
        if (!this.unsigned) {
            if (this.eq(Long2.MIN_VALUE)) {
                if (divisor.eq(Long2.ONE) || divisor.eq(Long2.NEG_ONE)) return Long2.MIN_VALUE;
                else if (divisor.eq(Long2.MIN_VALUE)) return Long2.ONE;
                else {
                    var halfThis = this.shr(1);
                    approx = halfThis.div(divisor).shl(1);
                    if (approx.eq(Long2.ZERO)) {
                        return divisor.isNegative() ? Long2.ONE : Long2.NEG_ONE;
                    } else {
                        rem = this.sub(divisor.mul(approx));
                        res = approx.add(rem.div(divisor));
                        return res;
                    }
                }
            } else if (divisor.eq(Long2.MIN_VALUE)) return this.unsigned ? Long2.UZERO : Long2.ZERO;
            if (this.isNegative()) {
                if (divisor.isNegative()) return this.neg().div(divisor.neg());
                return this.neg().div(divisor).neg();
            } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();
            res = Long2.ZERO;
        } else {
            if (!divisor.unsigned) divisor = divisor.toUnsigned();
            if (divisor.gt(this)) return Long2.UZERO;
            if (divisor.gt(this.shru(1))) return Long2.UONE;
            res = Long2.UZERO;
        }
        rem = this;
        while(rem.gte(divisor)){
            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));
            var log2 = Math.ceil(Math.log(approx) / Math.LN2);
            var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
            var approxRes = Long2.fromNumber(approx);
            var approxRem = approxRes.mul(divisor);
            while(approxRem.isNegative() || approxRem.gt(rem)){
                approx -= delta;
                approxRes = Long2.fromNumber(approx, this.unsigned);
                approxRem = approxRes.mul(divisor);
            }
            if (approxRes.isZero()) approxRes = Long2.ONE;
            res = res.add(approxRes);
            rem = rem.sub(approxRem);
        }
        return res;
    };
    Long2.prototype.div = function(divisor) {
        return this.divide(divisor);
    };
    Long2.prototype.equals = function(other) {
        if (!Long2.isLong(other)) other = Long2.fromValue(other);
        if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;
        return this.high === other.high && this.low === other.low;
    };
    Long2.prototype.eq = function(other) {
        return this.equals(other);
    };
    Long2.prototype.getHighBits = function() {
        return this.high;
    };
    Long2.prototype.getHighBitsUnsigned = function() {
        return this.high >>> 0;
    };
    Long2.prototype.getLowBits = function() {
        return this.low;
    };
    Long2.prototype.getLowBitsUnsigned = function() {
        return this.low >>> 0;
    };
    Long2.prototype.getNumBitsAbs = function() {
        if (this.isNegative()) {
            return this.eq(Long2.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
        }
        var val = this.high !== 0 ? this.high : this.low;
        var bit;
        for(bit = 31; bit > 0; bit--)if ((val & 1 << bit) !== 0) break;
        return this.high !== 0 ? bit + 33 : bit + 1;
    };
    Long2.prototype.greaterThan = function(other) {
        return this.comp(other) > 0;
    };
    Long2.prototype.gt = function(other) {
        return this.greaterThan(other);
    };
    Long2.prototype.greaterThanOrEqual = function(other) {
        return this.comp(other) >= 0;
    };
    Long2.prototype.gte = function(other) {
        return this.greaterThanOrEqual(other);
    };
    Long2.prototype.ge = function(other) {
        return this.greaterThanOrEqual(other);
    };
    Long2.prototype.isEven = function() {
        return (this.low & 1) === 0;
    };
    Long2.prototype.isNegative = function() {
        return !this.unsigned && this.high < 0;
    };
    Long2.prototype.isOdd = function() {
        return (this.low & 1) === 1;
    };
    Long2.prototype.isPositive = function() {
        return this.unsigned || this.high >= 0;
    };
    Long2.prototype.isZero = function() {
        return this.high === 0 && this.low === 0;
    };
    Long2.prototype.lessThan = function(other) {
        return this.comp(other) < 0;
    };
    Long2.prototype.lt = function(other) {
        return this.lessThan(other);
    };
    Long2.prototype.lessThanOrEqual = function(other) {
        return this.comp(other) <= 0;
    };
    Long2.prototype.lte = function(other) {
        return this.lessThanOrEqual(other);
    };
    Long2.prototype.modulo = function(divisor) {
        if (!Long2.isLong(divisor)) divisor = Long2.fromValue(divisor);
        if (wasm1) {
            var low = (this.unsigned ? wasm1.rem_u : wasm1.rem_s)(this.low, this.high, divisor.low, divisor.high);
            return Long2.fromBits(low, wasm1.get_high(), this.unsigned);
        }
        return this.sub(this.div(divisor).mul(divisor));
    };
    Long2.prototype.mod = function(divisor) {
        return this.modulo(divisor);
    };
    Long2.prototype.rem = function(divisor) {
        return this.modulo(divisor);
    };
    Long2.prototype.multiply = function(multiplier) {
        if (this.isZero()) return Long2.ZERO;
        if (!Long2.isLong(multiplier)) multiplier = Long2.fromValue(multiplier);
        if (wasm1) {
            var low = wasm1.mul(this.low, this.high, multiplier.low, multiplier.high);
            return Long2.fromBits(low, wasm1.get_high(), this.unsigned);
        }
        if (multiplier.isZero()) return Long2.ZERO;
        if (this.eq(Long2.MIN_VALUE)) return multiplier.isOdd() ? Long2.MIN_VALUE : Long2.ZERO;
        if (multiplier.eq(Long2.MIN_VALUE)) return this.isOdd() ? Long2.MIN_VALUE : Long2.ZERO;
        if (this.isNegative()) {
            if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());
            else return this.neg().mul(multiplier).neg();
        } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg();
        if (this.lt(Long2.TWO_PWR_24) && multiplier.lt(Long2.TWO_PWR_24)) return Long2.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);
        var a48 = this.high >>> 16;
        var a32 = this.high & 65535;
        var a16 = this.low >>> 16;
        var a00 = this.low & 65535;
        var b48 = multiplier.high >>> 16;
        var b32 = multiplier.high & 65535;
        var b16 = multiplier.low >>> 16;
        var b00 = multiplier.low & 65535;
        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
        c00 += a00 * b00;
        c16 += c00 >>> 16;
        c00 &= 65535;
        c16 += a16 * b00;
        c32 += c16 >>> 16;
        c16 &= 65535;
        c16 += a00 * b16;
        c32 += c16 >>> 16;
        c16 &= 65535;
        c32 += a32 * b00;
        c48 += c32 >>> 16;
        c32 &= 65535;
        c32 += a16 * b16;
        c48 += c32 >>> 16;
        c32 &= 65535;
        c32 += a00 * b32;
        c48 += c32 >>> 16;
        c32 &= 65535;
        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
        c48 &= 65535;
        return Long2.fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);
    };
    Long2.prototype.mul = function(multiplier) {
        return this.multiply(multiplier);
    };
    Long2.prototype.negate = function() {
        if (!this.unsigned && this.eq(Long2.MIN_VALUE)) return Long2.MIN_VALUE;
        return this.not().add(Long2.ONE);
    };
    Long2.prototype.neg = function() {
        return this.negate();
    };
    Long2.prototype.not = function() {
        return Long2.fromBits(~this.low, ~this.high, this.unsigned);
    };
    Long2.prototype.notEquals = function(other) {
        return !this.equals(other);
    };
    Long2.prototype.neq = function(other) {
        return this.notEquals(other);
    };
    Long2.prototype.ne = function(other) {
        return this.notEquals(other);
    };
    Long2.prototype.or = function(other) {
        if (!Long2.isLong(other)) other = Long2.fromValue(other);
        return Long2.fromBits(this.low | other.low, this.high | other.high, this.unsigned);
    };
    Long2.prototype.shiftLeft = function(numBits) {
        if (Long2.isLong(numBits)) numBits = numBits.toInt();
        if ((numBits &= 63) === 0) return this;
        else if (numBits < 32) return Long2.fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);
        else return Long2.fromBits(0, this.low << numBits - 32, this.unsigned);
    };
    Long2.prototype.shl = function(numBits) {
        return this.shiftLeft(numBits);
    };
    Long2.prototype.shiftRight = function(numBits) {
        if (Long2.isLong(numBits)) numBits = numBits.toInt();
        if ((numBits &= 63) === 0) return this;
        else if (numBits < 32) return Long2.fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);
        else return Long2.fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);
    };
    Long2.prototype.shr = function(numBits) {
        return this.shiftRight(numBits);
    };
    Long2.prototype.shiftRightUnsigned = function(numBits) {
        if (Long2.isLong(numBits)) numBits = numBits.toInt();
        numBits &= 63;
        if (numBits === 0) return this;
        else {
            var high = this.high;
            if (numBits < 32) {
                var low = this.low;
                return Long2.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits, this.unsigned);
            } else if (numBits === 32) return Long2.fromBits(high, 0, this.unsigned);
            else return Long2.fromBits(high >>> numBits - 32, 0, this.unsigned);
        }
    };
    Long2.prototype.shr_u = function(numBits) {
        return this.shiftRightUnsigned(numBits);
    };
    Long2.prototype.shru = function(numBits) {
        return this.shiftRightUnsigned(numBits);
    };
    Long2.prototype.subtract = function(subtrahend) {
        if (!Long2.isLong(subtrahend)) subtrahend = Long2.fromValue(subtrahend);
        return this.add(subtrahend.neg());
    };
    Long2.prototype.sub = function(subtrahend) {
        return this.subtract(subtrahend);
    };
    Long2.prototype.toInt = function() {
        return this.unsigned ? this.low >>> 0 : this.low;
    };
    Long2.prototype.toNumber = function() {
        if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);
        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
    };
    Long2.prototype.toBigInt = function() {
        return BigInt(this.toString());
    };
    Long2.prototype.toBytes = function(le) {
        return le ? this.toBytesLE() : this.toBytesBE();
    };
    Long2.prototype.toBytesLE = function() {
        var hi = this.high, lo = this.low;
        return [
            lo & 255,
            lo >>> 8 & 255,
            lo >>> 16 & 255,
            lo >>> 24,
            hi & 255,
            hi >>> 8 & 255,
            hi >>> 16 & 255,
            hi >>> 24
        ];
    };
    Long2.prototype.toBytesBE = function() {
        var hi = this.high, lo = this.low;
        return [
            hi >>> 24,
            hi >>> 16 & 255,
            hi >>> 8 & 255,
            hi & 255,
            lo >>> 24,
            lo >>> 16 & 255,
            lo >>> 8 & 255,
            lo & 255
        ];
    };
    Long2.prototype.toSigned = function() {
        if (!this.unsigned) return this;
        return Long2.fromBits(this.low, this.high, false);
    };
    Long2.prototype.toString = function(radix) {
        radix = radix || 10;
        if (radix < 2 || 36 < radix) throw RangeError("radix");
        if (this.isZero()) return "0";
        if (this.isNegative()) {
            if (this.eq(Long2.MIN_VALUE)) {
                var radixLong = Long2.fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);
                return div.toString(radix) + rem1.toInt().toString(radix);
            } else return "-" + this.neg().toString(radix);
        }
        var radixToPower = Long2.fromNumber(Math.pow(radix, 6), this.unsigned);
        var rem = this;
        var result = "";
        while(true){
            var remDiv = rem.div(radixToPower);
            var intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;
            var digits = intval.toString(radix);
            rem = remDiv;
            if (rem.isZero()) {
                return digits + result;
            } else {
                while(digits.length < 6)digits = "0" + digits;
                result = "" + digits + result;
            }
        }
    };
    Long2.prototype.toUnsigned = function() {
        if (this.unsigned) return this;
        return Long2.fromBits(this.low, this.high, true);
    };
    Long2.prototype.xor = function(other) {
        if (!Long2.isLong(other)) other = Long2.fromValue(other);
        return Long2.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
    };
    Long2.prototype.eqz = function() {
        return this.isZero();
    };
    Long2.prototype.le = function(other) {
        return this.lessThanOrEqual(other);
    };
    Long2.prototype.toExtendedJSON = function(options6) {
        if (options6 && options6.relaxed) return this.toNumber();
        return {
            $numberLong: this.toString()
        };
    };
    Long2.fromExtendedJSON = function(doc, options6) {
        var result = Long2.fromString(doc.$numberLong);
        return options6 && options6.relaxed ? result.toNumber() : result;
    };
    Long2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    Long2.prototype.inspect = function() {
        return 'new Long("' + this.toString() + '"' + (this.unsigned ? ", true" : "") + ")";
    };
    Long2.TWO_PWR_24 = Long2.fromInt(TWO_PWR_24_DBL);
    Long2.MAX_UNSIGNED_VALUE = Long2.fromBits(4294967295 | 0, 4294967295 | 0, true);
    Long2.ZERO = Long2.fromInt(0);
    Long2.UZERO = Long2.fromInt(0, true);
    Long2.ONE = Long2.fromInt(1);
    Long2.UONE = Long2.fromInt(1, true);
    Long2.NEG_ONE = Long2.fromInt(-1);
    Long2.MAX_VALUE = Long2.fromBits(4294967295 | 0, 2147483647 | 0, false);
    Long2.MIN_VALUE = Long2.fromBits(0, 2147483648 | 0, false);
    return Long2;
}();
Object.defineProperty(Long.prototype, "__isLong__", {
    value: true
});
Object.defineProperty(Long.prototype, "_bsontype", {
    value: "Long"
});
var PARSE_STRING_REGEXP = /^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/;
var PARSE_INF_REGEXP = /^(\+|-)?(Infinity|inf)$/i;
var PARSE_NAN_REGEXP = /^(\+|-)?NaN$/i;
var EXPONENT_MAX = 6111;
var EXPONENT_MIN = -6176;
var EXPONENT_BIAS = 6176;
var MAX_DIGITS = 34;
var NAN_BUFFER = [
    124,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
].reverse();
var INF_NEGATIVE_BUFFER = [
    248,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
].reverse();
var INF_POSITIVE_BUFFER = [
    120,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
].reverse();
var EXPONENT_REGEX = /^([-+])?(\d+)?$/;
var COMBINATION_MASK = 31;
var EXPONENT_MASK = 16383;
var COMBINATION_INFINITY = 30;
var COMBINATION_NAN = 31;
function isDigit(value5) {
    return !isNaN(parseInt(value5, 10));
}
function divideu128(value5) {
    var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);
    var _rem = Long.fromNumber(0);
    if (!value5.parts[0] && !value5.parts[1] && !value5.parts[2] && !value5.parts[3]) {
        return {
            quotient: value5,
            rem: _rem
        };
    }
    for(var i1 = 0; i1 <= 3; i1++){
        _rem = _rem.shiftLeft(32);
        _rem = _rem.add(new Long(value5.parts[i1], 0));
        value5.parts[i1] = _rem.div(DIVISOR).low;
        _rem = _rem.modulo(DIVISOR);
    }
    return {
        quotient: value5,
        rem: _rem
    };
}
function multiply64x2(left, right) {
    if (!left && !right) {
        return {
            high: Long.fromNumber(0),
            low: Long.fromNumber(0)
        };
    }
    var leftHigh = left.shiftRightUnsigned(32);
    var leftLow = new Long(left.getLowBits(), 0);
    var rightHigh = right.shiftRightUnsigned(32);
    var rightLow = new Long(right.getLowBits(), 0);
    var productHigh = leftHigh.multiply(rightHigh);
    var productMid = leftHigh.multiply(rightLow);
    var productMid2 = leftLow.multiply(rightHigh);
    var productLow = leftLow.multiply(rightLow);
    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));
    productMid = new Long(productMid.getLowBits(), 0).add(productMid2).add(productLow.shiftRightUnsigned(32));
    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));
    productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));
    return {
        high: productHigh,
        low: productLow
    };
}
function lessThan(left, right) {
    var uhleft = left.high >>> 0;
    var uhright = right.high >>> 0;
    if (uhleft < uhright) {
        return true;
    } else if (uhleft === uhright) {
        var ulleft = left.low >>> 0;
        var ulright = right.low >>> 0;
        if (ulleft < ulright) return true;
    }
    return false;
}
function invalidErr(string, message4) {
    throw new TypeError('"' + string + '" is not a valid Decimal128 string - ' + message4);
}
var Decimal128 = function() {
    function Decimal1282(bytes) {
        if (!(this instanceof Decimal1282)) return new Decimal1282(bytes);
        if (typeof bytes === "string") {
            this.bytes = Decimal1282.fromString(bytes).bytes;
        } else {
            this.bytes = bytes;
        }
    }
    Decimal1282.fromString = function(representation) {
        var isNegative = false;
        var sawRadix = false;
        var foundNonZero = false;
        var significantDigits = 0;
        var nDigitsRead = 0;
        var nDigits = 0;
        var radixPosition = 0;
        var firstNonZero = 0;
        var digits = [
            0
        ];
        var nDigitsStored = 0;
        var digitsInsert = 0;
        var firstDigit = 0;
        var lastDigit = 0;
        var exponent = 0;
        var i1 = 0;
        var significandHigh = new Long(0, 0);
        var significandLow = new Long(0, 0);
        var biasedExponent = 0;
        var index = 0;
        if (representation.length >= 7000) {
            throw new TypeError("" + representation + " not a valid Decimal128 string");
        }
        var stringMatch = representation.match(PARSE_STRING_REGEXP);
        var infMatch = representation.match(PARSE_INF_REGEXP);
        var nanMatch = representation.match(PARSE_NAN_REGEXP);
        if (!stringMatch && !infMatch && !nanMatch || representation.length === 0) {
            throw new TypeError("" + representation + " not a valid Decimal128 string");
        }
        if (stringMatch) {
            var unsignedNumber = stringMatch[2];
            var e = stringMatch[4];
            var expSign = stringMatch[5];
            var expNumber = stringMatch[6];
            if (e && expNumber === void 0) invalidErr(representation, "missing exponent power");
            if (e && unsignedNumber === void 0) invalidErr(representation, "missing exponent base");
            if (e === void 0 && (expSign || expNumber)) {
                invalidErr(representation, "missing e before exponent");
            }
        }
        if (representation[index] === "+" || representation[index] === "-") {
            isNegative = representation[index++] === "-";
        }
        if (!isDigit(representation[index]) && representation[index] !== ".") {
            if (representation[index] === "i" || representation[index] === "I") {
                return new Decimal1282(buffer_1.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));
            } else if (representation[index] === "N") {
                return new Decimal1282(buffer_1.from(NAN_BUFFER));
            }
        }
        while(isDigit(representation[index]) || representation[index] === "."){
            if (representation[index] === ".") {
                if (sawRadix) invalidErr(representation, "contains multiple periods");
                sawRadix = true;
                index = index + 1;
                continue;
            }
            if (nDigitsStored < 34) {
                if (representation[index] !== "0" || foundNonZero) {
                    if (!foundNonZero) {
                        firstNonZero = nDigitsRead;
                    }
                    foundNonZero = true;
                    digits[digitsInsert++] = parseInt(representation[index], 10);
                    nDigitsStored = nDigitsStored + 1;
                }
            }
            if (foundNonZero) nDigits = nDigits + 1;
            if (sawRadix) radixPosition = radixPosition + 1;
            nDigitsRead = nDigitsRead + 1;
            index = index + 1;
        }
        if (sawRadix && !nDigitsRead) throw new TypeError("" + representation + " not a valid Decimal128 string");
        if (representation[index] === "e" || representation[index] === "E") {
            var match = representation.substr(++index).match(EXPONENT_REGEX);
            if (!match || !match[2]) return new Decimal1282(buffer_1.from(NAN_BUFFER));
            exponent = parseInt(match[0], 10);
            index = index + match[0].length;
        }
        if (representation[index]) return new Decimal1282(buffer_1.from(NAN_BUFFER));
        firstDigit = 0;
        if (!nDigitsStored) {
            firstDigit = 0;
            lastDigit = 0;
            digits[0] = 0;
            nDigits = 1;
            nDigitsStored = 1;
            significantDigits = 0;
        } else {
            lastDigit = nDigitsStored - 1;
            significantDigits = nDigits;
            if (significantDigits !== 1) {
                while(representation[firstNonZero + significantDigits - 1] === "0"){
                    significantDigits = significantDigits - 1;
                }
            }
        }
        if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {
            exponent = EXPONENT_MIN;
        } else {
            exponent = exponent - radixPosition;
        }
        while(exponent > EXPONENT_MAX){
            lastDigit = lastDigit + 1;
            if (lastDigit - firstDigit > MAX_DIGITS) {
                var digitsString = digits.join("");
                if (digitsString.match(/^0+$/)) {
                    exponent = EXPONENT_MAX;
                    break;
                }
                invalidErr(representation, "overflow");
            }
            exponent = exponent - 1;
        }
        while(exponent < EXPONENT_MIN || nDigitsStored < nDigits){
            if (lastDigit === 0 && significantDigits < nDigitsStored) {
                exponent = EXPONENT_MIN;
                significantDigits = 0;
                break;
            }
            if (nDigitsStored < nDigits) {
                nDigits = nDigits - 1;
            } else {
                lastDigit = lastDigit - 1;
            }
            if (exponent < EXPONENT_MAX) {
                exponent = exponent + 1;
            } else {
                var digitsString = digits.join("");
                if (digitsString.match(/^0+$/)) {
                    exponent = EXPONENT_MAX;
                    break;
                }
                invalidErr(representation, "overflow");
            }
        }
        if (lastDigit - firstDigit + 1 < significantDigits) {
            var endOfString = nDigitsRead;
            if (sawRadix) {
                firstNonZero = firstNonZero + 1;
                endOfString = endOfString + 1;
            }
            if (isNegative) {
                firstNonZero = firstNonZero + 1;
                endOfString = endOfString + 1;
            }
            var roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);
            var roundBit = 0;
            if (roundDigit >= 5) {
                roundBit = 1;
                if (roundDigit === 5) {
                    roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;
                    for(i1 = firstNonZero + lastDigit + 2; i1 < endOfString; i1++){
                        if (parseInt(representation[i1], 10)) {
                            roundBit = 1;
                            break;
                        }
                    }
                }
            }
            if (roundBit) {
                var dIdx = lastDigit;
                for(; dIdx >= 0; dIdx--){
                    if (++digits[dIdx] > 9) {
                        digits[dIdx] = 0;
                        if (dIdx === 0) {
                            if (exponent < EXPONENT_MAX) {
                                exponent = exponent + 1;
                                digits[dIdx] = 1;
                            } else {
                                return new Decimal1282(buffer_1.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));
                            }
                        }
                    }
                }
            }
        }
        significandHigh = Long.fromNumber(0);
        significandLow = Long.fromNumber(0);
        if (significantDigits === 0) {
            significandHigh = Long.fromNumber(0);
            significandLow = Long.fromNumber(0);
        } else if (lastDigit - firstDigit < 17) {
            var dIdx = firstDigit;
            significandLow = Long.fromNumber(digits[dIdx++]);
            significandHigh = new Long(0, 0);
            for(; dIdx <= lastDigit; dIdx++){
                significandLow = significandLow.multiply(Long.fromNumber(10));
                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));
            }
        } else {
            var dIdx = firstDigit;
            significandHigh = Long.fromNumber(digits[dIdx++]);
            for(; dIdx <= lastDigit - 17; dIdx++){
                significandHigh = significandHigh.multiply(Long.fromNumber(10));
                significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));
            }
            significandLow = Long.fromNumber(digits[dIdx++]);
            for(; dIdx <= lastDigit; dIdx++){
                significandLow = significandLow.multiply(Long.fromNumber(10));
                significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));
            }
        }
        var significand = multiply64x2(significandHigh, Long.fromString("100000000000000000"));
        significand.low = significand.low.add(significandLow);
        if (lessThan(significand.low, significandLow)) {
            significand.high = significand.high.add(Long.fromNumber(1));
        }
        biasedExponent = exponent + EXPONENT_BIAS;
        var dec = {
            low: Long.fromNumber(0),
            high: Long.fromNumber(0)
        };
        if (significand.high.shiftRightUnsigned(49).and(Long.fromNumber(1)).equals(Long.fromNumber(1))) {
            dec.high = dec.high.or(Long.fromNumber(3).shiftLeft(61));
            dec.high = dec.high.or(Long.fromNumber(biasedExponent).and(Long.fromNumber(16383).shiftLeft(47)));
            dec.high = dec.high.or(significand.high.and(Long.fromNumber(140737488355327)));
        } else {
            dec.high = dec.high.or(Long.fromNumber(biasedExponent & 16383).shiftLeft(49));
            dec.high = dec.high.or(significand.high.and(Long.fromNumber(562949953421311)));
        }
        dec.low = significand.low;
        if (isNegative) {
            dec.high = dec.high.or(Long.fromString("9223372036854775808"));
        }
        var buffer2 = buffer_1.alloc(16);
        index = 0;
        buffer2[index++] = dec.low.low & 255;
        buffer2[index++] = dec.low.low >> 8 & 255;
        buffer2[index++] = dec.low.low >> 16 & 255;
        buffer2[index++] = dec.low.low >> 24 & 255;
        buffer2[index++] = dec.low.high & 255;
        buffer2[index++] = dec.low.high >> 8 & 255;
        buffer2[index++] = dec.low.high >> 16 & 255;
        buffer2[index++] = dec.low.high >> 24 & 255;
        buffer2[index++] = dec.high.low & 255;
        buffer2[index++] = dec.high.low >> 8 & 255;
        buffer2[index++] = dec.high.low >> 16 & 255;
        buffer2[index++] = dec.high.low >> 24 & 255;
        buffer2[index++] = dec.high.high & 255;
        buffer2[index++] = dec.high.high >> 8 & 255;
        buffer2[index++] = dec.high.high >> 16 & 255;
        buffer2[index++] = dec.high.high >> 24 & 255;
        return new Decimal1282(buffer2);
    };
    Decimal1282.prototype.toString = function() {
        var biased_exponent;
        var significand_digits = 0;
        var significand = new Array(36);
        for(var i1 = 0; i1 < significand.length; i1++)significand[i1] = 0;
        var index = 0;
        var is_zero = false;
        var significand_msb;
        var significand128 = {
            parts: [
                0,
                0,
                0,
                0
            ]
        };
        var j, k;
        var string = [];
        index = 0;
        var buffer2 = this.bytes;
        var low = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
        var midl = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
        var midh = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
        var high = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
        index = 0;
        var dec = {
            low: new Long(low, midl),
            high: new Long(midh, high)
        };
        if (dec.high.lessThan(Long.ZERO)) {
            string.push("-");
        }
        var combination = high >> 26 & COMBINATION_MASK;
        if (combination >> 3 === 3) {
            if (combination === COMBINATION_INFINITY) {
                return string.join("") + "Infinity";
            } else if (combination === COMBINATION_NAN) {
                return "NaN";
            } else {
                biased_exponent = high >> 15 & EXPONENT_MASK;
                significand_msb = 8 + (high >> 14 & 1);
            }
        } else {
            significand_msb = high >> 14 & 7;
            biased_exponent = high >> 17 & EXPONENT_MASK;
        }
        var exponent = biased_exponent - EXPONENT_BIAS;
        significand128.parts[0] = (high & 16383) + ((significand_msb & 15) << 14);
        significand128.parts[1] = midh;
        significand128.parts[2] = midl;
        significand128.parts[3] = low;
        if (significand128.parts[0] === 0 && significand128.parts[1] === 0 && significand128.parts[2] === 0 && significand128.parts[3] === 0) {
            is_zero = true;
        } else {
            for(k = 3; k >= 0; k--){
                var least_digits = 0;
                var result = divideu128(significand128);
                significand128 = result.quotient;
                least_digits = result.rem.low;
                if (!least_digits) continue;
                for(j = 8; j >= 0; j--){
                    significand[k * 9 + j] = least_digits % 10;
                    least_digits = Math.floor(least_digits / 10);
                }
            }
        }
        if (is_zero) {
            significand_digits = 1;
            significand[index] = 0;
        } else {
            significand_digits = 36;
            while(!significand[index]){
                significand_digits = significand_digits - 1;
                index = index + 1;
            }
        }
        var scientific_exponent = significand_digits - 1 + exponent;
        if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {
            if (significand_digits > 34) {
                string.push("" + 0);
                if (exponent > 0) string.push("E+" + exponent);
                else if (exponent < 0) string.push("E" + exponent);
                return string.join("");
            }
            string.push("" + significand[index++]);
            significand_digits = significand_digits - 1;
            if (significand_digits) {
                string.push(".");
            }
            for(var i1 = 0; i1 < significand_digits; i1++){
                string.push("" + significand[index++]);
            }
            string.push("E");
            if (scientific_exponent > 0) {
                string.push("+" + scientific_exponent);
            } else {
                string.push("" + scientific_exponent);
            }
        } else {
            if (exponent >= 0) {
                for(var i1 = 0; i1 < significand_digits; i1++){
                    string.push("" + significand[index++]);
                }
            } else {
                var radix_position = significand_digits + exponent;
                if (radix_position > 0) {
                    for(var i1 = 0; i1 < radix_position; i1++){
                        string.push("" + significand[index++]);
                    }
                } else {
                    string.push("0");
                }
                string.push(".");
                while(radix_position++ < 0){
                    string.push("0");
                }
                for(var i1 = 0; i1 < significand_digits - Math.max(radix_position - 1, 0); i1++){
                    string.push("" + significand[index++]);
                }
            }
        }
        return string.join("");
    };
    Decimal1282.prototype.toJSON = function() {
        return {
            $numberDecimal: this.toString()
        };
    };
    Decimal1282.prototype.toExtendedJSON = function() {
        return {
            $numberDecimal: this.toString()
        };
    };
    Decimal1282.fromExtendedJSON = function(doc) {
        return Decimal1282.fromString(doc.$numberDecimal);
    };
    Decimal1282.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    Decimal1282.prototype.inspect = function() {
        return 'new Decimal128("' + this.toString() + '")';
    };
    return Decimal1282;
}();
Object.defineProperty(Decimal128.prototype, "_bsontype", {
    value: "Decimal128"
});
var Double = function() {
    function Double2(value5) {
        if (!(this instanceof Double2)) return new Double2(value5);
        if (value5 instanceof Number) {
            value5 = value5.valueOf();
        }
        this.value = +value5;
    }
    Double2.prototype.valueOf = function() {
        return this.value;
    };
    Double2.prototype.toJSON = function() {
        return this.value;
    };
    Double2.prototype.toExtendedJSON = function(options6) {
        if (options6 && (options6.legacy || options6.relaxed && isFinite(this.value))) {
            return this.value;
        }
        if (Object.is(Math.sign(this.value), -0)) {
            return {
                $numberDouble: "-" + this.value.toFixed(1)
            };
        }
        var $numberDouble;
        if (Number.isInteger(this.value)) {
            $numberDouble = this.value.toFixed(1);
            if ($numberDouble.length >= 13) {
                $numberDouble = this.value.toExponential(13).toUpperCase();
            }
        } else {
            $numberDouble = this.value.toString();
        }
        return {
            $numberDouble
        };
    };
    Double2.fromExtendedJSON = function(doc, options6) {
        var doubleValue = parseFloat(doc.$numberDouble);
        return options6 && options6.relaxed ? doubleValue : new Double2(doubleValue);
    };
    Double2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    Double2.prototype.inspect = function() {
        var eJSON = this.toExtendedJSON();
        return "new Double(" + eJSON.$numberDouble + ")";
    };
    return Double2;
}();
Object.defineProperty(Double.prototype, "_bsontype", {
    value: "Double"
});
var Int32 = function() {
    function Int322(value5) {
        if (!(this instanceof Int322)) return new Int322(value5);
        if (value5 instanceof Number) {
            value5 = value5.valueOf();
        }
        this.value = +value5;
    }
    Int322.prototype.valueOf = function() {
        return this.value;
    };
    Int322.prototype.toJSON = function() {
        return this.value;
    };
    Int322.prototype.toExtendedJSON = function(options6) {
        if (options6 && (options6.relaxed || options6.legacy)) return this.value;
        return {
            $numberInt: this.value.toString()
        };
    };
    Int322.fromExtendedJSON = function(doc, options6) {
        return options6 && options6.relaxed ? parseInt(doc.$numberInt, 10) : new Int322(doc.$numberInt);
    };
    Int322.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    Int322.prototype.inspect = function() {
        return "new Int32(" + this.valueOf() + ")";
    };
    return Int322;
}();
Object.defineProperty(Int32.prototype, "_bsontype", {
    value: "Int32"
});
var MaxKey = function() {
    function MaxKey2() {
        if (!(this instanceof MaxKey2)) return new MaxKey2();
    }
    MaxKey2.prototype.toExtendedJSON = function() {
        return {
            $maxKey: 1
        };
    };
    MaxKey2.fromExtendedJSON = function() {
        return new MaxKey2();
    };
    MaxKey2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    MaxKey2.prototype.inspect = function() {
        return "new MaxKey()";
    };
    return MaxKey2;
}();
Object.defineProperty(MaxKey.prototype, "_bsontype", {
    value: "MaxKey"
});
var MinKey = function() {
    function MinKey2() {
        if (!(this instanceof MinKey2)) return new MinKey2();
    }
    MinKey2.prototype.toExtendedJSON = function() {
        return {
            $minKey: 1
        };
    };
    MinKey2.fromExtendedJSON = function() {
        return new MinKey2();
    };
    MinKey2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    MinKey2.prototype.inspect = function() {
        return "new MinKey()";
    };
    return MinKey2;
}();
Object.defineProperty(MinKey.prototype, "_bsontype", {
    value: "MinKey"
});
var checkForHexRegExp = new RegExp("^[0-9a-fA-F]{24}$");
var PROCESS_UNIQUE = null;
var kId = Symbol("id");
var ObjectId = function() {
    function ObjectId2(id1) {
        if (!(this instanceof ObjectId2)) return new ObjectId2(id1);
        if (id1 instanceof ObjectId2) {
            this[kId] = id1.id;
            this.__id = id1.__id;
        }
        if (typeof id1 === "object" && id1 && "id" in id1) {
            if ("toHexString" in id1 && typeof id1.toHexString === "function") {
                this[kId] = buffer_1.from(id1.toHexString(), "hex");
            } else {
                this[kId] = typeof id1.id === "string" ? buffer_1.from(id1.id) : id1.id;
            }
        }
        if (id1 == null || typeof id1 === "number") {
            this[kId] = ObjectId2.generate(typeof id1 === "number" ? id1 : void 0);
            if (ObjectId2.cacheHexString) {
                this.__id = this.id.toString("hex");
            }
        }
        if (ArrayBuffer.isView(id1) && id1.byteLength === 12) {
            this[kId] = ensureBuffer(id1);
        }
        if (typeof id1 === "string") {
            if (id1.length === 12) {
                var bytes = buffer_1.from(id1);
                if (bytes.byteLength === 12) {
                    this[kId] = bytes;
                }
            } else if (id1.length === 24 && checkForHexRegExp.test(id1)) {
                this[kId] = buffer_1.from(id1, "hex");
            } else {
                throw new TypeError("Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters");
            }
        }
        if (ObjectId2.cacheHexString) {
            this.__id = this.id.toString("hex");
        }
    }
    Object.defineProperty(ObjectId2.prototype, "id", {
        get: function() {
            return this[kId];
        },
        set: function(value5) {
            this[kId] = value5;
            if (ObjectId2.cacheHexString) {
                this.__id = value5.toString("hex");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ObjectId2.prototype, "generationTime", {
        get: function() {
            return this.id.readInt32BE(0);
        },
        set: function(value5) {
            this.id.writeUInt32BE(value5, 0);
        },
        enumerable: false,
        configurable: true
    });
    ObjectId2.prototype.toHexString = function() {
        if (ObjectId2.cacheHexString && this.__id) {
            return this.__id;
        }
        var hexString = this.id.toString("hex");
        if (ObjectId2.cacheHexString && !this.__id) {
            this.__id = hexString;
        }
        return hexString;
    };
    ObjectId2.getInc = function() {
        return ObjectId2.index = (ObjectId2.index + 1) % 16777215;
    };
    ObjectId2.generate = function(time) {
        if (typeof time !== "number") {
            time = ~~(Date.now() / 1000);
        }
        var inc = ObjectId2.getInc();
        var buffer2 = buffer_1.alloc(12);
        buffer2.writeUInt32BE(time, 0);
        if (PROCESS_UNIQUE === null) {
            PROCESS_UNIQUE = randomBytes(5);
        }
        buffer2[4] = PROCESS_UNIQUE[0];
        buffer2[5] = PROCESS_UNIQUE[1];
        buffer2[6] = PROCESS_UNIQUE[2];
        buffer2[7] = PROCESS_UNIQUE[3];
        buffer2[8] = PROCESS_UNIQUE[4];
        buffer2[11] = inc & 255;
        buffer2[10] = inc >> 8 & 255;
        buffer2[9] = inc >> 16 & 255;
        return buffer2;
    };
    ObjectId2.prototype.toString = function(format4) {
        if (format4) return this.id.toString(format4);
        return this.toHexString();
    };
    ObjectId2.prototype.toJSON = function() {
        return this.toHexString();
    };
    ObjectId2.prototype.equals = function(otherId) {
        if (otherId === void 0 || otherId === null) {
            return false;
        }
        if (otherId instanceof ObjectId2) {
            return this.toString() === otherId.toString();
        }
        if (typeof otherId === "string" && ObjectId2.isValid(otherId) && otherId.length === 12 && isUint8Array(this.id)) {
            return otherId === buffer_1.prototype.toString.call(this.id, "latin1");
        }
        if (typeof otherId === "string" && ObjectId2.isValid(otherId) && otherId.length === 24) {
            return otherId.toLowerCase() === this.toHexString();
        }
        if (typeof otherId === "string" && ObjectId2.isValid(otherId) && otherId.length === 12) {
            return buffer_1.from(otherId).equals(this.id);
        }
        if (typeof otherId === "object" && "toHexString" in otherId && typeof otherId.toHexString === "function") {
            return otherId.toHexString() === this.toHexString();
        }
        return false;
    };
    ObjectId2.prototype.getTimestamp = function() {
        var timestamp = new Date();
        var time = this.id.readUInt32BE(0);
        timestamp.setTime(Math.floor(time) * 1000);
        return timestamp;
    };
    ObjectId2.createPk = function() {
        return new ObjectId2();
    };
    ObjectId2.createFromTime = function(time) {
        var buffer2 = buffer_1.from([
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]);
        buffer2.writeUInt32BE(time, 0);
        return new ObjectId2(buffer2);
    };
    ObjectId2.createFromHexString = function(hexString) {
        if (typeof hexString === "undefined" || hexString != null && hexString.length !== 24) {
            throw new TypeError("Argument passed in must be a single String of 12 bytes or a string of 24 hex characters");
        }
        return new ObjectId2(buffer_1.from(hexString, "hex"));
    };
    ObjectId2.isValid = function(id1) {
        if (id1 == null) return false;
        if (typeof id1 === "number") {
            return true;
        }
        if (typeof id1 === "string") {
            return id1.length === 12 || id1.length === 24 && checkForHexRegExp.test(id1);
        }
        if (id1 instanceof ObjectId2) {
            return true;
        }
        if (isUint8Array(id1) && id1.length === 12) {
            return true;
        }
        if (typeof id1 === "object" && "toHexString" in id1 && typeof id1.toHexString === "function") {
            if (typeof id1.id === "string") {
                return id1.id.length === 12;
            }
            return id1.toHexString().length === 24 && checkForHexRegExp.test(id1.id.toString("hex"));
        }
        return false;
    };
    ObjectId2.prototype.toExtendedJSON = function() {
        if (this.toHexString) return {
            $oid: this.toHexString()
        };
        return {
            $oid: this.toString("hex")
        };
    };
    ObjectId2.fromExtendedJSON = function(doc) {
        return new ObjectId2(doc.$oid);
    };
    ObjectId2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    ObjectId2.prototype.inspect = function() {
        return 'new ObjectId("' + this.toHexString() + '")';
    };
    ObjectId2.index = ~~(Math.random() * 16777215);
    return ObjectId2;
}();
Object.defineProperty(ObjectId.prototype, "generate", {
    value: deprecate(function(time) {
        return ObjectId.generate(time);
    }, "Please use the static `ObjectId.generate(time)` instead")
});
Object.defineProperty(ObjectId.prototype, "getInc", {
    value: deprecate(function() {
        return ObjectId.getInc();
    }, "Please use the static `ObjectId.getInc()` instead")
});
Object.defineProperty(ObjectId.prototype, "get_inc", {
    value: deprecate(function() {
        return ObjectId.getInc();
    }, "Please use the static `ObjectId.getInc()` instead")
});
Object.defineProperty(ObjectId, "get_inc", {
    value: deprecate(function() {
        return ObjectId.getInc();
    }, "Please use the static `ObjectId.getInc()` instead")
});
Object.defineProperty(ObjectId.prototype, "_bsontype", {
    value: "ObjectID"
});
function alphabetize(str1) {
    return str1.split("").sort().join("");
}
var BSONRegExp = function() {
    function BSONRegExp2(pattern, options6) {
        if (!(this instanceof BSONRegExp2)) return new BSONRegExp2(pattern, options6);
        this.pattern = pattern;
        this.options = alphabetize(options6 !== null && options6 !== void 0 ? options6 : "");
        for(var i1 = 0; i1 < this.options.length; i1++){
            if (!(this.options[i1] === "i" || this.options[i1] === "m" || this.options[i1] === "x" || this.options[i1] === "l" || this.options[i1] === "s" || this.options[i1] === "u")) {
                throw new Error("The regular expression option [" + this.options[i1] + "] is not supported");
            }
        }
    }
    BSONRegExp2.parseOptions = function(options6) {
        return options6 ? options6.split("").sort().join("") : "";
    };
    BSONRegExp2.prototype.toExtendedJSON = function(options6) {
        options6 = options6 || {
        };
        if (options6.legacy) {
            return {
                $regex: this.pattern,
                $options: this.options
            };
        }
        return {
            $regularExpression: {
                pattern: this.pattern,
                options: this.options
            }
        };
    };
    BSONRegExp2.fromExtendedJSON = function(doc) {
        if ("$regex" in doc) {
            if (typeof doc.$regex !== "string") {
                if (doc.$regex._bsontype === "BSONRegExp") {
                    return doc;
                }
            } else {
                return new BSONRegExp2(doc.$regex, BSONRegExp2.parseOptions(doc.$options));
            }
        }
        if ("$regularExpression" in doc) {
            return new BSONRegExp2(doc.$regularExpression.pattern, BSONRegExp2.parseOptions(doc.$regularExpression.options));
        }
        throw new TypeError("Unexpected BSONRegExp EJSON object form: " + JSON.stringify(doc));
    };
    return BSONRegExp2;
}();
Object.defineProperty(BSONRegExp.prototype, "_bsontype", {
    value: "BSONRegExp"
});
var BSONSymbol = function() {
    function BSONSymbol2(value5) {
        if (!(this instanceof BSONSymbol2)) return new BSONSymbol2(value5);
        this.value = value5;
    }
    BSONSymbol2.prototype.valueOf = function() {
        return this.value;
    };
    BSONSymbol2.prototype.toString = function() {
        return this.value;
    };
    BSONSymbol2.prototype.inspect = function() {
        return 'new BSONSymbol("' + this.value + '")';
    };
    BSONSymbol2.prototype.toJSON = function() {
        return this.value;
    };
    BSONSymbol2.prototype.toExtendedJSON = function() {
        return {
            $symbol: this.value
        };
    };
    BSONSymbol2.fromExtendedJSON = function(doc) {
        return new BSONSymbol2(doc.$symbol);
    };
    BSONSymbol2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    return BSONSymbol2;
}();
Object.defineProperty(BSONSymbol.prototype, "_bsontype", {
    value: "Symbol"
});
var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d2, b2) {
        d2.__proto__ = b2;
    } || function(d2, b2) {
        for(var p2 in b2){
            if (b2.hasOwnProperty(p2)) d2[p2] = b2[p2];
        }
    };
    return _extendStatics(d, b);
};
function __extends(d, b) {
    _extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var LongWithoutOverridesClass = Long;
var Timestamp = function(_super) {
    __extends(Timestamp2, _super);
    function Timestamp2(low, high) {
        var _this = this;
        if (!(_this instanceof Timestamp2)) return new Timestamp2(low, high);
        if (Long.isLong(low)) {
            _this = _super.call(this, low.low, low.high, true) || this;
        } else if (isObjectLike(low) && typeof low.t !== "undefined" && typeof low.i !== "undefined") {
            _this = _super.call(this, low.i, low.t, true) || this;
        } else {
            _this = _super.call(this, low, high, true) || this;
        }
        Object.defineProperty(_this, "_bsontype", {
            value: "Timestamp",
            writable: false,
            configurable: false,
            enumerable: false
        });
        return _this;
    }
    Timestamp2.prototype.toJSON = function() {
        return {
            $timestamp: this.toString()
        };
    };
    Timestamp2.fromInt = function(value5) {
        return new Timestamp2(Long.fromInt(value5, true));
    };
    Timestamp2.fromNumber = function(value5) {
        return new Timestamp2(Long.fromNumber(value5, true));
    };
    Timestamp2.fromBits = function(lowBits, highBits) {
        return new Timestamp2(lowBits, highBits);
    };
    Timestamp2.fromString = function(str1, optRadix) {
        return new Timestamp2(Long.fromString(str1, true, optRadix));
    };
    Timestamp2.prototype.toExtendedJSON = function() {
        return {
            $timestamp: {
                t: this.high >>> 0,
                i: this.low >>> 0
            }
        };
    };
    Timestamp2.fromExtendedJSON = function(doc) {
        return new Timestamp2(doc.$timestamp);
    };
    Timestamp2.prototype[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return this.inspect();
    };
    Timestamp2.prototype.inspect = function() {
        return "new Timestamp({ t: " + this.getHighBits() + ", i: " + this.getLowBits() + " })";
    };
    Timestamp2.MAX_VALUE = Long.MAX_UNSIGNED_VALUE;
    return Timestamp2;
}(LongWithoutOverridesClass);
function isBSONType(value5) {
    return isObjectLike(value5) && Reflect.has(value5, "_bsontype") && typeof value5._bsontype === "string";
}
var BSON_INT32_MAX$1 = 2147483647;
var BSON_INT32_MIN$1 = -2147483648;
var BSON_INT64_MAX$1 = 9223372036854776000;
var BSON_INT64_MIN$1 = -9223372036854776000;
var keysToCodecs = {
    $oid: ObjectId,
    $binary: Binary,
    $uuid: Binary,
    $symbol: BSONSymbol,
    $numberInt: Int32,
    $numberDecimal: Decimal128,
    $numberDouble: Double,
    $numberLong: Long,
    $minKey: MinKey,
    $maxKey: MaxKey,
    $regex: BSONRegExp,
    $regularExpression: BSONRegExp,
    $timestamp: Timestamp
};
function deserializeValue(value5, options6) {
    if (options6 === void 0) {
        options6 = {
        };
    }
    if (typeof value5 === "number") {
        if (options6.relaxed || options6.legacy) {
            return value5;
        }
        if (Math.floor(value5) === value5) {
            if (value5 >= BSON_INT32_MIN$1 && value5 <= BSON_INT32_MAX$1) return new Int32(value5);
            if (value5 >= BSON_INT64_MIN$1 && value5 <= BSON_INT64_MAX$1) return Long.fromNumber(value5);
        }
        return new Double(value5);
    }
    if (value5 == null || typeof value5 !== "object") return value5;
    if (value5.$undefined) return null;
    var keys4 = Object.keys(value5).filter(function(k) {
        return k.startsWith("$") && value5[k] != null;
    });
    for(var i1 = 0; i1 < keys4.length; i1++){
        var c = keysToCodecs[keys4[i1]];
        if (c) return c.fromExtendedJSON(value5, options6);
    }
    if (value5.$date != null) {
        var d = value5.$date;
        var date = new Date();
        if (options6.legacy) {
            if (typeof d === "number") date.setTime(d);
            else if (typeof d === "string") date.setTime(Date.parse(d));
        } else {
            if (typeof d === "string") date.setTime(Date.parse(d));
            else if (Long.isLong(d)) date.setTime(d.toNumber());
            else if (typeof d === "number" && options6.relaxed) date.setTime(d);
        }
        return date;
    }
    if (value5.$code != null) {
        var copy3 = Object.assign({
        }, value5);
        if (value5.$scope) {
            copy3.$scope = deserializeValue(value5.$scope);
        }
        return Code.fromExtendedJSON(value5);
    }
    if (isDBRefLike(value5) || value5.$dbPointer) {
        var v = value5.$ref ? value5 : value5.$dbPointer;
        if (v instanceof DBRef) return v;
        var dollarKeys = Object.keys(v).filter(function(k) {
            return k.startsWith("$");
        });
        var valid_1 = true;
        dollarKeys.forEach(function(k) {
            if ([
                "$ref",
                "$id",
                "$db"
            ].indexOf(k) === -1) valid_1 = false;
        });
        if (valid_1) return DBRef.fromExtendedJSON(v);
    }
    return value5;
}
function serializeArray(array, options6) {
    return array.map(function(v, index) {
        options6.seenObjects.push({
            propertyName: "index " + index,
            obj: null
        });
        try {
            return serializeValue(v, options6);
        } finally{
            options6.seenObjects.pop();
        }
    });
}
function getISOString(date) {
    var isoStr = date.toISOString();
    return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + "Z";
}
function serializeValue(value5, options6) {
    if ((typeof value5 === "object" || typeof value5 === "function") && value5 !== null) {
        var index = options6.seenObjects.findIndex(function(entry) {
            return entry.obj === value5;
        });
        if (index !== -1) {
            var props = options6.seenObjects.map(function(entry) {
                return entry.propertyName;
            });
            var leadingPart = props.slice(0, index).map(function(prop) {
                return prop + " -> ";
            }).join("");
            var alreadySeen = props[index];
            var circularPart = " -> " + props.slice(index + 1, props.length - 1).map(function(prop) {
                return prop + " -> ";
            }).join("");
            var current = props[props.length - 1];
            var leadingSpace = " ".repeat(leadingPart.length + alreadySeen.length / 2);
            var dashes = "-".repeat(circularPart.length + (alreadySeen.length + current.length) / 2 - 1);
            throw new TypeError("Converting circular structure to EJSON:\n" + ("    " + leadingPart + alreadySeen + circularPart + current + "\n") + ("    " + leadingSpace + "\\" + dashes + "/"));
        }
        options6.seenObjects[options6.seenObjects.length - 1].obj = value5;
    }
    if (Array.isArray(value5)) return serializeArray(value5, options6);
    if (value5 === void 0) return null;
    if (value5 instanceof Date || isDate(value5)) {
        var dateNum = value5.getTime(), inRange = dateNum > -1 && dateNum < 253402318800000;
        if (options6.legacy) {
            return options6.relaxed && inRange ? {
                $date: value5.getTime()
            } : {
                $date: getISOString(value5)
            };
        }
        return options6.relaxed && inRange ? {
            $date: getISOString(value5)
        } : {
            $date: {
                $numberLong: value5.getTime().toString()
            }
        };
    }
    if (typeof value5 === "number" && (!options6.relaxed || !isFinite(value5))) {
        if (Math.floor(value5) === value5) {
            var int32Range = value5 >= BSON_INT32_MIN$1 && value5 <= BSON_INT32_MAX$1, int64Range = value5 >= BSON_INT64_MIN$1 && value5 <= BSON_INT64_MAX$1;
            if (int32Range) return {
                $numberInt: value5.toString()
            };
            if (int64Range) return {
                $numberLong: value5.toString()
            };
        }
        return {
            $numberDouble: value5.toString()
        };
    }
    if (value5 instanceof RegExp || isRegExp(value5)) {
        var flags1 = value5.flags;
        if (flags1 === void 0) {
            var match = value5.toString().match(/[gimuy]*$/);
            if (match) {
                flags1 = match[0];
            }
        }
        var rx = new BSONRegExp(value5.source, flags1);
        return rx.toExtendedJSON(options6);
    }
    if (value5 != null && typeof value5 === "object") return serializeDocument(value5, options6);
    return value5;
}
var BSON_TYPE_MAPPINGS = {
    Binary: function(o) {
        return new Binary(o.value(), o.sub_type);
    },
    Code: function(o) {
        return new Code(o.code, o.scope);
    },
    DBRef: function(o) {
        return new DBRef(o.collection || o.namespace, o.oid, o.db, o.fields);
    },
    Decimal128: function(o) {
        return new Decimal128(o.bytes);
    },
    Double: function(o) {
        return new Double(o.value);
    },
    Int32: function(o) {
        return new Int32(o.value);
    },
    Long: function(o) {
        return Long.fromBits(o.low != null ? o.low : o.low_, o.low != null ? o.high : o.high_, o.low != null ? o.unsigned : o.unsigned_);
    },
    MaxKey: function() {
        return new MaxKey();
    },
    MinKey: function() {
        return new MinKey();
    },
    ObjectID: function(o) {
        return new ObjectId(o);
    },
    ObjectId: function(o) {
        return new ObjectId(o);
    },
    BSONRegExp: function(o) {
        return new BSONRegExp(o.pattern, o.options);
    },
    Symbol: function(o) {
        return new BSONSymbol(o.value);
    },
    Timestamp: function(o) {
        return Timestamp.fromBits(o.low, o.high);
    }
};
function serializeDocument(doc, options6) {
    if (doc == null || typeof doc !== "object") throw new Error("not an object instance");
    var bsontype = doc._bsontype;
    if (typeof bsontype === "undefined") {
        var _doc = {
        };
        for(var name3 in doc){
            options6.seenObjects.push({
                propertyName: name3,
                obj: null
            });
            try {
                _doc[name3] = serializeValue(doc[name3], options6);
            } finally{
                options6.seenObjects.pop();
            }
        }
        return _doc;
    } else if (isBSONType(doc)) {
        var outDoc = doc;
        if (typeof outDoc.toExtendedJSON !== "function") {
            var mapper = BSON_TYPE_MAPPINGS[doc._bsontype];
            if (!mapper) {
                throw new TypeError("Unrecognized or invalid _bsontype: " + doc._bsontype);
            }
            outDoc = mapper(outDoc);
        }
        if (bsontype === "Code" && outDoc.scope) {
            outDoc = new Code(outDoc.code, serializeValue(outDoc.scope, options6));
        } else if (bsontype === "DBRef" && outDoc.oid) {
            outDoc = new DBRef(serializeValue(outDoc.collection, options6), serializeValue(outDoc.oid, options6), serializeValue(outDoc.db, options6), serializeValue(outDoc.fields, options6));
        }
        return outDoc.toExtendedJSON(options6);
    } else {
        throw new Error("_bsontype must be a string, but was: " + typeof bsontype);
    }
}
var EJSON;
(function(EJSON2) {
    function parse6(text, options6) {
        var finalOptions = Object.assign({
        }, {
            relaxed: true,
            legacy: false
        }, options6);
        if (typeof finalOptions.relaxed === "boolean") finalOptions.strict = !finalOptions.relaxed;
        if (typeof finalOptions.strict === "boolean") finalOptions.relaxed = !finalOptions.strict;
        return JSON.parse(text, function(_key, value5) {
            return deserializeValue(value5, finalOptions);
        });
    }
    EJSON2.parse = parse6;
    function stringify(value5, replacer1, space1, options6) {
        if (space1 != null && typeof space1 === "object") {
            options6 = space1;
            space1 = 0;
        }
        if (replacer1 != null && typeof replacer1 === "object" && !Array.isArray(replacer1)) {
            options6 = replacer1;
            replacer1 = void 0;
            space1 = 0;
        }
        var serializeOptions = Object.assign({
            relaxed: true,
            legacy: false
        }, options6, {
            seenObjects: [
                {
                    propertyName: "(root)",
                    obj: null
                }
            ]
        });
        var doc = serializeValue(value5, serializeOptions);
        return JSON.stringify(doc, replacer1, space1);
    }
    EJSON2.stringify = stringify;
    function serialize2(value5, options6) {
        options6 = options6 || {
        };
        return JSON.parse(stringify(value5, options6));
    }
    EJSON2.serialize = serialize2;
    function deserialize2(ejson, options6) {
        options6 = options6 || {
        };
        return parse6(JSON.stringify(ejson), options6);
    }
    EJSON2.deserialize = deserialize2;
})(EJSON || (EJSON = {
}));
var bsonMap;
var bsonGlobal = getGlobal();
if (bsonGlobal.Map) {
    bsonMap = bsonGlobal.Map;
} else {
    bsonMap = (function() {
        function Map1(array) {
            if (array === void 0) {
                array = [];
            }
            this._keys = [];
            this._values = {
            };
            for(var i1 = 0; i1 < array.length; i1++){
                if (array[i1] == null) continue;
                var entry = array[i1];
                var key3 = entry[0];
                var value5 = entry[1];
                this._keys.push(key3);
                this._values[key3] = {
                    v: value5,
                    i: this._keys.length - 1
                };
            }
        }
        Map1.prototype.clear = function() {
            this._keys = [];
            this._values = {
            };
        };
        Map1.prototype.delete = function(key4) {
            var value6 = this._values[key4];
            if (value6 == null) return false;
            delete this._values[key4];
            this._keys.splice(value6.i, 1);
            return true;
        };
        Map1.prototype.entries = function() {
            var _this = this;
            var index = 0;
            return {
                next: function() {
                    var key4 = _this._keys[index++];
                    return {
                        value: key4 !== void 0 ? [
                            key4,
                            _this._values[key4].v
                        ] : void 0,
                        done: key4 !== void 0 ? false : true
                    };
                }
            };
        };
        Map1.prototype.forEach = function(callback, self2) {
            self2 = self2 || this;
            for(var i1 = 0; i1 < this._keys.length; i1++){
                var key4 = this._keys[i1];
                callback.call(self2, this._values[key4].v, key4, self2);
            }
        };
        Map1.prototype.get = function(key5) {
            return this._values[key5] ? this._values[key5].v : void 0;
        };
        Map1.prototype.has = function(key5) {
            return this._values[key5] != null;
        };
        Map1.prototype.keys = function() {
            var _this = this;
            var index = 0;
            return {
                next: function() {
                    var key5 = _this._keys[index++];
                    return {
                        value: key5 !== void 0 ? key5 : void 0,
                        done: key5 !== void 0 ? false : true
                    };
                }
            };
        };
        Map1.prototype.set = function(key5, value6) {
            if (this._values[key5]) {
                this._values[key5].v = value6;
                return this;
            }
            this._keys.push(key5);
            this._values[key5] = {
                v: value6,
                i: this._keys.length - 1
            };
            return this;
        };
        Map1.prototype.values = function() {
            var _this = this;
            var index = 0;
            return {
                next: function() {
                    var key5 = _this._keys[index++];
                    return {
                        value: key5 !== void 0 ? _this._values[key5].v : void 0,
                        done: key5 !== void 0 ? false : true
                    };
                }
            };
        };
        Object.defineProperty(Map1.prototype, "size", {
            get: function() {
                return this._keys.length;
            },
            enumerable: false,
            configurable: true
        });
        return Map1;
    })();
}
var BSON_INT32_MAX = 2147483647;
var BSON_INT32_MIN = -2147483648;
var BSON_INT64_MAX = Math.pow(2, 63) - 1;
var BSON_INT64_MIN = -Math.pow(2, 63);
var JS_INT_MAX = Math.pow(2, 53);
var JS_INT_MIN = -Math.pow(2, 53);
var BSON_DATA_NUMBER = 1;
var BSON_DATA_STRING = 2;
var BSON_DATA_OBJECT = 3;
var BSON_DATA_ARRAY = 4;
var BSON_DATA_BINARY = 5;
var BSON_DATA_UNDEFINED = 6;
var BSON_DATA_OID = 7;
var BSON_DATA_BOOLEAN = 8;
var BSON_DATA_DATE = 9;
var BSON_DATA_NULL = 10;
var BSON_DATA_REGEXP = 11;
var BSON_DATA_DBPOINTER = 12;
var BSON_DATA_CODE = 13;
var BSON_DATA_SYMBOL = 14;
var BSON_DATA_CODE_W_SCOPE = 15;
var BSON_DATA_INT = 16;
var BSON_DATA_TIMESTAMP = 17;
var BSON_DATA_LONG = 18;
var BSON_DATA_DECIMAL128 = 19;
var BSON_DATA_MIN_KEY = 255;
var BSON_DATA_MAX_KEY = 127;
var BSON_BINARY_SUBTYPE_DEFAULT = 0;
var BSON_BINARY_SUBTYPE_FUNCTION = 1;
var BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;
var BSON_BINARY_SUBTYPE_UUID = 3;
var BSON_BINARY_SUBTYPE_UUID_NEW = 4;
var BSON_BINARY_SUBTYPE_MD5 = 5;
var BSON_BINARY_SUBTYPE_USER_DEFINED = 128;
function calculateObjectSize$1(object, serializeFunctions, ignoreUndefined) {
    var totalLength = 4 + 1;
    if (Array.isArray(object)) {
        for(var i1 = 0; i1 < object.length; i1++){
            totalLength += calculateElement(i1.toString(), object[i1], serializeFunctions, true, ignoreUndefined);
        }
    } else {
        if (object.toBSON) {
            object = object.toBSON();
        }
        for(var key5 in object){
            totalLength += calculateElement(key5, object[key5], serializeFunctions, false, ignoreUndefined);
        }
    }
    return totalLength;
}
function calculateElement(name4, value6, serializeFunctions, isArray, ignoreUndefined) {
    if (serializeFunctions === void 0) {
        serializeFunctions = false;
    }
    if (isArray === void 0) {
        isArray = false;
    }
    if (ignoreUndefined === void 0) {
        ignoreUndefined = false;
    }
    if (value6 && value6.toBSON) {
        value6 = value6.toBSON();
    }
    switch(typeof value6){
        case "string":
            return 1 + buffer_1.byteLength(name4, "utf8") + 1 + 4 + buffer_1.byteLength(value6, "utf8") + 1;
        case "number":
            if (Math.floor(value6) === value6 && value6 >= JS_INT_MIN && value6 <= JS_INT_MAX) {
                if (value6 >= BSON_INT32_MIN && value6 <= BSON_INT32_MAX) {
                    return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (4 + 1);
                } else {
                    return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (8 + 1);
                }
            } else {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (8 + 1);
            }
        case "undefined":
            if (isArray || !ignoreUndefined) return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1;
            return 0;
        case "boolean":
            return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (1 + 1);
        case "object":
            if (value6 == null || value6["_bsontype"] === "MinKey" || value6["_bsontype"] === "MaxKey") {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1;
            } else if (value6["_bsontype"] === "ObjectId" || value6["_bsontype"] === "ObjectID") {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (12 + 1);
            } else if (value6 instanceof Date || isDate(value6)) {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (8 + 1);
            } else if (ArrayBuffer.isView(value6) || value6 instanceof ArrayBuffer || isAnyArrayBuffer(value6)) {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (1 + 4 + 1) + value6.byteLength;
            } else if (value6["_bsontype"] === "Long" || value6["_bsontype"] === "Double" || value6["_bsontype"] === "Timestamp") {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (8 + 1);
            } else if (value6["_bsontype"] === "Decimal128") {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (16 + 1);
            } else if (value6["_bsontype"] === "Code") {
                if (value6.scope != null && Object.keys(value6.scope).length > 0) {
                    return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1 + 4 + 4 + buffer_1.byteLength(value6.code.toString(), "utf8") + 1 + calculateObjectSize$1(value6.scope, serializeFunctions, ignoreUndefined);
                } else {
                    return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1 + 4 + buffer_1.byteLength(value6.code.toString(), "utf8") + 1;
                }
            } else if (value6["_bsontype"] === "Binary") {
                if (value6.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {
                    return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (value6.position + 1 + 4 + 1 + 4);
                } else {
                    return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + (value6.position + 1 + 4 + 1);
                }
            } else if (value6["_bsontype"] === "Symbol") {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + buffer_1.byteLength(value6.value, "utf8") + 4 + 1 + 1;
            } else if (value6["_bsontype"] === "DBRef") {
                var ordered_values = Object.assign({
                    $ref: value6.collection,
                    $id: value6.oid
                }, value6.fields);
                if (value6.db != null) {
                    ordered_values["$db"] = value6.db;
                }
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1 + calculateObjectSize$1(ordered_values, serializeFunctions, ignoreUndefined);
            } else if (value6 instanceof RegExp || isRegExp(value6)) {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1 + buffer_1.byteLength(value6.source, "utf8") + 1 + (value6.global ? 1 : 0) + (value6.ignoreCase ? 1 : 0) + (value6.multiline ? 1 : 0) + 1;
            } else if (value6["_bsontype"] === "BSONRegExp") {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1 + buffer_1.byteLength(value6.pattern, "utf8") + 1 + buffer_1.byteLength(value6.options, "utf8") + 1;
            } else {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + calculateObjectSize$1(value6, serializeFunctions, ignoreUndefined) + 1;
            }
        case "function":
            if (value6 instanceof RegExp || isRegExp(value6) || String.call(value6) === "[object RegExp]") {
                return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1 + buffer_1.byteLength(value6.source, "utf8") + 1 + (value6.global ? 1 : 0) + (value6.ignoreCase ? 1 : 0) + (value6.multiline ? 1 : 0) + 1;
            } else {
                if (serializeFunctions && value6.scope != null && Object.keys(value6.scope).length > 0) {
                    return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1 + 4 + 4 + buffer_1.byteLength(normalizedFunctionString(value6), "utf8") + 1 + calculateObjectSize$1(value6.scope, serializeFunctions, ignoreUndefined);
                } else if (serializeFunctions) {
                    return (name4 != null ? buffer_1.byteLength(name4, "utf8") + 1 : 0) + 1 + 4 + buffer_1.byteLength(normalizedFunctionString(value6), "utf8") + 1;
                }
            }
    }
    return 0;
}
var FIRST_BIT = 128;
var FIRST_TWO_BITS = 192;
var FIRST_THREE_BITS = 224;
var FIRST_FOUR_BITS = 240;
var FIRST_FIVE_BITS = 248;
var TWO_BIT_CHAR = 192;
var THREE_BIT_CHAR = 224;
var FOUR_BIT_CHAR = 240;
var CONTINUING_CHAR = 128;
function validateUtf8(bytes, start, end) {
    var continuation = 0;
    for(var i2 = start; i2 < end; i2 += 1){
        var __byte = bytes[i2];
        if (continuation) {
            if ((__byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {
                return false;
            }
            continuation -= 1;
        } else if (__byte & FIRST_BIT) {
            if ((__byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {
                continuation = 1;
            } else if ((__byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {
                continuation = 2;
            } else if ((__byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {
                continuation = 3;
            } else {
                return false;
            }
        }
    }
    return !continuation;
}
var JS_INT_MAX_LONG = Long.fromNumber(JS_INT_MAX);
var JS_INT_MIN_LONG = Long.fromNumber(JS_INT_MIN);
var functionCache = {
};
function deserialize$1(buffer2, options6, isArray) {
    options6 = options6 == null ? {
    } : options6;
    var index = options6 && options6.index ? options6.index : 0;
    var size7 = buffer2[index] | buffer2[index + 1] << 8 | buffer2[index + 2] << 16 | buffer2[index + 3] << 24;
    if (size7 < 5) {
        throw new Error("bson size must be >= 5, is " + size7);
    }
    if (options6.allowObjectSmallerThanBufferSize && buffer2.length < size7) {
        throw new Error("buffer length " + buffer2.length + " must be >= bson size " + size7);
    }
    if (!options6.allowObjectSmallerThanBufferSize && buffer2.length !== size7) {
        throw new Error("buffer length " + buffer2.length + " must === bson size " + size7);
    }
    if (size7 + index > buffer2.byteLength) {
        throw new Error("(bson size " + size7 + " + options.index " + index + " must be <= buffer length " + buffer2.byteLength + ")");
    }
    if (buffer2[index + size7 - 1] !== 0) {
        throw new Error("One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00");
    }
    return deserializeObject(buffer2, index, options6, isArray);
}
var allowedDBRefKeys = /^\$ref$|^\$id$|^\$db$/;
function deserializeObject(buffer2, index, options6, isArray) {
    if (isArray === void 0) {
        isArray = false;
    }
    var evalFunctions = options6["evalFunctions"] == null ? false : options6["evalFunctions"];
    var cacheFunctions = options6["cacheFunctions"] == null ? false : options6["cacheFunctions"];
    var fieldsAsRaw = options6["fieldsAsRaw"] == null ? null : options6["fieldsAsRaw"];
    var raw = options6["raw"] == null ? false : options6["raw"];
    var bsonRegExp = typeof options6["bsonRegExp"] === "boolean" ? options6["bsonRegExp"] : false;
    var promoteBuffers = options6["promoteBuffers"] == null ? false : options6["promoteBuffers"];
    var promoteLongs = options6["promoteLongs"] == null ? true : options6["promoteLongs"];
    var promoteValues = options6["promoteValues"] == null ? true : options6["promoteValues"];
    var startIndex = index;
    if (buffer2.length < 5) throw new Error("corrupt bson message < 5 bytes long");
    var size7 = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
    if (size7 < 5 || size7 > buffer2.length) throw new Error("corrupt bson message");
    var object = isArray ? [] : {
    };
    var arrayIndex = 0;
    var done = false;
    var isPossibleDBRef = isArray ? false : null;
    while(!done){
        var elementType = buffer2[index++];
        if (elementType === 0) break;
        var i2 = index;
        while(buffer2[i2] !== 0 && i2 < buffer2.length){
            i2++;
        }
        if (i2 >= buffer2.byteLength) throw new Error("Bad BSON Document: illegal CString");
        var name4 = isArray ? arrayIndex++ : buffer2.toString("utf8", index, i2);
        if (isPossibleDBRef !== false && name4[0] === "$") {
            isPossibleDBRef = allowedDBRefKeys.test(name4);
        }
        var value6 = void 0;
        index = i2 + 1;
        if (elementType === BSON_DATA_STRING) {
            var stringSize = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            if (stringSize <= 0 || stringSize > buffer2.length - index || buffer2[index + stringSize - 1] !== 0) throw new Error("bad string length in bson");
            value6 = buffer2.toString("utf8", index, index + stringSize - 1);
            for(var i_1 = 0; i_1 < value6.length; i_1++){
                if (value6.charCodeAt(i_1) === 65533) {
                    if (!validateUtf8(buffer2, index, index + stringSize - 1)) {
                        throw new Error("Invalid UTF-8 string in BSON document");
                    }
                    break;
                }
            }
            index = index + stringSize;
        } else if (elementType === BSON_DATA_OID) {
            var oid = buffer_1.alloc(12);
            buffer2.copy(oid, 0, index, index + 12);
            value6 = new ObjectId(oid);
            index = index + 12;
        } else if (elementType === BSON_DATA_INT && promoteValues === false) {
            value6 = new Int32(buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24);
        } else if (elementType === BSON_DATA_INT) {
            value6 = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
        } else if (elementType === BSON_DATA_NUMBER && promoteValues === false) {
            value6 = new Double(buffer2.readDoubleLE(index));
            index = index + 8;
        } else if (elementType === BSON_DATA_NUMBER) {
            value6 = buffer2.readDoubleLE(index);
            index = index + 8;
        } else if (elementType === BSON_DATA_DATE) {
            var lowBits = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            var highBits = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            value6 = new Date(new Long(lowBits, highBits).toNumber());
        } else if (elementType === BSON_DATA_BOOLEAN) {
            if (buffer2[index] !== 0 && buffer2[index] !== 1) throw new Error("illegal boolean type value");
            value6 = buffer2[index++] === 1;
        } else if (elementType === BSON_DATA_OBJECT) {
            var _index = index;
            var objectSize = buffer2[index] | buffer2[index + 1] << 8 | buffer2[index + 2] << 16 | buffer2[index + 3] << 24;
            if (objectSize <= 0 || objectSize > buffer2.length - index) throw new Error("bad embedded document length in bson");
            if (raw) {
                value6 = buffer2.slice(index, index + objectSize);
            } else {
                value6 = deserializeObject(buffer2, _index, options6, false);
            }
            index = index + objectSize;
        } else if (elementType === BSON_DATA_ARRAY) {
            var _index = index;
            var objectSize = buffer2[index] | buffer2[index + 1] << 8 | buffer2[index + 2] << 16 | buffer2[index + 3] << 24;
            var arrayOptions = options6;
            var stopIndex = index + objectSize;
            if (fieldsAsRaw && fieldsAsRaw[name4]) {
                arrayOptions = {
                };
                for(var n in options6){
                    arrayOptions[n] = options6[n];
                }
                arrayOptions["raw"] = true;
            }
            value6 = deserializeObject(buffer2, _index, arrayOptions, true);
            index = index + objectSize;
            if (buffer2[index - 1] !== 0) throw new Error("invalid array terminator byte");
            if (index !== stopIndex) throw new Error("corrupted array bson");
        } else if (elementType === BSON_DATA_UNDEFINED) {
            value6 = void 0;
        } else if (elementType === BSON_DATA_NULL) {
            value6 = null;
        } else if (elementType === BSON_DATA_LONG) {
            var lowBits = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            var highBits = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            var __long = new Long(lowBits, highBits);
            if (promoteLongs && promoteValues === true) {
                value6 = __long.lessThanOrEqual(JS_INT_MAX_LONG) && __long.greaterThanOrEqual(JS_INT_MIN_LONG) ? __long.toNumber() : __long;
            } else {
                value6 = __long;
            }
        } else if (elementType === BSON_DATA_DECIMAL128) {
            var bytes = buffer_1.alloc(16);
            buffer2.copy(bytes, 0, index, index + 16);
            index = index + 16;
            var decimal128 = new Decimal128(bytes);
            if ("toObject" in decimal128 && typeof decimal128.toObject === "function") {
                value6 = decimal128.toObject();
            } else {
                value6 = decimal128;
            }
        } else if (elementType === BSON_DATA_BINARY) {
            var binarySize = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            var totalBinarySize = binarySize;
            var subType = buffer2[index++];
            if (binarySize < 0) throw new Error("Negative binary type element size found");
            if (binarySize > buffer2.byteLength) throw new Error("Binary type size larger than document size");
            if (buffer2["slice"] != null) {
                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {
                    binarySize = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
                    if (binarySize < 0) throw new Error("Negative binary type element size found for subtype 0x02");
                    if (binarySize > totalBinarySize - 4) throw new Error("Binary type with subtype 0x02 contains too long binary size");
                    if (binarySize < totalBinarySize - 4) throw new Error("Binary type with subtype 0x02 contains too short binary size");
                }
                if (promoteBuffers && promoteValues) {
                    value6 = buffer2.slice(index, index + binarySize);
                } else {
                    value6 = new Binary(buffer2.slice(index, index + binarySize), subType);
                }
            } else {
                var _buffer = buffer_1.alloc(binarySize);
                if (subType === Binary.SUBTYPE_BYTE_ARRAY) {
                    binarySize = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
                    if (binarySize < 0) throw new Error("Negative binary type element size found for subtype 0x02");
                    if (binarySize > totalBinarySize - 4) throw new Error("Binary type with subtype 0x02 contains too long binary size");
                    if (binarySize < totalBinarySize - 4) throw new Error("Binary type with subtype 0x02 contains too short binary size");
                }
                for(i2 = 0; i2 < binarySize; i2++){
                    _buffer[i2] = buffer2[index + i2];
                }
                if (promoteBuffers && promoteValues) {
                    value6 = _buffer;
                } else {
                    value6 = new Binary(_buffer, subType);
                }
            }
            index = index + binarySize;
        } else if (elementType === BSON_DATA_REGEXP && bsonRegExp === false) {
            i2 = index;
            while(buffer2[i2] !== 0 && i2 < buffer2.length){
                i2++;
            }
            if (i2 >= buffer2.length) throw new Error("Bad BSON Document: illegal CString");
            var source = buffer2.toString("utf8", index, i2);
            index = i2 + 1;
            i2 = index;
            while(buffer2[i2] !== 0 && i2 < buffer2.length){
                i2++;
            }
            if (i2 >= buffer2.length) throw new Error("Bad BSON Document: illegal CString");
            var regExpOptions = buffer2.toString("utf8", index, i2);
            index = i2 + 1;
            var optionsArray = new Array(regExpOptions.length);
            for(i2 = 0; i2 < regExpOptions.length; i2++){
                switch(regExpOptions[i2]){
                    case "m":
                        optionsArray[i2] = "m";
                        break;
                    case "s":
                        optionsArray[i2] = "g";
                        break;
                    case "i":
                        optionsArray[i2] = "i";
                        break;
                }
            }
            value6 = new RegExp(source, optionsArray.join(""));
        } else if (elementType === BSON_DATA_REGEXP && bsonRegExp === true) {
            i2 = index;
            while(buffer2[i2] !== 0 && i2 < buffer2.length){
                i2++;
            }
            if (i2 >= buffer2.length) throw new Error("Bad BSON Document: illegal CString");
            var source = buffer2.toString("utf8", index, i2);
            index = i2 + 1;
            i2 = index;
            while(buffer2[i2] !== 0 && i2 < buffer2.length){
                i2++;
            }
            if (i2 >= buffer2.length) throw new Error("Bad BSON Document: illegal CString");
            var regExpOptions = buffer2.toString("utf8", index, i2);
            index = i2 + 1;
            value6 = new BSONRegExp(source, regExpOptions);
        } else if (elementType === BSON_DATA_SYMBOL) {
            var stringSize = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            if (stringSize <= 0 || stringSize > buffer2.length - index || buffer2[index + stringSize - 1] !== 0) throw new Error("bad string length in bson");
            var symbol = buffer2.toString("utf8", index, index + stringSize - 1);
            value6 = promoteValues ? symbol : new BSONSymbol(symbol);
            index = index + stringSize;
        } else if (elementType === BSON_DATA_TIMESTAMP) {
            var lowBits = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            var highBits = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            value6 = new Timestamp(lowBits, highBits);
        } else if (elementType === BSON_DATA_MIN_KEY) {
            value6 = new MinKey();
        } else if (elementType === BSON_DATA_MAX_KEY) {
            value6 = new MaxKey();
        } else if (elementType === BSON_DATA_CODE) {
            var stringSize = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            if (stringSize <= 0 || stringSize > buffer2.length - index || buffer2[index + stringSize - 1] !== 0) throw new Error("bad string length in bson");
            var functionString = buffer2.toString("utf8", index, index + stringSize - 1);
            if (evalFunctions) {
                if (cacheFunctions) {
                    value6 = isolateEval(functionString, functionCache, object);
                } else {
                    value6 = isolateEval(functionString);
                }
            } else {
                value6 = new Code(functionString);
            }
            index = index + stringSize;
        } else if (elementType === BSON_DATA_CODE_W_SCOPE) {
            var totalSize = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            if (totalSize < 4 + 4 + 4 + 1) {
                throw new Error("code_w_scope total size shorter minimum expected length");
            }
            var stringSize = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            if (stringSize <= 0 || stringSize > buffer2.length - index || buffer2[index + stringSize - 1] !== 0) throw new Error("bad string length in bson");
            var functionString = buffer2.toString("utf8", index, index + stringSize - 1);
            index = index + stringSize;
            var _index = index;
            var objectSize = buffer2[index] | buffer2[index + 1] << 8 | buffer2[index + 2] << 16 | buffer2[index + 3] << 24;
            var scopeObject = deserializeObject(buffer2, _index, options6, false);
            index = index + objectSize;
            if (totalSize < 4 + 4 + objectSize + stringSize) {
                throw new Error("code_w_scope total size is too short, truncating scope");
            }
            if (totalSize > 4 + 4 + objectSize + stringSize) {
                throw new Error("code_w_scope total size is too long, clips outer document");
            }
            if (evalFunctions) {
                if (cacheFunctions) {
                    value6 = isolateEval(functionString, functionCache, object);
                } else {
                    value6 = isolateEval(functionString);
                }
                value6.scope = scopeObject;
            } else {
                value6 = new Code(functionString, scopeObject);
            }
        } else if (elementType === BSON_DATA_DBPOINTER) {
            var stringSize = buffer2[index++] | buffer2[index++] << 8 | buffer2[index++] << 16 | buffer2[index++] << 24;
            if (stringSize <= 0 || stringSize > buffer2.length - index || buffer2[index + stringSize - 1] !== 0) throw new Error("bad string length in bson");
            if (!validateUtf8(buffer2, index, index + stringSize - 1)) {
                throw new Error("Invalid UTF-8 string in BSON document");
            }
            var namespace = buffer2.toString("utf8", index, index + stringSize - 1);
            index = index + stringSize;
            var oidBuffer = buffer_1.alloc(12);
            buffer2.copy(oidBuffer, 0, index, index + 12);
            var oid = new ObjectId(oidBuffer);
            index = index + 12;
            value6 = new DBRef(namespace, oid);
        } else {
            throw new Error("Detected unknown BSON type " + elementType.toString(16) + ' for fieldname "' + name4 + '"');
        }
        if (name4 === "__proto__") {
            Object.defineProperty(object, name4, {
                value: value6,
                writable: true,
                enumerable: true,
                configurable: true
            });
        } else {
            object[name4] = value6;
        }
    }
    if (size7 !== index - startIndex) {
        if (isArray) throw new Error("corrupt array bson");
        throw new Error("corrupt object bson");
    }
    if (!isPossibleDBRef) return object;
    if (isDBRefLike(object)) {
        var copy4 = Object.assign({
        }, object);
        delete copy4.$ref;
        delete copy4.$id;
        delete copy4.$db;
        return new DBRef(object.$ref, object.$id, object.$db, copy4);
    }
    return object;
}
function isolateEval(functionString, functionCache2, object) {
    if (!functionCache2) return new Function(functionString);
    if (functionCache2[functionString] == null) {
        functionCache2[functionString] = new Function(functionString);
    }
    return functionCache2[functionString].bind(object);
}
function writeIEEE754(buffer2, value7, offset, endian, mLen, nBytes) {
    var e;
    var m;
    var c;
    var bBE = endian === "big";
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i3 = bBE ? nBytes - 1 : 0;
    var d = bBE ? -1 : 1;
    var s1 = value7 < 0 || value7 === 0 && 1 / value7 < 0 ? 1 : 0;
    value7 = Math.abs(value7);
    if (isNaN(value7) || value7 === Infinity) {
        m = isNaN(value7) ? 1 : 0;
        e = eMax;
    } else {
        e = Math.floor(Math.log(value7) / Math.LN2);
        if (value7 * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
        }
        if (e + eBias >= 1) {
            value7 += rt / c;
        } else {
            value7 += rt * Math.pow(2, 1 - eBias);
        }
        if (value7 * c >= 2) {
            e++;
            c /= 2;
        }
        if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
        } else if (e + eBias >= 1) {
            m = (value7 * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
        } else {
            m = value7 * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
        }
    }
    if (isNaN(value7)) m = 0;
    while(mLen >= 8){
        buffer2[offset + i3] = m & 255;
        i3 += d;
        m /= 256;
        mLen -= 8;
    }
    e = e << mLen | m;
    if (isNaN(value7)) e += 8;
    eLen += mLen;
    while(eLen > 0){
        buffer2[offset + i3] = e & 255;
        i3 += d;
        e /= 256;
        eLen -= 8;
    }
    buffer2[offset + i3 - d] |= s1 * 128;
}
var regexp = /\x00/;
var ignoreKeys = new Set([
    "$db",
    "$ref",
    "$id",
    "$clusterTime"
]);
function serializeString(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_STRING;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes + 1;
    buffer2[index - 1] = 0;
    var size7 = buffer2.write(value7, index + 4, void 0, "utf8");
    buffer2[index + 3] = size7 + 1 >> 24 & 255;
    buffer2[index + 2] = size7 + 1 >> 16 & 255;
    buffer2[index + 1] = size7 + 1 >> 8 & 255;
    buffer2[index] = size7 + 1 & 255;
    index = index + 4 + size7;
    buffer2[index++] = 0;
    return index;
}
function serializeNumber(buffer2, key6, value7, index, isArray) {
    if (Number.isInteger(value7) && value7 >= BSON_INT32_MIN && value7 <= BSON_INT32_MAX) {
        buffer2[index++] = BSON_DATA_INT;
        var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
        index = index + numberOfWrittenBytes;
        buffer2[index++] = 0;
        buffer2[index++] = value7 & 255;
        buffer2[index++] = value7 >> 8 & 255;
        buffer2[index++] = value7 >> 16 & 255;
        buffer2[index++] = value7 >> 24 & 255;
    } else {
        buffer2[index++] = BSON_DATA_NUMBER;
        var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
        index = index + numberOfWrittenBytes;
        buffer2[index++] = 0;
        writeIEEE754(buffer2, value7, index, "little", 52, 8);
        index = index + 8;
    }
    return index;
}
function serializeNull(buffer2, key6, _, index, isArray) {
    buffer2[index++] = BSON_DATA_NULL;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    return index;
}
function serializeBoolean(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_BOOLEAN;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    buffer2[index++] = value7 ? 1 : 0;
    return index;
}
function serializeDate(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_DATE;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    var dateInMilis = Long.fromNumber(value7.getTime());
    var lowBits = dateInMilis.getLowBits();
    var highBits = dateInMilis.getHighBits();
    buffer2[index++] = lowBits & 255;
    buffer2[index++] = lowBits >> 8 & 255;
    buffer2[index++] = lowBits >> 16 & 255;
    buffer2[index++] = lowBits >> 24 & 255;
    buffer2[index++] = highBits & 255;
    buffer2[index++] = highBits >> 8 & 255;
    buffer2[index++] = highBits >> 16 & 255;
    buffer2[index++] = highBits >> 24 & 255;
    return index;
}
function serializeRegExp(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_REGEXP;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    if (value7.source && value7.source.match(regexp) != null) {
        throw Error("value " + value7.source + " must not contain null bytes");
    }
    index = index + buffer2.write(value7.source, index, void 0, "utf8");
    buffer2[index++] = 0;
    if (value7.ignoreCase) buffer2[index++] = 105;
    if (value7.global) buffer2[index++] = 115;
    if (value7.multiline) buffer2[index++] = 109;
    buffer2[index++] = 0;
    return index;
}
function serializeBSONRegExp(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_REGEXP;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    if (value7.pattern.match(regexp) != null) {
        throw Error("pattern " + value7.pattern + " must not contain null bytes");
    }
    index = index + buffer2.write(value7.pattern, index, void 0, "utf8");
    buffer2[index++] = 0;
    index = index + buffer2.write(value7.options.split("").sort().join(""), index, void 0, "utf8");
    buffer2[index++] = 0;
    return index;
}
function serializeMinMax(buffer2, key6, value7, index, isArray) {
    if (value7 === null) {
        buffer2[index++] = BSON_DATA_NULL;
    } else if (value7._bsontype === "MinKey") {
        buffer2[index++] = BSON_DATA_MIN_KEY;
    } else {
        buffer2[index++] = BSON_DATA_MAX_KEY;
    }
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    return index;
}
function serializeObjectId(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_OID;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    if (typeof value7.id === "string") {
        buffer2.write(value7.id, index, void 0, "binary");
    } else if (isUint8Array(value7.id)) {
        buffer2.set(value7.id.subarray(0, 12), index);
    } else {
        throw new TypeError("object [" + JSON.stringify(value7) + "] is not a valid ObjectId");
    }
    return index + 12;
}
function serializeBuffer(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_BINARY;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    var size7 = value7.length;
    buffer2[index++] = size7 & 255;
    buffer2[index++] = size7 >> 8 & 255;
    buffer2[index++] = size7 >> 16 & 255;
    buffer2[index++] = size7 >> 24 & 255;
    buffer2[index++] = BSON_BINARY_SUBTYPE_DEFAULT;
    buffer2.set(ensureBuffer(value7), index);
    index = index + size7;
    return index;
}
function serializeObject(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray, path3) {
    if (checkKeys === void 0) {
        checkKeys = false;
    }
    if (depth === void 0) {
        depth = 0;
    }
    if (serializeFunctions === void 0) {
        serializeFunctions = false;
    }
    if (ignoreUndefined === void 0) {
        ignoreUndefined = true;
    }
    if (isArray === void 0) {
        isArray = false;
    }
    if (path3 === void 0) {
        path3 = [];
    }
    for(var i3 = 0; i3 < path3.length; i3++){
        if (path3[i3] === value7) throw new Error("cyclic dependency detected");
    }
    path3.push(value7);
    buffer2[index++] = Array.isArray(value7) ? BSON_DATA_ARRAY : BSON_DATA_OBJECT;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    var endIndex = serializeInto(buffer2, value7, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path3);
    path3.pop();
    return endIndex;
}
function serializeDecimal128(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_DECIMAL128;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    buffer2.set(value7.bytes.subarray(0, 16), index);
    return index + 16;
}
function serializeLong(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = value7._bsontype === "Long" ? BSON_DATA_LONG : BSON_DATA_TIMESTAMP;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    var lowBits = value7.getLowBits();
    var highBits = value7.getHighBits();
    buffer2[index++] = lowBits & 255;
    buffer2[index++] = lowBits >> 8 & 255;
    buffer2[index++] = lowBits >> 16 & 255;
    buffer2[index++] = lowBits >> 24 & 255;
    buffer2[index++] = highBits & 255;
    buffer2[index++] = highBits >> 8 & 255;
    buffer2[index++] = highBits >> 16 & 255;
    buffer2[index++] = highBits >> 24 & 255;
    return index;
}
function serializeInt32(buffer2, key6, value7, index, isArray) {
    value7 = value7.valueOf();
    buffer2[index++] = BSON_DATA_INT;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    buffer2[index++] = value7 & 255;
    buffer2[index++] = value7 >> 8 & 255;
    buffer2[index++] = value7 >> 16 & 255;
    buffer2[index++] = value7 >> 24 & 255;
    return index;
}
function serializeDouble(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_NUMBER;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    writeIEEE754(buffer2, value7.value, index, "little", 52, 8);
    index = index + 8;
    return index;
}
function serializeFunction(buffer2, key6, value7, index, _checkKeys, _depth, isArray) {
    buffer2[index++] = BSON_DATA_CODE;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    var functionString = normalizedFunctionString(value7);
    var size7 = buffer2.write(functionString, index + 4, void 0, "utf8") + 1;
    buffer2[index] = size7 & 255;
    buffer2[index + 1] = size7 >> 8 & 255;
    buffer2[index + 2] = size7 >> 16 & 255;
    buffer2[index + 3] = size7 >> 24 & 255;
    index = index + 4 + size7 - 1;
    buffer2[index++] = 0;
    return index;
}
function serializeCode(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions, ignoreUndefined, isArray) {
    if (checkKeys === void 0) {
        checkKeys = false;
    }
    if (depth === void 0) {
        depth = 0;
    }
    if (serializeFunctions === void 0) {
        serializeFunctions = false;
    }
    if (ignoreUndefined === void 0) {
        ignoreUndefined = true;
    }
    if (isArray === void 0) {
        isArray = false;
    }
    if (value7.scope && typeof value7.scope === "object") {
        buffer2[index++] = BSON_DATA_CODE_W_SCOPE;
        var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
        index = index + numberOfWrittenBytes;
        buffer2[index++] = 0;
        var startIndex = index;
        var functionString = typeof value7.code === "string" ? value7.code : value7.code.toString();
        index = index + 4;
        var codeSize = buffer2.write(functionString, index + 4, void 0, "utf8") + 1;
        buffer2[index] = codeSize & 255;
        buffer2[index + 1] = codeSize >> 8 & 255;
        buffer2[index + 2] = codeSize >> 16 & 255;
        buffer2[index + 3] = codeSize >> 24 & 255;
        buffer2[index + 4 + codeSize - 1] = 0;
        index = index + codeSize + 4;
        var endIndex = serializeInto(buffer2, value7.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined);
        index = endIndex - 1;
        var totalSize = endIndex - startIndex;
        buffer2[startIndex++] = totalSize & 255;
        buffer2[startIndex++] = totalSize >> 8 & 255;
        buffer2[startIndex++] = totalSize >> 16 & 255;
        buffer2[startIndex++] = totalSize >> 24 & 255;
        buffer2[index++] = 0;
    } else {
        buffer2[index++] = BSON_DATA_CODE;
        var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
        index = index + numberOfWrittenBytes;
        buffer2[index++] = 0;
        var functionString = value7.code.toString();
        var size7 = buffer2.write(functionString, index + 4, void 0, "utf8") + 1;
        buffer2[index] = size7 & 255;
        buffer2[index + 1] = size7 >> 8 & 255;
        buffer2[index + 2] = size7 >> 16 & 255;
        buffer2[index + 3] = size7 >> 24 & 255;
        index = index + 4 + size7 - 1;
        buffer2[index++] = 0;
    }
    return index;
}
function serializeBinary(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_BINARY;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    var data3 = value7.value(true);
    var size8 = value7.position;
    if (value7.sub_type === Binary.SUBTYPE_BYTE_ARRAY) size8 = size8 + 4;
    buffer2[index++] = size8 & 255;
    buffer2[index++] = size8 >> 8 & 255;
    buffer2[index++] = size8 >> 16 & 255;
    buffer2[index++] = size8 >> 24 & 255;
    buffer2[index++] = value7.sub_type;
    if (value7.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {
        size8 = size8 - 4;
        buffer2[index++] = size8 & 255;
        buffer2[index++] = size8 >> 8 & 255;
        buffer2[index++] = size8 >> 16 & 255;
        buffer2[index++] = size8 >> 24 & 255;
    }
    buffer2.set(data3, index);
    index = index + value7.position;
    return index;
}
function serializeSymbol(buffer2, key6, value7, index, isArray) {
    buffer2[index++] = BSON_DATA_SYMBOL;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    var size8 = buffer2.write(value7.value, index + 4, void 0, "utf8") + 1;
    buffer2[index] = size8 & 255;
    buffer2[index + 1] = size8 >> 8 & 255;
    buffer2[index + 2] = size8 >> 16 & 255;
    buffer2[index + 3] = size8 >> 24 & 255;
    index = index + 4 + size8 - 1;
    buffer2[index++] = 0;
    return index;
}
function serializeDBRef(buffer2, key6, value7, index, depth, serializeFunctions, isArray) {
    buffer2[index++] = BSON_DATA_OBJECT;
    var numberOfWrittenBytes = !isArray ? buffer2.write(key6, index, void 0, "utf8") : buffer2.write(key6, index, void 0, "ascii");
    index = index + numberOfWrittenBytes;
    buffer2[index++] = 0;
    var startIndex = index;
    var output = {
        $ref: value7.collection || value7.namespace,
        $id: value7.oid
    };
    if (value7.db != null) {
        output.$db = value7.db;
    }
    output = Object.assign(output, value7.fields);
    var endIndex = serializeInto(buffer2, output, false, index, depth + 1, serializeFunctions);
    var size8 = endIndex - startIndex;
    buffer2[startIndex++] = size8 & 255;
    buffer2[startIndex++] = size8 >> 8 & 255;
    buffer2[startIndex++] = size8 >> 16 & 255;
    buffer2[startIndex++] = size8 >> 24 & 255;
    return endIndex;
}
function serializeInto(buffer2, object, checkKeys, startingIndex, depth, serializeFunctions, ignoreUndefined, path3) {
    if (checkKeys === void 0) {
        checkKeys = false;
    }
    if (startingIndex === void 0) {
        startingIndex = 0;
    }
    if (depth === void 0) {
        depth = 0;
    }
    if (serializeFunctions === void 0) {
        serializeFunctions = false;
    }
    if (ignoreUndefined === void 0) {
        ignoreUndefined = true;
    }
    if (path3 === void 0) {
        path3 = [];
    }
    startingIndex = startingIndex || 0;
    path3 = path3 || [];
    path3.push(object);
    var index = startingIndex + 4;
    if (Array.isArray(object)) {
        for(var i3 = 0; i3 < object.length; i3++){
            var key6 = "" + i3;
            var value7 = object[i3];
            if (value7 && value7.toBSON) {
                if (typeof value7.toBSON !== "function") throw new TypeError("toBSON is not a function");
                value7 = value7.toBSON();
            }
            if (typeof value7 === "string") {
                index = serializeString(buffer2, key6, value7, index, true);
            } else if (typeof value7 === "number") {
                index = serializeNumber(buffer2, key6, value7, index, true);
            } else if (typeof value7 === "bigint") {
                throw new TypeError("Unsupported type BigInt, please use Decimal128");
            } else if (typeof value7 === "boolean") {
                index = serializeBoolean(buffer2, key6, value7, index, true);
            } else if (value7 instanceof Date || isDate(value7)) {
                index = serializeDate(buffer2, key6, value7, index, true);
            } else if (value7 === void 0) {
                index = serializeNull(buffer2, key6, value7, index, true);
            } else if (value7 === null) {
                index = serializeNull(buffer2, key6, value7, index, true);
            } else if (value7["_bsontype"] === "ObjectId" || value7["_bsontype"] === "ObjectID") {
                index = serializeObjectId(buffer2, key6, value7, index, true);
            } else if (isUint8Array(value7)) {
                index = serializeBuffer(buffer2, key6, value7, index, true);
            } else if (value7 instanceof RegExp || isRegExp(value7)) {
                index = serializeRegExp(buffer2, key6, value7, index, true);
            } else if (typeof value7 === "object" && value7["_bsontype"] == null) {
                index = serializeObject(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true, path3);
            } else if (typeof value7 === "object" && isBSONType(value7) && value7._bsontype === "Decimal128") {
                index = serializeDecimal128(buffer2, key6, value7, index, true);
            } else if (value7["_bsontype"] === "Long" || value7["_bsontype"] === "Timestamp") {
                index = serializeLong(buffer2, key6, value7, index, true);
            } else if (value7["_bsontype"] === "Double") {
                index = serializeDouble(buffer2, key6, value7, index, true);
            } else if (typeof value7 === "function" && serializeFunctions) {
                index = serializeFunction(buffer2, key6, value7, index, checkKeys, depth, true);
            } else if (value7["_bsontype"] === "Code") {
                index = serializeCode(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true);
            } else if (value7["_bsontype"] === "Binary") {
                index = serializeBinary(buffer2, key6, value7, index, true);
            } else if (value7["_bsontype"] === "Symbol") {
                index = serializeSymbol(buffer2, key6, value7, index, true);
            } else if (value7["_bsontype"] === "DBRef") {
                index = serializeDBRef(buffer2, key6, value7, index, depth, serializeFunctions, true);
            } else if (value7["_bsontype"] === "BSONRegExp") {
                index = serializeBSONRegExp(buffer2, key6, value7, index, true);
            } else if (value7["_bsontype"] === "Int32") {
                index = serializeInt32(buffer2, key6, value7, index, true);
            } else if (value7["_bsontype"] === "MinKey" || value7["_bsontype"] === "MaxKey") {
                index = serializeMinMax(buffer2, key6, value7, index, true);
            } else if (typeof value7["_bsontype"] !== "undefined") {
                throw new TypeError("Unrecognized or invalid _bsontype: " + value7["_bsontype"]);
            }
        }
    } else if (object instanceof bsonMap || isMap(object)) {
        var iterator = object.entries();
        var done = false;
        while(!done){
            var entry = iterator.next();
            done = !!entry.done;
            if (done) continue;
            var key6 = entry.value[0];
            var value7 = entry.value[1];
            var type4 = typeof value7;
            if (typeof key6 === "string" && !ignoreKeys.has(key6)) {
                if (key6.match(regexp) != null) {
                    throw Error("key " + key6 + " must not contain null bytes");
                }
                if (checkKeys) {
                    if (key6[0] === "$") {
                        throw Error("key " + key6 + " must not start with '$'");
                    } else if (~key6.indexOf(".")) {
                        throw Error("key " + key6 + " must not contain '.'");
                    }
                }
            }
            if (type4 === "string") {
                index = serializeString(buffer2, key6, value7, index);
            } else if (type4 === "number") {
                index = serializeNumber(buffer2, key6, value7, index);
            } else if (type4 === "bigint" || isBigInt64Array(value7) || isBigUInt64Array(value7)) {
                throw new TypeError("Unsupported type BigInt, please use Decimal128");
            } else if (type4 === "boolean") {
                index = serializeBoolean(buffer2, key6, value7, index);
            } else if (value7 instanceof Date || isDate(value7)) {
                index = serializeDate(buffer2, key6, value7, index);
            } else if (value7 === null || value7 === void 0 && ignoreUndefined === false) {
                index = serializeNull(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "ObjectId" || value7["_bsontype"] === "ObjectID") {
                index = serializeObjectId(buffer2, key6, value7, index);
            } else if (isUint8Array(value7)) {
                index = serializeBuffer(buffer2, key6, value7, index);
            } else if (value7 instanceof RegExp || isRegExp(value7)) {
                index = serializeRegExp(buffer2, key6, value7, index);
            } else if (type4 === "object" && value7["_bsontype"] == null) {
                index = serializeObject(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path3);
            } else if (type4 === "object" && value7["_bsontype"] === "Decimal128") {
                index = serializeDecimal128(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Long" || value7["_bsontype"] === "Timestamp") {
                index = serializeLong(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Double") {
                index = serializeDouble(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Code") {
                index = serializeCode(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions, ignoreUndefined);
            } else if (typeof value7 === "function" && serializeFunctions) {
                index = serializeFunction(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions);
            } else if (value7["_bsontype"] === "Binary") {
                index = serializeBinary(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Symbol") {
                index = serializeSymbol(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "DBRef") {
                index = serializeDBRef(buffer2, key6, value7, index, depth, serializeFunctions);
            } else if (value7["_bsontype"] === "BSONRegExp") {
                index = serializeBSONRegExp(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Int32") {
                index = serializeInt32(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "MinKey" || value7["_bsontype"] === "MaxKey") {
                index = serializeMinMax(buffer2, key6, value7, index);
            } else if (typeof value7["_bsontype"] !== "undefined") {
                throw new TypeError("Unrecognized or invalid _bsontype: " + value7["_bsontype"]);
            }
        }
    } else {
        if (object.toBSON) {
            if (typeof object.toBSON !== "function") throw new TypeError("toBSON is not a function");
            object = object.toBSON();
            if (object != null && typeof object !== "object") throw new TypeError("toBSON function did not return an object");
        }
        for(var key6 in object){
            var value7 = object[key6];
            if (value7 && value7.toBSON) {
                if (typeof value7.toBSON !== "function") throw new TypeError("toBSON is not a function");
                value7 = value7.toBSON();
            }
            var type4 = typeof value7;
            if (typeof key6 === "string" && !ignoreKeys.has(key6)) {
                if (key6.match(regexp) != null) {
                    throw Error("key " + key6 + " must not contain null bytes");
                }
                if (checkKeys) {
                    if (key6[0] === "$") {
                        throw Error("key " + key6 + " must not start with '$'");
                    } else if (~key6.indexOf(".")) {
                        throw Error("key " + key6 + " must not contain '.'");
                    }
                }
            }
            if (type4 === "string") {
                index = serializeString(buffer2, key6, value7, index);
            } else if (type4 === "number") {
                index = serializeNumber(buffer2, key6, value7, index);
            } else if (type4 === "bigint") {
                throw new TypeError("Unsupported type BigInt, please use Decimal128");
            } else if (type4 === "boolean") {
                index = serializeBoolean(buffer2, key6, value7, index);
            } else if (value7 instanceof Date || isDate(value7)) {
                index = serializeDate(buffer2, key6, value7, index);
            } else if (value7 === void 0) {
                if (ignoreUndefined === false) index = serializeNull(buffer2, key6, value7, index);
            } else if (value7 === null) {
                index = serializeNull(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "ObjectId" || value7["_bsontype"] === "ObjectID") {
                index = serializeObjectId(buffer2, key6, value7, index);
            } else if (isUint8Array(value7)) {
                index = serializeBuffer(buffer2, key6, value7, index);
            } else if (value7 instanceof RegExp || isRegExp(value7)) {
                index = serializeRegExp(buffer2, key6, value7, index);
            } else if (type4 === "object" && value7["_bsontype"] == null) {
                index = serializeObject(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path3);
            } else if (type4 === "object" && value7["_bsontype"] === "Decimal128") {
                index = serializeDecimal128(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Long" || value7["_bsontype"] === "Timestamp") {
                index = serializeLong(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Double") {
                index = serializeDouble(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Code") {
                index = serializeCode(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions, ignoreUndefined);
            } else if (typeof value7 === "function" && serializeFunctions) {
                index = serializeFunction(buffer2, key6, value7, index, checkKeys, depth, serializeFunctions);
            } else if (value7["_bsontype"] === "Binary") {
                index = serializeBinary(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Symbol") {
                index = serializeSymbol(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "DBRef") {
                index = serializeDBRef(buffer2, key6, value7, index, depth, serializeFunctions);
            } else if (value7["_bsontype"] === "BSONRegExp") {
                index = serializeBSONRegExp(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "Int32") {
                index = serializeInt32(buffer2, key6, value7, index);
            } else if (value7["_bsontype"] === "MinKey" || value7["_bsontype"] === "MaxKey") {
                index = serializeMinMax(buffer2, key6, value7, index);
            } else if (typeof value7["_bsontype"] !== "undefined") {
                throw new TypeError("Unrecognized or invalid _bsontype: " + value7["_bsontype"]);
            }
        }
    }
    path3.pop();
    buffer2[index++] = 0;
    var size8 = index - startingIndex;
    buffer2[startingIndex++] = size8 & 255;
    buffer2[startingIndex++] = size8 >> 8 & 255;
    buffer2[startingIndex++] = size8 >> 16 & 255;
    buffer2[startingIndex++] = size8 >> 24 & 255;
    return index;
}
var MAXSIZE = 1024 * 1024 * 17;
var buffer1 = buffer_1.alloc(MAXSIZE);
function setInternalBufferSize(size8) {
    if (buffer1.length < size8) {
        buffer1 = buffer_1.alloc(size8);
    }
}
function serialize(object, options6) {
    if (options6 === void 0) {
        options6 = {
        };
    }
    var checkKeys = typeof options6.checkKeys === "boolean" ? options6.checkKeys : false;
    var serializeFunctions = typeof options6.serializeFunctions === "boolean" ? options6.serializeFunctions : false;
    var ignoreUndefined = typeof options6.ignoreUndefined === "boolean" ? options6.ignoreUndefined : true;
    var minInternalBufferSize = typeof options6.minInternalBufferSize === "number" ? options6.minInternalBufferSize : MAXSIZE;
    if (buffer1.length < minInternalBufferSize) {
        buffer1 = buffer_1.alloc(minInternalBufferSize);
    }
    var serializationIndex = serializeInto(buffer1, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, []);
    var finishedBuffer = buffer_1.alloc(serializationIndex);
    buffer1.copy(finishedBuffer, 0, 0, finishedBuffer.length);
    return finishedBuffer;
}
function serializeWithBufferAndIndex(object, finalBuffer, options6) {
    if (options6 === void 0) {
        options6 = {
        };
    }
    var checkKeys = typeof options6.checkKeys === "boolean" ? options6.checkKeys : false;
    var serializeFunctions = typeof options6.serializeFunctions === "boolean" ? options6.serializeFunctions : false;
    var ignoreUndefined = typeof options6.ignoreUndefined === "boolean" ? options6.ignoreUndefined : true;
    var startIndex = typeof options6.index === "number" ? options6.index : 0;
    var serializationIndex = serializeInto(buffer1, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined);
    buffer1.copy(finalBuffer, startIndex, 0, serializationIndex);
    return startIndex + serializationIndex - 1;
}
function deserialize(buffer2, options6) {
    if (options6 === void 0) {
        options6 = {
        };
    }
    return deserialize$1(buffer2 instanceof buffer_1 ? buffer2 : ensureBuffer(buffer2), options6);
}
function calculateObjectSize(object, options6) {
    if (options6 === void 0) {
        options6 = {
        };
    }
    options6 = options6 || {
    };
    var serializeFunctions = typeof options6.serializeFunctions === "boolean" ? options6.serializeFunctions : false;
    var ignoreUndefined = typeof options6.ignoreUndefined === "boolean" ? options6.ignoreUndefined : true;
    return calculateObjectSize$1(object, serializeFunctions, ignoreUndefined);
}
function deserializeStream(data3, startIndex, numberOfDocuments, documents, docStartIndex, options6) {
    var internalOptions = Object.assign({
        allowObjectSmallerThanBufferSize: true,
        index: 0
    }, options6);
    var bufferData = ensureBuffer(data3);
    var index = startIndex;
    for(var i4 = 0; i4 < numberOfDocuments; i4++){
        var size8 = bufferData[index] | bufferData[index + 1] << 8 | bufferData[index + 2] << 16 | bufferData[index + 3] << 24;
        internalOptions.index = index;
        documents[docStartIndex + i4] = deserialize$1(bufferData, internalOptions);
        index = index + size8;
    }
    return index;
}
const mod4 = function() {
    return {
        BSONRegExp,
        BSONSymbol,
        BSON_BINARY_SUBTYPE_BYTE_ARRAY,
        BSON_BINARY_SUBTYPE_DEFAULT,
        BSON_BINARY_SUBTYPE_FUNCTION,
        BSON_BINARY_SUBTYPE_MD5,
        BSON_BINARY_SUBTYPE_USER_DEFINED,
        BSON_BINARY_SUBTYPE_UUID,
        BSON_BINARY_SUBTYPE_UUID_NEW,
        BSON_DATA_ARRAY,
        BSON_DATA_BINARY,
        BSON_DATA_BOOLEAN,
        BSON_DATA_CODE,
        BSON_DATA_CODE_W_SCOPE,
        BSON_DATA_DATE,
        BSON_DATA_DBPOINTER,
        BSON_DATA_DECIMAL128,
        BSON_DATA_INT,
        BSON_DATA_LONG,
        BSON_DATA_MAX_KEY,
        BSON_DATA_MIN_KEY,
        BSON_DATA_NULL,
        BSON_DATA_NUMBER,
        BSON_DATA_OBJECT,
        BSON_DATA_OID,
        BSON_DATA_REGEXP,
        BSON_DATA_STRING,
        BSON_DATA_SYMBOL,
        BSON_DATA_TIMESTAMP,
        BSON_DATA_UNDEFINED,
        BSON_INT32_MAX,
        BSON_INT32_MIN,
        BSON_INT64_MAX,
        BSON_INT64_MIN,
        Binary,
        Code,
        DBRef,
        Decimal128,
        Double,
        EJSON,
        Int32,
        Long,
        LongWithoutOverridesClass,
        Map: bsonMap,
        MaxKey,
        MinKey,
        ObjectID: ObjectId,
        ObjectId,
        Timestamp,
        UUID,
        calculateObjectSize,
        deserialize,
        deserializeStream,
        serialize,
        serializeWithBufferAndIndex,
        setInternalBufferSize
    };
}();
const base64abc1 = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "g",
    "h",
    "i",
    "j",
    "k",
    "l",
    "m",
    "n",
    "o",
    "p",
    "q",
    "r",
    "s",
    "t",
    "u",
    "v",
    "w",
    "x",
    "y",
    "z",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "+",
    "/"
];
function encode1(data3) {
    const uint8 = typeof data3 === "string" ? new TextEncoder().encode(data3) : data3 instanceof Uint8Array ? data3 : new Uint8Array(data3);
    let result = "", i4;
    const l = uint8.length;
    for(i4 = 2; i4 < l; i4 += 3){
        result += base64abc1[uint8[i4 - 2] >> 2];
        result += base64abc1[(uint8[i4 - 2] & 3) << 4 | uint8[i4 - 1] >> 4];
        result += base64abc1[(uint8[i4 - 1] & 15) << 2 | uint8[i4] >> 6];
        result += base64abc1[uint8[i4] & 63];
    }
    if (i4 === l + 1) {
        result += base64abc1[uint8[i4 - 2] >> 2];
        result += base64abc1[(uint8[i4 - 2] & 3) << 4];
        result += "==";
    }
    if (i4 === l) {
        result += base64abc1[uint8[i4 - 2] >> 2];
        result += base64abc1[(uint8[i4 - 2] & 3) << 4 | uint8[i4 - 1] >> 4];
        result += base64abc1[(uint8[i4 - 1] & 15) << 2];
        result += "=";
    }
    return result;
}
function decode1(b64) {
    const binString = atob(b64);
    const size9 = binString.length;
    const bytes = new Uint8Array(size9);
    for(let i4 = 0; i4 < size9; i4++){
        bytes[i4] = binString.charCodeAt(i4);
    }
    return bytes;
}
const mod5 = function() {
    return {
        encode: encode1,
        decode: decode1
    };
}();
let cachedTextDecoder1 = new TextDecoder("utf-8", {
    ignoreBOM: true,
    fatal: true
});
cachedTextDecoder1.decode();
let cachegetUint8Memory01 = null;
function getUint8Memory01() {
    if (cachegetUint8Memory01 === null || cachegetUint8Memory01.buffer !== wasm3.memory.buffer) {
        cachegetUint8Memory01 = new Uint8Array(wasm3.memory.buffer);
    }
    return cachegetUint8Memory01;
}
function getStringFromWasm01(ptr, len3) {
    return cachedTextDecoder1.decode(getUint8Memory01().subarray(ptr, ptr + len3));
}
const heap1 = new Array(32).fill(undefined);
heap1.push(undefined, null, true, false);
let heap_next1 = heap1.length;
function addHeapObject1(obj) {
    if (heap_next1 === heap1.length) heap1.push(heap1.length + 1);
    const idx = heap_next1;
    heap_next1 = heap1[idx];
    heap1[idx] = obj;
    return idx;
}
function getObject1(idx) {
    return heap1[idx];
}
function dropObject1(idx) {
    if (idx < 36) return;
    heap1[idx] = heap_next1;
    heap_next1 = idx;
}
function takeObject1(idx) {
    const ret2 = getObject1(idx);
    dropObject1(idx);
    return ret2;
}
let WASM_VECTOR_LEN1 = 0;
let cachedTextEncoder1 = new TextEncoder("utf-8");
const encodeString1 = function(arg, view) {
    return cachedTextEncoder1.encodeInto(arg, view);
};
function passStringToWasm01(arg, malloc, realloc) {
    if (realloc === undefined) {
        const buf = cachedTextEncoder1.encode(arg);
        const ptr = malloc(buf.length);
        getUint8Memory01().subarray(ptr, ptr + buf.length).set(buf);
        WASM_VECTOR_LEN1 = buf.length;
        return ptr;
    }
    let len3 = arg.length;
    let ptr = malloc(len3);
    const mem = getUint8Memory01();
    let offset = 0;
    for(; offset < len3; offset++){
        const code1 = arg.charCodeAt(offset);
        if (code1 > 127) break;
        mem[ptr + offset] = code1;
    }
    if (offset !== len3) {
        if (offset !== 0) {
            arg = arg.slice(offset);
        }
        ptr = realloc(ptr, len3, len3 = offset + arg.length * 3);
        const view = getUint8Memory01().subarray(ptr + offset, ptr + len3);
        const ret2 = encodeString1(arg, view);
        offset += ret2.written;
    }
    WASM_VECTOR_LEN1 = offset;
    return ptr;
}
function create_hash(algorithm2) {
    var ptr01 = passStringToWasm01(algorithm2, wasm3.__wbindgen_malloc, wasm3.__wbindgen_realloc);
    var len01 = WASM_VECTOR_LEN1;
    var ret2 = wasm3.create_hash(ptr01, len01);
    return DenoHash.__wrap(ret2);
}
function _assertClass(instance, klass) {
    if (!(instance instanceof klass)) {
        throw new Error(`expected instance of ${klass.name}`);
    }
    return instance.ptr;
}
function passArray8ToWasm0(arg, malloc) {
    const ptr = malloc(arg.length * 1);
    getUint8Memory01().set(arg, ptr / 1);
    WASM_VECTOR_LEN1 = arg.length;
    return ptr;
}
function update_hash(hash, data3) {
    _assertClass(hash, DenoHash);
    var ptr01 = passArray8ToWasm0(data3, wasm3.__wbindgen_malloc);
    var len01 = WASM_VECTOR_LEN1;
    wasm3.update_hash(hash.ptr, ptr01, len01);
}
let cachegetInt32Memory01 = null;
function getInt32Memory01() {
    if (cachegetInt32Memory01 === null || cachegetInt32Memory01.buffer !== wasm3.memory.buffer) {
        cachegetInt32Memory01 = new Int32Array(wasm3.memory.buffer);
    }
    return cachegetInt32Memory01;
}
function getArrayU8FromWasm01(ptr, len3) {
    return getUint8Memory01().subarray(ptr / 1, ptr / 1 + len3);
}
function digest_hash(hash) {
    try {
        const retptr = wasm3.__wbindgen_add_to_stack_pointer(-16);
        _assertClass(hash, DenoHash);
        wasm3.digest_hash(retptr, hash.ptr);
        var r0 = getInt32Memory01()[retptr / 4 + 0];
        var r14 = getInt32Memory01()[retptr / 4 + 1];
        var v0 = getArrayU8FromWasm01(r0, r14).slice();
        wasm3.__wbindgen_free(r0, r14 * 1);
        return v0;
    } finally{
        wasm3.__wbindgen_add_to_stack_pointer(16);
    }
}
const DenoHashFinalization = new FinalizationRegistry((ptr)=>wasm3.__wbg_denohash_free(ptr)
);
class DenoHash {
    static __wrap(ptr) {
        const obj = Object.create(DenoHash.prototype);
        obj.ptr = ptr;
        DenoHashFinalization.register(obj, obj.ptr, obj);
        return obj;
    }
    __destroy_into_raw() {
        const ptr = this.ptr;
        this.ptr = 0;
        DenoHashFinalization.unregister(this);
        return ptr;
    }
    free() {
        const ptr = this.__destroy_into_raw();
        wasm3.__wbg_denohash_free(ptr);
    }
}
const imports1 = {
    __wbindgen_placeholder__: {
        __wbindgen_string_new: function(arg0, arg1) {
            var ret2 = getStringFromWasm01(arg0, arg1);
            return addHeapObject1(ret2);
        },
        __wbindgen_throw: function(arg0, arg1) {
            throw new Error(getStringFromWasm01(arg0, arg1));
        },
        __wbindgen_rethrow: function(arg0) {
            throw takeObject1(arg0);
        }
    }
};
const wasmModule1 = new WebAssembly.Module(decode1("AGFzbQEAAAAB64CAgAAQYAAAYAF/AGABfwF/YAF/AX5gAn9/AGACf38Bf2ADf39/AGADf39/AX9gBH\
9/f38Bf2AFf39/f38AYAV/f39/fwF/YAZ/f39/f38Bf2AFf39/fn8AYAd/f39+f39/AX9gAn9+AGAC\
fn8BfwKMgYCAAAMYX193YmluZGdlbl9wbGFjZWhvbGRlcl9fFV9fd2JpbmRnZW5fc3RyaW5nX25ldw\
AFGF9fd2JpbmRnZW5fcGxhY2Vob2xkZXJfXxBfX3diaW5kZ2VuX3Rocm93AAQYX193YmluZGdlbl9w\
bGFjZWhvbGRlcl9fEl9fd2JpbmRnZW5fcmV0aHJvdwABA8aBgIAAxAEGBgUEBAYCDAYEBA0EAQQEAQ\
cFBA4ECgQEBwQEBAQECwQEBAQEBAQEBAQEBAQEAQQEBAQEBAQEBAUHBAQEBAYGBgYEBAQPAQQEBAEE\
BAQEBgYGBgYEBAQEBAQGBAQGBAYEBAQEBAQEBAQGBAQEBAQEBAQEBgQEBAQEBAQECQUFAQEGBgYGBg\
QBBQAEBwcBBggBBgEBBwEBAQQBBwIBBwEBBQUCBQUGAQEBAQQABQIAAAUEAQMCAgICAgICAgICAgIC\
AAQBBIWAgIAAAXABcXEFg4CAgAABABEGiYCAgAABfwFBgIDAAAsHroGAgAAJBm1lbW9yeQIAE19fd2\
JnX2Rlbm9oYXNoX2ZyZWUAkAELY3JlYXRlX2hhc2gABQt1cGRhdGVfaGFzaACRAQtkaWdlc3RfaGFz\
aACNARFfX3diaW5kZ2VuX21hbGxvYwCeARJfX3diaW5kZ2VuX3JlYWxsb2MAoAEfX193YmluZGdlbl\
9hZGRfdG9fc3RhY2tfcG9pbnRlcgCwAQ9fX3diaW5kZ2VuX2ZyZWUArQEJnoGAgAABAEEBC3CnAcUB\
rwGmAbMBxgFdGGFNwQE4VVhlnwG9AXVTV2R0VDlZmQG/AWpWHjCTAcABT2I6WpoBa2AvR5UBuwFzLT\
KWAbwBclIaJ4MBwwFfGyyCAcIBXkM/RqsBuAF4QTQ2rAG5AXxEJCWqAbcBfkIoKqkBugF9PkV6MzV5\
IyZ7KSt3ogELITeKAb4BH44BO4sBpAGAAYEBtgGjAQqChIeAAMQBkVoCAX8ifiMAQYABayIDJAAgA0\
EAQYABEJ0BIQMgACkDOCEEIAApAzAhBSAAKQMoIQYgACkDICEHIAApAxghCCAAKQMQIQkgACkDCCEK\
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\
CnZzaiAeaiAiICVqIhsgAiAhc3EgIXNqIBtBGncgG0EVd3MgG0EHd3NqQfLxxbN8aiIeaiELIBwgCm\
ohCiAjIAlqIQkgICAIaiEIIB0gB2ogHmohByAbIAZqIQYgAiAFaiEFICEgBGohBCABQcAAaiIBIAxH\
DQALCyAAIAQ2AhwgACAFNgIYIAAgBjYCFCAAIAc2AhAgACAINgIMIAAgCTYCCCAAIAo2AgQgACALNg\
IAC7U7Agl/BH4jAEHgA2siAiQAIAIgATYCDCACIAA2AggCQAJAAkACQAJAAkACQAJAAkACQAJAAkAC\
QAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAk\
ACQAJAAkAgAUF9ag4HABITAhMDARMLIABBgIDAAEEDEI8BRQ0DIABBqIDAAEEDEI8BRQ0EIABB0IDA\
AEEDEI8BDRIgAkG6AWpCADcBACACQcIBakEAOwEAIAJBsAFqQRRqQgA3AgAgAkGwAWpBHGpCADcCAC\
ACQbABakEkakIANwIAIAJBsAFqQSxqQgA3AgAgAkGwAWpBNGpCADcCACACQbABakE8akEAOgAAIAJB\
7QFqQQA2AAAgAkHxAWpBADsAACACQfMBakEAOgAAIAJBwAA2ArABIAJBADsBtAEgAkEANgG2ASACQc\
gCaiACQbABakHEABCXARogAkHYAGoiAyACQcgCakE8aikCADcDACACQdAAaiIEIAJByAJqQTRqKQIA\
NwMAIAJByABqIgUgAkHIAmpBLGopAgA3AwAgAkHAAGoiBiACQcgCakEkaikCADcDACACQThqIgcgAk\
HIAmpBHGopAgA3AwAgAkEwaiIIIAJByAJqQRRqKQIANwMAIAJBIGpBCGoiCSACQdQCaikCADcDACAC\
IAIpAswCNwMgQeAAEAkiCkUNFSAKQQA2AgggCkIANwMAIAogAikDIDcCDCAKQRRqIAkpAwA3AgAgCk\
EcaiAIKQMANwIAIApBJGogBykDADcCACAKQSxqIAYpAwA3AgAgCkE0aiAFKQMANwIAIApBPGogBCkD\
ADcCACAKQcQAaiADKQMANwIAIApB1ABqQQApApibQDcCACAKQQApApCbQDcCTEHUgMAAIQRBACEDDC\
gLIABB+IDAAEEJEI8BRQ0EIABBqIHAAEEJEI8BRQ0FIABBvITAACABEI8BRQ0NIABB7ITAACABEI8B\
RQ0OIABBnIXAACABEI8BRQ0PIABBzIXAACABEI8BDREgAkG6AWpCADcBACACQcIBakEAOwEAIAJBxA\
FqQgA3AgAgAkHMAWpCADcCACACQdQBakIANwIAIAJB3AFqQgA3AgAgAkHkAWpCADcCACACQewBakEA\
OgAAIAJB7QFqQgA3AAAgAkH1AWpBADYAACACQfkBakEAOwAAIAJB+wFqQQA6AAAgAkHIADYCsAEgAk\
EAOwG0ASACQQA2AbYBIAJByAJqIAJBsAFqQcwAEJcBGiACQSBqIAJByAJqQQRyQcgAEJcBGkGYAhAJ\
IgpFDSIgCkEAQcwBEJ0BQcwBaiACQSBqQcgAEJcBGkHYhcAAIQRBACEDDCcLIABB/IHAAEEGEI8BRQ\
0FIABBqILAAEEGEI8BRQ0GIABB1ILAAEEGEI8BRQ0HIABBgIPAAEEGEI8BRQ0IIABB/IXAAEEGEI8B\
DRAgAkHlAmoiA0EAKQOQnUAiCzcAACACQd0CakEAKQOInUAiDDcAACACQdUCakEAKQOAnUAiDTcAAC\
ACQQApA/icQCIONwDNAkH4DhAJIgpFDSIgCkIANwMAIAogDjcDCCAKQRBqIA03AwAgCkEYaiAMNwMA\
IApBIGogCzcDACAKQShqQQBBwwAQnQEaIApBADoA8A4gCkGIAWogAykAADcAACAKQYMBaiACQcgCak\
EYaikAADcAACAKQfsAaiACQcgCakEQaikAADcAACAKQfMAaiACQdACaikAADcAACAKIAIpAMgCNwBr\
QYSGwAAhBEEAIQMMJgsgACkAAELz0IWb08WMmTRRDQggACkAAELz0IWb08XMmjZRDQkgACkAAELz0I\
Wb0+WMnDRRDQogACkAAELz0IWb06XNmDJSDQ8gAkG6AWpCADcBACACQcIBakEAOwEAIAJBxAFqQgA3\
AgAgAkHMAWpCADcCACACQdQBakIANwIAIAJB3AFqQgA3AgAgAkHkAWpCADcCACACQewBakEAOgAAIA\
JB7QFqQgA3AAAgAkH1AWpBADYAACACQfkBakEAOwAAIAJB+wFqQQA6AAAgAkHIADYCsAEgAkEAOwG0\
ASACQQA2AbYBIAJByAJqIAJBsAFqQcwAEJcBGiACQSBqIAJByAJqQQRyQcgAEJcBGkGYAhAJIgpFDR\
wgCkEAQcwBEJ0BQcwBaiACQSBqQcgAEJcBGkGYhMAAIQRBACEDDCULIAJBugFqIgpCADcBACACQcIB\
aiIEQQA7AQAgAkEQNgKwASACQQA7AbQBIAJBADYBtgEgAkHIAmpBEGoiBSACQbABakEQaiIGKAIANg\
IAIAJByAJqQQhqIgMgAkGwAWpBCGoiBykDADcDACACQSBqQQhqIgggAkHIAmpBDGoiCSkCADcDACAC\
IAIpA7ABNwPIAiACIAIpAswCNwMgIApCADcBACAEQQA7AQAgAkEQNgKwASACQQA7AbQBIAJBADYBtg\
EgBSAGKAIANgIAIAMgBykDADcDACACIAIpA7ABNwPIAiACQRBqQQhqIgQgCSkCADcDACACIAIpAswC\
NwMQIAMgCCkDADcDACACIAIpAyA3A8gCQdQAEAkiCkUNDyAKQQA2AgAgCiACKQPIAjcCBCAKQgA3Ah\
QgCiACKQMQNwJEIApBHGpCADcCACAKQSRqQgA3AgAgCkEsakIANwIAIApBNGpCADcCACAKQTxqQgA3\
AgAgCkEMaiADKQMANwIAIApBzABqIAQpAwA3AgBBhIDAACEEQQAhAwwkCyACQboBakIANwEAIAJBwg\
FqQQA7AQAgAkGwAWpBFGpCADcCACACQbABakEcakIANwIAIAJBsAFqQSRqQgA3AgAgAkGwAWpBLGpC\
ADcCACACQbABakE0akIANwIAIAJBsAFqQTxqQQA6AAAgAkHtAWpBADYAACACQfEBakEAOwAAIAJB8w\
FqQQA6AAAgAkHAADYCsAEgAkEAOwG0ASACQQA2AbYBIAJByAJqIAJBsAFqQcQAEJcBGiACQdgAaiID\
IAJByAJqQTxqKQIANwMAIAJB0ABqIgQgAkHIAmpBNGopAgA3AwAgAkHIAGoiBSACQcgCakEsaikCAD\
cDACACQcAAaiIGIAJByAJqQSRqKQIANwMAIAJBOGoiByACQcgCakEcaikCADcDACACQTBqIgggAkHI\
AmpBFGopAgA3AwAgAkEgakEIaiIJIAJB1AJqKQIANwMAIAIgAikCzAI3AyBB4AAQCSIKRQ0PIApBAD\
YCCCAKQgA3AwAgCiACKQMgNwIMIApBFGogCSkDADcCACAKQRxqIAgpAwA3AgAgCkEkaiAHKQMANwIA\
IApBLGogBikDADcCACAKQTRqIAUpAwA3AgAgCkE8aiAEKQMANwIAIApBxABqIAMpAwA3AgAgCkHUAG\
pBACkCmJtANwIAIApBACkCkJtANwJMQayAwAAhBEEAIQMMIwsgAkG6AWpCADcBACACQcIBakEAOwEA\
IAJBsAFqQRRqQgA3AgAgAkGwAWpBHGpCADcCACACQbABakEkakIANwIAIAJBsAFqQSxqQgA3AgAgAk\
GwAWpBNGpCADcCACACQbABakE8akEAOgAAIAJB7QFqQQA2AAAgAkHxAWpBADsAACACQfMBakEAOgAA\
IAJBwAA2ArABIAJBADsBtAEgAkEANgG2ASACQcgCaiACQbABakHEABCXARogAkEgakE4aiIDIAJByA\
JqQTxqKQIANwMAIAJBIGpBMGoiBCACQcgCakE0aikCADcDACACQSBqQShqIgUgAkHIAmpBLGopAgA3\
AwAgAkHAAGoiBiACQcgCakEkaikCADcDACACQSBqQRhqIgcgAkHIAmpBHGopAgA3AwAgAkEgakEQai\
IIIAJByAJqQRRqKQIANwMAIAJBIGpBCGoiCSACQdQCaikCADcDACACIAIpAswCNwMgQeAAEAkiCkUN\
ECAKQgA3AwAgCkEANgIcIAogAikDIDcCICAKQQApA8ibQDcDCCAKQRBqQQApA9CbQDcDACAKQRhqQQ\
AoAtibQDYCACAKQShqIAkpAwA3AgAgCkEwaiAIKQMANwIAIApBOGogBykDADcCACAKQcAAaiAGKQMA\
NwIAIApByABqIAUpAwA3AgAgCkHQAGogBCkDADcCACAKQdgAaiADKQMANwIAQYSBwAAhBEEAIQMMIg\
sgAkG6AWpCADcBACACQcIBakEAOwEAIAJBsAFqQRRqQgA3AgAgAkGwAWpBHGpCADcCACACQbABakEk\
akIANwIAIAJBsAFqQSxqQgA3AgAgAkGwAWpBNGpCADcCACACQbABakE8akEAOgAAIAJB7QFqQQA2AA\
AgAkHxAWpBADsAACACQfMBakEAOgAAIAJBwAA2ArABIAJBADsBtAEgAkEANgG2ASACQcgCaiACQbAB\
akHEABCXARogAkHYAGoiAyACQcgCakE8aikCADcDACACQdAAaiIEIAJByAJqQTRqKQIANwMAIAJBIG\
pBKGoiBSACQcgCakEsaikCADcDACACQSBqQSBqIgYgAkHIAmpBJGopAgA3AwAgAkEgakEYaiIHIAJB\
yAJqQRxqKQIANwMAIAJBIGpBEGoiCCACQcgCakEUaikCADcDACACQSBqQQhqIgkgAkHUAmopAgA3Aw\
AgAiACKQLMAjcDIEH4ABAJIgpFDRAgCkIANwMAIApBADYCMCAKIAIpAyA3AjQgCkEAKQOgm0A3Awgg\
CkEQakEAKQOom0A3AwAgCkEYakEAKQOwm0A3AwAgCkEgakEAKQO4m0A3AwAgCkEoakEAKQPAm0A3Aw\
AgCkE8aiAJKQMANwIAIApBxABqIAgpAwA3AgAgCkHMAGogBykDADcCACAKQdQAaiAGKQMANwIAIApB\
3ABqIAUpAwA3AgAgCkHkAGogBCkDADcCACAKQewAaiADKQMANwIAQbSBwAAhBEEAIQMMIQsgAkG6AW\
pCADcBACACQcIBakEAOwEAIAJBsAFqQRRqQgA3AgAgAkGwAWpBHGpCADcCACACQbABakEkakIANwIA\
IAJBsAFqQSxqQgA3AgAgAkGwAWpBNGpCADcCACACQbABakE8akEAOgAAIAJB7QFqQQA2AAAgAkHxAW\
pBADsAACACQfMBakEAOgAAIAJBwAA2ArABIAJBADsBtAEgAkEANgG2ASACQcgCaiACQbABakHEABCX\
ARogAkHYAGoiAyACQcgCakE8aikCADcDACACQdAAaiIEIAJByAJqQTRqKQIANwMAIAJByABqIgUgAk\
HIAmpBLGopAgA3AwAgAkHAAGoiBiACQcgCakEkaikCADcDACACQThqIgcgAkHIAmpBHGopAgA3AwAg\
AkEwaiIIIAJByAJqQRRqKQIANwMAIAJBIGpBCGoiCSACQdQCaikCADcDACACIAIpAswCNwMgQfAAEA\
kiCkUNECAKIAIpAyA3AgwgCkEANgIIIApCADcDACAKQRxqIAgpAwA3AgAgCkEUaiAJKQMANwIAIApB\
JGogBykDADcCACAKQSxqIAYpAwA3AgAgCkE0aiAFKQMANwIAIApBPGogBCkDADcCACAKQcQAaiADKQ\
MANwIAIApB1ABqQQApAuCcQDcCACAKQQApAticQDcCTCAKQeQAakEAKQLwnEA3AgAgCkHcAGpBACkC\
6JxANwIAQYSCwAAhBEEAIQMMIAsgAkG6AWpCADcBACACQcIBakEAOwEAIAJBsAFqQRRqQgA3AgAgAk\
GwAWpBHGpCADcCACACQbABakEkakIANwIAIAJBsAFqQSxqQgA3AgAgAkGwAWpBNGpCADcCACACQbAB\
akE8akEAOgAAIAJB7QFqQQA2AAAgAkHxAWpBADsAACACQfMBakEAOgAAIAJBwAA2ArABIAJBADsBtA\
EgAkEANgG2ASACQcgCaiACQbABakHEABCXARogAkHYAGoiAyACQcgCakE8aikCADcDACACQdAAaiIE\
IAJByAJqQTRqKQIANwMAIAJByABqIgUgAkHIAmpBLGopAgA3AwAgAkHAAGoiBiACQcgCakEkaikCAD\
cDACACQThqIgcgAkHIAmpBHGopAgA3AwAgAkEwaiIIIAJByAJqQRRqKQIANwMAIAJBIGpBCGoiCSAC\
QdQCaikCADcDACACIAIpAswCNwMgQfAAEAkiCkUNECAKIAIpAyA3AgwgCkEANgIIIApCADcDACAKQR\
xqIAgpAwA3AgAgCkEUaiAJKQMANwIAIApBJGogBykDADcCACAKQSxqIAYpAwA3AgAgCkE0aiAFKQMA\
NwIAIApBPGogBCkDADcCACAKQcQAaiADKQMANwIAIApB1ABqQQApA4CdQDcCACAKQQApA/icQDcCTC\
AKQeQAakEAKQOQnUA3AgAgCkHcAGpBACkDiJ1ANwIAQbCCwAAhBEEAIQMMHwsgAkEANgKwASACQbAB\
akEEciEDQQAhCgNAIAMgCmpBADoAACACIAIoArABQQFqNgKwASAKQQFqIgpBgAFHDQALIAJByAJqIA\
JBsAFqQYQBEJcBGiACQSBqIAJByAJqQQRyQYABEJcBGkHYARAJIgpFDRAgCkIANwMIIApCADcDACAK\
QQA2AlAgCkEAKQOYnUA3AxAgCkEYakEAKQOgnUA3AwAgCkEgakEAKQOonUA3AwAgCkEoakEAKQOwnU\
A3AwAgCkEwakEAKQO4nUA3AwAgCkE4akEAKQPAnUA3AwAgCkHAAGpBACkDyJ1ANwMAIApByABqQQAp\
A9CdQDcDACAKQdQAaiACQSBqQYABEJcBGkHcgsAAIQRBACEDDB4LIAJBADYCsAEgAkGwAWpBBHIhA0\
EAIQoDQCADIApqQQA6AAAgAiACKAKwAUEBajYCsAEgCkEBaiIKQYABRw0ACyACQcgCaiACQbABakGE\
ARCXARogAkEgaiACQcgCakEEckGAARCXARpB2AEQCSIKRQ0QIApCADcDCCAKQgA3AwAgCkEANgJQIA\
pBACkD2J1ANwMQIApBGGpBACkD4J1ANwMAIApBIGpBACkD6J1ANwMAIApBKGpBACkD8J1ANwMAIApB\
MGpBACkD+J1ANwMAIApBOGpBACkDgJ5ANwMAIApBwABqQQApA4ieQDcDACAKQcgAakEAKQOQnkA3Aw\
AgCkHUAGogAkEgakGAARCXARpBiIPAACEEQQAhAwwdCyACQQA2ArABQQQhCgNAIAJBsAFqIApqQQA6\
AAAgAiACKAKwAUEBajYCsAEgCkEBaiIKQZQBRw0ACyACQcgCaiACQbABakGUARCXARogAkEgaiACQc\
gCakEEckGQARCXARpB4AIQCSIKRQ0QIApBAEHMARCdAUHMAWogAkEgakGQARCXARpBrIPAACEEQQAh\
AwwcCyACQQA2ArABQQQhCgNAIAJBsAFqIApqQQA6AAAgAiACKAKwAUEBajYCsAEgCkEBaiIKQYwBRw\
0ACyACQcgCaiACQbABakGMARCXARogAkEgaiACQcgCakEEckGIARCXARpB2AIQCSIKRQ0QIApBAEHM\
ARCdAUHMAWogAkEgakGIARCXARpB0IPAACEEQQAhAwwbCyACQQA2ArABQQQhCgNAIAJBsAFqIApqQQ\
A6AAAgAiACKAKwAUEBajYCsAEgCkEBaiIKQewARw0ACyACQcgCaiACQbABakHsABCXARogAkEgaiAC\
QcgCakEEckHoABCXARpBuAIQCSIKRQ0QIApBAEHMARCdAUHMAWogAkEgakHoABCXARpB9IPAACEEQQ\
AhAwwaCyACQQA2ArABQQQhCgNAIAJBsAFqIApqQQA6AAAgAiACKAKwAUEBajYCsAEgCkEBaiIKQZQB\
Rw0ACyACQcgCaiACQbABakGUARCXARogAkEgaiACQcgCakEEckGQARCXARpB4AIQCSIKRQ0RIApBAE\
HMARCdAUHMAWogAkEgakGQARCXARpByITAACEEQQAhAwwZCyACQQA2ArABQQQhCgNAIAJBsAFqIApq\
QQA6AAAgAiACKAKwAUEBajYCsAEgCkEBaiIKQYwBRw0ACyACQcgCaiACQbABakGMARCXARogAkEgai\
ACQcgCakEEckGIARCXARpB2AIQCSIKRQ0RIApBAEHMARCdAUHMAWogAkEgakGIARCXARpB+ITAACEE\
QQAhAwwYCyACQQA2ArABQQQhCgNAIAJBsAFqIApqQQA6AAAgAiACKAKwAUEBajYCsAEgCkEBaiIKQe\
wARw0ACyACQcgCaiACQbABakHsABCXARogAkEgaiACQcgCakEEckHoABCXARpBuAIQCSIKRQ0RIApB\
AEHMARCdAUHMAWogAkEgakHoABCXARpBqIXAACEEQQAhAwwXCyAAKAAAQfPQhYsDRg0VCyACQQE2Ai\
QgAiACQQhqNgIgQTgQCSIKRQ0SIAJCODcCtAEgAiAKNgKwASACIAJBsAFqNgIQIAJB3AJqQQE2AgAg\
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\
QQp3IhtzakGh1+f2BmpBDXcgHmoiHCARQX9zciAXQQp3IhdzakGh1+f2BmpBBncgG2oiHkEKdyIfai\
AaIBNBf3NxaiATIBZxakHp7bXTB2pBD3cgGGoiEkF/c3FqIBIgE3FqQenttdMHakEFdyAaaiITQX9z\
cWogEyAScWpB6e210wdqQQh3IB1qIhZBCnciGGogDyAZaiATQQp3IhogECAdaiASQQp3Ih0gFkF/c3\
FqIBYgE3FqQenttdMHakELdyAZaiISQX9zcWogEiAWcWpB6e210wdqQQ53IB1qIhNBCnciGSABIBpq\
IBJBCnciICAHIB1qIBggE0F/c3FqIBMgEnFqQenttdMHakEOdyAaaiISQX9zcWogEiATcWpB6e210w\
dqQQZ3IBhqIhNBf3NxaiATIBJxakHp7bXTB2pBDncgIGoiFkEKdyIYaiANIBlqIBNBCnciGiACICBq\
IBJBCnciHSAWQX9zcWogFiATcWpB6e210wdqQQZ3IBlqIhJBf3NxaiASIBZxakHp7bXTB2pBCXcgHW\
oiE0EKdyIZIAYgGmogEkEKdyIgIAggHWogGCATQX9zcWogEyAScWpB6e210wdqQQx3IBpqIhJBf3Nx\
aiASIBNxakHp7bXTB2pBCXcgGGoiE0F/c3FqIBMgEnFqQenttdMHakEMdyAgaiIWQQp3IhhqIA4gEk\
EKdyIaaiAYIAwgGWogE0EKdyIdIAQgIGogGiAWQX9zcWogFiATcWpB6e210wdqQQV3IBlqIhJBf3Nx\
aiASIBZxakHp7bXTB2pBD3cgGmoiE0F/c3FqIBMgEnFqQenttdMHakEIdyAdaiIZIAogDyAFIA0gHE\
EKdyIWaiACIBFBCnciEWogByAXaiAGIBtqIB4gHEF/c3IgEXNqQaHX5/YGakEFdyAXaiIXIB5Bf3Ny\
IBZzakGh1+f2BmpBDHcgEWoiESAXQX9zciAfc2pBodfn9gZqQQd3IBZqIhogEUF/c3IgF0EKdyIbc2\
pBodfn9gZqQQV3IB9qIhxBCnciFmogByARQQp3IhdqIBUgEGogGiAXQX9zcWogHCAXcWpB3Pnu+Hhq\
QQt3IBtqIhUgFkF/c3FqIAsgG2ogHCAaQQp3IhFBf3NxaiAVIBFxakHc+e74eGpBDHcgF2oiGiAWcW\
pB3Pnu+HhqQQ53IBFqIhsgGkEKdyIXQX9zcWogDCARaiAaIBVBCnciEUF/c3FqIBsgEXFqQdz57vh4\
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\
cyASIBFzIBZzIA8gDXMgC3MgAnNBAXciIHNBAXciIXNBAXciInNBAXciI3NBAXciJHNBAXciJXNBAX\
ciJnNBAXciJyAdICFzIAIgFnMgIXMgFCALcyAgcyAdc0EBdyIoc0EBdyIpcyAcICBzIChzIB9zQQF3\
IipzQQF3IitzIB8gKXMgK3MgHiAocyAqcyAnc0EBdyIsc0EBdyItcyAmICpzICxzICUgH3MgJ3MgJC\
AecyAmcyAjIBtzICVzICIgGnMgJHMgISAZcyAjcyAgIBdzICJzIClzQQF3Ii5zQQF3Ii9zQQF3IjBz\
QQF3IjFzQQF3IjJzQQF3IjNzQQF3IjRzQQF3IjUgKyAvcyApICNzIC9zICggInMgLnMgK3NBAXciNn\
NBAXciN3MgKiAucyA2cyAtc0EBdyI4c0EBdyI5cyAtIDdzIDlzICwgNnMgOHMgNXNBAXciOnNBAXci\
O3MgNCA4cyA6cyAzIC1zIDVzIDIgLHMgNHMgMSAncyAzcyAwICZzIDJzIC8gJXMgMXMgLiAkcyAwcy\
A3c0EBdyI8c0EBdyI9c0EBdyI+c0EBdyI/c0EBdyJAc0EBdyJBc0EBdyJCc0EBdyJDIDkgPXMgNyAx\
cyA9cyA2IDBzIDxzIDlzQQF3IkRzQQF3IkVzIDggPHMgRHMgO3NBAXciRnNBAXciR3MgOyBFcyBHcy\
A6IERzIEZzIENzQQF3IkhzQQF3IklzIEIgRnMgSHMgQSA7cyBDcyBAIDpzIEJzID8gNXMgQXMgPiA0\
cyBAcyA9IDNzID9zIDwgMnMgPnMgRXNBAXciSnNBAXciS3NBAXciTHNBAXciTXNBAXciTnNBAXciT3\
NBAXciUHNBAXdqIEYgSnMgRCA+cyBKcyBHc0EBdyJRcyBJc0EBdyJSIEUgP3MgS3MgUXNBAXciUyBM\
IEEgOiA5IDwgMSAmIB8gKCAhIBcgEyAQIAhBHnciVGogDiAFIAdBHnciECAGcyAIcSAGc2pqIA0gBC\
AIQQV3aiAGIAVzIAdxIAVzampBmfOJ1AVqIg5BBXdqQZnzidQFaiJVQR53IgggDkEedyINcyAGIA9q\
IA4gVCAQc3EgEHNqIFVBBXdqQZnzidQFaiIOcSANc2ogECARaiBVIA0gVHNxIFRzaiAOQQV3akGZ84\
nUBWoiEEEFd2pBmfOJ1AVqIhFBHnciD2ogDCAIaiARIBBBHnciEyAOQR53IgxzcSAMc2ogEiANaiAM\
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\
QQA2ArCnQEEAQcSkwAA2AtCkQEEAQbykwAA2AsSkQEEAQcSkwAA2AsykQEEAQcykwAA2AtikQEEAQc\
ykwAA2AtSkQEEAQdSkwAA2AuCkQEEAQdSkwAA2AtykQEEAQdykwAA2AuikQEEAQdykwAA2AuSkQEEA\
QeSkwAA2AvCkQEEAQeSkwAA2AuykQEEAQeykwAA2AvikQEEAQeykwAA2AvSkQEEAQfSkwAA2AoClQE\
EAQfSkwAA2AvykQEEAQfykwAA2AoilQEEAQfykwAA2AoSlQEEAQYSlwAA2ApClQEEAQYylwAA2Apil\
QEEAQYSlwAA2AoylQEEAQZSlwAA2AqClQEEAQYylwAA2ApSlQEEAQZylwAA2AqilQEEAQZSlwAA2Ap\
ylQEEAQaSlwAA2ArClQEEAQZylwAA2AqSlQEEAQaylwAA2ArilQEEAQaSlwAA2AqylQEEAQbSlwAA2\
AsClQEEAQaylwAA2ArSlQEEAQbylwAA2AsilQEEAQbSlwAA2ArylQEEAQcSlwAA2AtClQEEAQbylwA\
A2AsSlQEEAQcylwAA2AtilQEEAQcSlwAA2AsylQEEAQdSlwAA2AuClQEEAQcylwAA2AtSlQEEAQdyl\
wAA2AuilQEEAQdSlwAA2AtylQEEAQeSlwAA2AvClQEEAQdylwAA2AuSlQEEAQeylwAA2AvilQEEAQe\
SlwAA2AuylQEEAQfSlwAA2AoCmQEEAQeylwAA2AvSlQEEAQfylwAA2AoimQEEAQfSlwAA2AvylQEEA\
IAE2ApinQEEAQfylwAA2AoSmQEEAIAZBWGoiADYCkKdAIAEgAEEBcjYCBCABIABqQSg2AgRBAEGAgI\
ABNgK0p0AMAgsgACgCDCIHQQFxDQAgB0EBSw0AIAQgA0sNACABIANNDQAgACAFIAZqNgIEQQBBACgC\
mKdAIgBBD2pBeHEiA0F4ajYCmKdAQQAgACADa0EAKAKQp0AgBmoiBGpBCGoiATYCkKdAIANBfGogAU\
EBcjYCACAAIARqQSg2AgRBAEGAgIABNgK0p0AMAQtBAEEAKAK4p0AiACABIAAgAUkbNgK4p0AgASAG\
aiEEQaSnwAAhAAJAAkADQCAAKAIAIARGDQEgACgCCCIADQAMAgsLIAAoAgwNACAAIAE2AgAgACAAKA\
IEIAZqNgIEIAEgAkEDcjYCBCABIAJqIQAgBCABayACayECAkACQEEAKAKYp0AgBEcNAEEAIAA2Apin\
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\
ASADQfgAaiABIAQQPBogDSALKQMANwMAIA1BCGogBSkDADcDACANQRBqIAYpAwA3AwAgDUEYaiAIKQ\
MANwMAIAogCSkDADcDACAKQQhqIA8pAwA3AwAgCkEQaiAQKQMANwMAIApBGGogESkDADcDACAKQSBq\
IBIpAwA3AwAgCkEoaiATKQMANwMAIApBMGogFCkDADcDACAKQThqIBUpAwA3AwAgAy0A4gEhDyADLQ\
DhASEQIAMgAy0A4AEiEToAcCADIAMpA3giHzcDCCADIA8gEEVyQQJyIg86AHEgA0HoAWpBGGoiECAI\
KQIANwMAIANB6AFqQRBqIgggBikCADcDACADQegBakEIaiIGIAUpAgA3AwAgAyALKQIANwPoASADQe\
gBaiAKIBEgHyAPEAogECgCACEPIAgoAgAhCCAGKAIAIRAgAygChAIhESADKAL8ASESIAMoAvQBIRMg\
AygC7AEhFCADKALoASEVIAAgACkDABAXIAwtAAAiBkE3Tw0GIA4gBkEFdGoiBSAVNgIAIAUgETYCHC\
AFIA82AhggBSASNgIUIAUgCDYCECAFIBM2AgwgBSAQNgIIIAUgFDYCBCAMIAZBAWo6AAAMAQsgAiAE\
SQ0GIAAtAGohCCADQfgAakE4akIANwMAIANB+ABqQTBqQgA3AwAgCUIANwMAIANB+ABqQSBqQgA3Aw\
AgA0H4AGpBGGpCADcDACADQfgAakEQakIANwMAIAtCADcDACADQgA3A3ggASAEIAcgHyAIIANB+ABq\
QcAAEA4hBSADQZACakEYakIANwMAIANBkAJqQRBqQgA3AwAgA0GQAmpBCGpCADcDACADQgA3A5ACAk\
AgBUEDSQ0AA0AgBUEFdCIFQcEATw0JIANB+ABqIAUgByAIIANBkAJqQSAQIiIFQQV0IgZBwQBPDQog\
BkEhTw0LIANB+ABqIANBkAJqIAYQlwEaIAVBAksNAAsLIAMoArQBIRYgAygCsAEhFyADKAKsASEYIA\
MoAqgBIRkgAygCpAEhGiADKAKgASEbIAMoApwBIRwgAygCmAEhHSADKAKUASEIIAMoApABIQ8gAygC\
jAEhECADKAKIASERIAMoAoQBIRIgAygCgAEhEyADKAJ8IRQgAygCeCEVIAAgACkDABAXIAwtAAAiBk\
E3Tw0KIA4gBkEFdGoiBSAVNgIAIAUgCDYCHCAFIA82AhggBSAQNgIUIAUgETYCECAFIBI2AgwgBSAT\
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\
QQhqQdAAaiARKQMANwMAIAdBCGpB2ABqIBIpAwA3AwAgB0EIakHgAGogEykDADcDACAHIAcpA5gBNw\
MQIAcgBykDuAE3AzAgBy0A+gEhCyAHLQD5ASEEIAcgBy0A+AEiAjoAcCAHIAcpA5ABIgM3AwggByAL\
IARFckECciILOgBxIAdBgAJqQRhqIgQgCikDADcDACAHQYACakEQaiIKIAEpAwA3AwAgB0GAAmpBCG\
oiASAUKQMANwMAIAcgBykDmAE3A4ACIAdBgAJqIAdBMGogAiADIAsQCiAMQQV0IgxBIGoiCyAGSw0D\
IAQoAgAhCyAKKAIAIQogASgCACEEIAcoApQCIQIgBygCjAIhASAHKAKEAiEAIAcoAoACIQYgBSAMai\
IMIAcoApwCNgAcIAwgCzYAGCAMIAI2ABQgDCAKNgAQIAwgATYADCAMIAQ2AAggDCAANgAEIAwgBjYA\
AEECQQEgCEH/AXEbIQwMAQtBfyABQX9qQQt2IgxndkEKdEGACGpBgAggDBsiDCABSw0DIAdBCGpBAE\
GAARCdARogASAMayELIAAgDGohCiAMQQp2rSADfCEVAkACQCAMQYAIRw0AIAdBCGpBIGohCEHgACEB\
IABBgAggAiADIAQgB0EIakEgEA4hDAwBC0HAACEBIAdBCGpBwABqIQggACAMIAIgAyAEIAdBCGpBwA\
AQDiEMCyAKIAsgAiAVIAQgCCABEA4hCwJAIAxBAUcNACAGQT9NDQUgBSAHKQAINwAAIAVBOGogB0EI\
akE4aikAADcAACAFQTBqIAdBCGpBMGopAAA3AAAgBUEoaiAHQQhqQShqKQAANwAAIAVBIGogB0EIak\
EgaikAADcAACAFQRhqIAdBCGpBGGopAAA3AAAgBUEQaiAHQQhqQRBqKQAANwAAIAVBCGogB0EIakEI\
aikAADcAAEECIQwMAQsgCyAMakEFdCIMQYEBTw0FIAdBCGogDCACIAQgBSAGECIhDAsgB0GgAmokAC\
AMDwsgByAMNgIIQdybwABBKyAHQQhqQfCKwABBgIvAABB/AAsgCyAGQeyIwAAQhQEAC0G8icAAQSNB\
4InAABCUAQALQcAAIAZB8InAABCFAQALIAxBgAFBgIrAABCFAQALlQwBGH8jACECIAAoAgAhAyAAKA\
IIIQQgACgCDCEFIAAoAgQhBiACQcAAayICQRhqIgdCADcDACACQSBqIghCADcDACACQThqIglCADcD\
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\
eHEgAUcNACAEIQIMAwsgAUEAQRkgAkEBdmtBH3EgAkEfRht0IQMCQANAIAQgA0EddkEEcWpBEGoiBS\
gCACICRQ0BIANBAXQhAyACIQQgAigCBEF4cSABRg0EDAALCyAFIAA2AgAgAEEYaiAENgIACyAAIAA2\
AgwgACAANgIICw8LIAIoAggiASAANgIMIAIgADYCCCAAQRhqQQA2AgAgACACNgIMIAAgATYCCA8LQQ\
AgADYClKdAQQBBACgCjKdAIAFqIgE2AoynQCAAIAFBAXI2AgQgACABaiABNgIAC84LAhB/BH4jAEHg\
AWsiAiQAAkACQAJAAkAgAUHwDmotAAAiAw0AIAJBEGogAUEQaikDADcDACACQRhqIAFBGGopAwA3Aw\
AgAkEgaiABQSBqKQMANwMAIAJBMGogAUEwaikDADcDACACQThqIAFBOGopAwA3AwAgAkHAAGogAUHA\
AGopAwA3AwAgAkHIAGogAUHIAGopAwA3AwAgAkHQAGogAUHQAGopAwA3AwAgAkHYAGogAUHYAGopAw\
A3AwAgAkHgAGogAUHgAGopAwA3AwAgAiABKQMINwMIIAIgASkDKDcDKCABQekAai0AACEEIAEtAGoh\
BSACIAEtAGgiBjoAaCACIAEpAwA3AwAgAiAFIARFckECciIHOgBpDAELIAFBkAFqIQgCQAJAAkAgAU\
HpAGotAAAiBEEGdEEAIAEtAGgiB2tGDQAgAkHwAGpBEGogAUEQaikDADcDACACQfAAakEYaiABQRhq\
KQMANwMAIAJB8ABqQSBqIAFBIGopAwA3AwAgAkHwAGpBMGogAUEwaikDADcDACACQfAAakE4aiABQT\
hqKQMANwMAIAJB8ABqQcAAaiABQcAAaikDADcDACACQfAAakHIAGogAUHIAGopAwA3AwAgAkHwAGpB\
0ABqIAFB0ABqKQMANwMAIAJB8ABqQdgAaiABQdgAaikDADcDACACQfAAakHgAGogAUHgAGopAwA3Aw\
AgAiABKQMINwN4IAIgASkDKDcDmAEgAiABLQBqIgUgBEVyQQJyIgk6ANkBIAIgBzoA2AEgAiABKQMA\
IhI3A3AgBUEEciEKIAJB+ABqIQQgAyEFDAELIANBfmohBSADQQJJDQMgAkHwAGpBEGogAUH4AGopAw\
A3AwAgAkHwAGpBGGogAUGAAWopAwA3AwAgAkGQAWogAUGIAWopAwA3AwAgAkGgAWogCCAFQQV0aiIE\
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\
OmpCADcBACACQcIAakEAOwEAIAJBMGpBFGpCADcCACACQTBqQRxqQgA3AgAgAkEwakEkakIANwIAIA\
JBMGpBLGpCADcCACACQQA7ATQgAkEwNgIwIAJBADYBNiACQegAakEwaiACQTBqQTBqKAIANgIAIAJB\
6ABqQShqIAJBMGpBKGopAwA3AwAgAkHoAGpBIGogAkEwakEgaikDADcDACACQegAakEYaiACQTBqQR\
hqKQMANwMAIAJB6ABqQRBqIAJBMGpBEGopAwA3AwAgAkHoAGpBCGogAkEwakEIaikDADcDACACIAIp\
AzA3A2ggAkEoaiIDIAJB6ABqQSxqKQIANwMAIAJBIGoiBCACQegAakEkaikCADcDACACQRhqIgUgAk\
HoAGpBHGopAgA3AwAgAkEQaiIGIAJB6ABqQRRqKQIANwMAIAJBCGoiByACQfQAaikCADcDACACIAIp\
Amw3AwAgASACEB0gAUIANwMIIAFCADcDACABQQA2AlAgAUEAKQOYnUAiCTcDECABQRhqQQApA6CdQC\
IKNwMAIAFBIGpBACkDqJ1AIgs3AwAgAUEoakEAKQOwnUAiDDcDACABQTBqQQApA7idQCINNwMAIAFB\
OGpBACkDwJ1AIg43AwAgAUHAAGpBACkDyJ1AIg83AwAgAUHIAGpBACkD0J1AIhA3AwACQEEwEAkiCA\
0AQTBBAUEAKALMp0AiAkECIAIbEQQAAAsgCCACKQMANwAAIAhBKGogAykDADcAACAIQSBqIAQpAwA3\
AAAgCEEYaiAFKQMANwAAIAhBEGogBikDADcAACAIQQhqIAcpAwA3AAAgAUIANwMIIAFCADcDACABQQ\
A2AlAgAUEQaiIBIAk3AwAgAUEIaiAKNwMAIAFBEGogCzcDACABQRhqIAw3AwAgAUEgaiANNwMAIAFB\
KGogDjcDACABQTBqIA83AwAgAUE4aiAQNwMAIABBMDYCBCAAIAg2AgAgAkGgAWokAAuOBgIJfwh+Iw\
BB0AFrIgIkACACQcoAakIANwEAIAJB0gBqQQA7AQAgAkHAAGpBFGpCADcCACACQcAAakEcakIANwIA\
IAJBwABqQSRqQgA3AgAgAkHAAGpBLGpCADcCACACQcAAakE0akIANwIAIAJBwABqQTxqQQA6AAAgAk\
H9AGpBADYAACACQYEBakEAOwAAIAJBgwFqQQA6AAAgAkHAADYCQCACQQA7AUQgAkEANgFGIAJBiAFq\
IAJBwABqQcQAEJcBGiACQThqIgMgAkGIAWpBPGopAgA3AwAgAkEwaiIEIAJBiAFqQTRqKQIANwMAIA\
JBKGoiBSACQYgBakEsaikCADcDACACQSBqIgYgAkGIAWpBJGopAgA3AwAgAkEYaiIHIAJBiAFqQRxq\
KQIANwMAIAJBEGoiCCACQYgBakEUaikCADcDACACQQhqIgkgAkGUAWopAgA3AwAgAiACKQKMATcDAC\
ABIAIQFiABQgA3AwggAUIANwMAIAFBADYCUCABQQApA9idQCILNwMQIAFBGGpBACkD4J1AIgw3AwAg\
AUEgakEAKQPonUAiDTcDACABQShqQQApA/CdQCIONwMAIAFBMGpBACkD+J1AIg83AwAgAUE4akEAKQ\
OAnkAiEDcDACABQcAAakEAKQOInkAiETcDACABQcgAakEAKQOQnkAiEjcDAAJAQcAAEAkiCg0AQcAA\
QQFBACgCzKdAIgJBAiACGxEEAAALIAogAikDADcAACAKQThqIAMpAwA3AAAgCkEwaiAEKQMANwAAIA\
pBKGogBSkDADcAACAKQSBqIAYpAwA3AAAgCkEYaiAHKQMANwAAIApBEGogCCkDADcAACAKQQhqIAkp\
AwA3AAAgAUIANwMIIAFCADcDACABQQA2AlAgAUEQaiIBIAs3AwAgAUEIaiAMNwMAIAFBEGogDTcDAC\
ABQRhqIA43AwAgAUEgaiAPNwMAIAFBKGogEDcDACABQTBqIBE3AwAgAUE4aiASNwMAIABBwAA2AgQg\
ACAKNgIAIAJB0AFqJAALzAUBCX8jAEEwayIDJAAgA0EkaiABNgIAIANBAzoAKCADQoCAgICABDcDCC\
ADIAA2AiBBACEEIANBADYCGCADQQA2AhACQAJAAkACQCACKAIIIgVFDQAgAigCACEGIAIoAgQiByAC\
QQxqKAIAIgggCCAHSxsiCUUNASAAIAYoAgAgBigCBCABKAIMEQcADQIgBkEIaiEAIAIoAhAhCiAJIQ\
gDQCADIAVBHGotAAA6ACggAyAFQQRqKQIAQiCJNwMIIAVBGGooAgAhAkEAIQRBACEBAkACQAJAIAVB\
FGooAgAOAwEAAgELIAJBA3QhC0EAIQEgCiALaiILKAIEQQNHDQEgCygCACgCACECC0EBIQELIAMgAj\
YCFCADIAE2AhAgBUEQaigCACECAkACQAJAIAVBDGooAgAOAwEAAgELIAJBA3QhASAKIAFqIgEoAgRB\
A0cNASABKAIAKAIAIQILQQEhBAsgAyACNgIcIAMgBDYCGCAKIAUoAgBBA3RqIgIoAgAgA0EIaiACKA\
IEEQUADQMCQCAIQX9qIggNACAJIQQMAwsgBUEgaiEFIABBBGohAiAAKAIAIQEgAEEIaiEAIAMoAiAg\
ASACKAIAIAMoAiQoAgwRBwBFDQAMAwsLIAIoAgAhBiACKAIEIgcgAkEUaigCACIFIAUgB0sbIghFDQ\
AgAigCECEEIAAgBigCACAGKAIEIAEoAgwRBwANAUEAIQUgCCECA0AgBCAFaiIAKAIAIANBCGogAEEE\
aigCABEFAA0CAkAgAkF/aiICDQAgCCEEDAILIAYgBWohACAFQQhqIQUgAygCICAAQQhqKAIAIABBDG\
ooAgAgAygCJCgCDBEHAEUNAAwCCwsCQCAHIARNDQAgAygCICAGIARBA3RqIgUoAgAgBSgCBCADKAIk\
KAIMEQcADQELQQAhBQwBC0EBIQULIANBMGokACAFC4EFAQF+IAAQMSABIAApAxAiAkI4hiACQiiGQo\
CAgICAgMD/AIOEIAJCGIZCgICAgIDgP4MgAkIIhkKAgICA8B+DhIQgAkIIiEKAgID4D4MgAkIYiEKA\
gPwHg4QgAkIoiEKA/gODIAJCOIiEhIQ3AAAgASAAQRhqKQMAIgJCOIYgAkIohkKAgICAgIDA/wCDhC\
ACQhiGQoCAgICA4D+DIAJCCIZCgICAgPAfg4SEIAJCCIhCgICA+A+DIAJCGIhCgID8B4OEIAJCKIhC\
gP4DgyACQjiIhISENwAIIAEgAEEgaikDACICQjiGIAJCKIZCgICAgICAwP8Ag4QgAkIYhkKAgICAgO\
A/gyACQgiGQoCAgIDwH4OEhCACQgiIQoCAgPgPgyACQhiIQoCA/AeDhCACQiiIQoD+A4MgAkI4iISE\
hDcAECABIABBKGopAwAiAkI4hiACQiiGQoCAgICAgMD/AIOEIAJCGIZCgICAgIDgP4MgAkIIhkKAgI\
CA8B+DhIQgAkIIiEKAgID4D4MgAkIYiEKAgPwHg4QgAkIoiEKA/gODIAJCOIiEhIQ3ABggASAAQTBq\
KQMAIgJCOIYgAkIohkKAgICAgIDA/wCDhCACQhiGQoCAgICA4D+DIAJCCIZCgICAgPAfg4SEIAJCCI\
hCgICA+A+DIAJCGIhCgID8B4OEIAJCKIhCgP4DgyACQjiIhISENwAgIAEgAEE4aikDACICQjiGIAJC\
KIZCgICAgICAwP8Ag4QgAkIYhkKAgICAgOA/gyACQgiGQoCAgIDwH4OEhCACQgiIQoCAgPgPgyACQh\
iIQoCA/AeDhCACQiiIQoD+A4MgAkI4iISEhDcAKAvpBAIGfwV+IwBBkAFrIgIkACACQTpqQgA3AQAg\
AkHCAGpBADsBACACQTBqQRRqQgA3AgAgAkEwakEcakIANwIAIAJBMGpBJGpCADcCACACQQA7ATQgAk\
EoNgIwIAJBADYBNiACQeAAakEoaiACQTBqQShqKAIANgIAIAJB4ABqQSBqIAJBMGpBIGopAwA3AwAg\
AkHgAGpBGGogAkEwakEYaikDADcDACACQeAAakEQaiACQTBqQRBqKQMANwMAIAJB4ABqQQhqIAJBMG\
pBCGopAwA3AwAgAiACKQMwNwNgIAJBCGpBIGoiAyACQeAAakEkaikCADcDACACQQhqQRhqIgQgAkHg\
AGpBHGopAgA3AwAgAkEIakEQaiIFIAJB4ABqQRRqKQIANwMAIAJBCGpBCGoiBiACQewAaikCADcDAC\
ACIAIpAmQ3AwggASACQQhqED0gAUIANwMAIAFBADYCMCABQQApA6CbQCIINwMIIAFBEGpBACkDqJtA\
Igk3AwAgAUEYakEAKQOwm0AiCjcDACABQSBqQQApA7ibQCILNwMAIAFBKGpBACkDwJtAIgw3AwACQE\
EoEAkiBw0AQShBAUEAKALMp0AiAkECIAIbEQQAAAsgByACKQMINwAAIAdBIGogAykDADcAACAHQRhq\
IAQpAwA3AAAgB0EQaiAFKQMANwAAIAdBCGogBikDADcAACABQgA3AwAgAUEANgIwIAFBCGoiASAINw\
MAIAFBCGogCTcDACABQRBqIAo3AwAgAUEYaiALNwMAIAFBIGogDDcDACAAQSg2AgQgACAHNgIAIAJB\
kAFqJAAL5QQCCH8BfiMAQYAPayICJAAgAkEIakGIAWogAUGIAWopAwA3AwAgAkEIakGAAWogAUGAAW\
opAwA3AwAgAkEIakH4AGogAUH4AGopAwA3AwAgAkEIakEQaiABQRBqKQMANwMAIAJBCGpBGGogAUEY\
aikDADcDACACQQhqQSBqIAFBIGopAwA3AwAgAkEIakEwaiABQTBqKQMANwMAIAJBCGpBOGogAUE4ai\
kDADcDACACQQhqQcAAaiABQcAAaikDADcDACACQQhqQcgAaiABQcgAaikDADcDACACQQhqQdAAaiAB\
QdAAaikDADcDACACQQhqQdgAaiABQdgAaikDADcDACACQQhqQeAAaiABQeAAaikDADcDACACIAEpA3\
A3A3ggAiABKQMINwMQIAIgASkDKDcDMCABKQMAIQpBACEDIAJBCGpB8A5qQQA6AAAgAUGQAWohBCAB\
QfAOai0AAEEFdCEFIAJBCGpBkAFqIQYgAS0AaiEHIAEtAGkhCCABLQBoIQkCQANAAkAgBQ0AIAMhAQ\
wCCyAGIAQpAAA3AAAgBkEIaiAEQQhqKQAANwAAIAZBEGogBEEQaikAADcAACAGQRhqIARBGGopAAA3\
AAAgBkEgaiEGIAVBYGohBSAEQSBqIQRBNyEBIANBAWoiA0E3Rw0ACwsgAiAHOgByIAIgCDoAcSACIA\
k6AHAgAiAKNwMIIAIgAToA+A4CQEH4DhAJIgQNAEH4DkEIQQAoAsynQCIEQQIgBBsRBAAACyAEIAJB\
CGpB+A4QlwEhBCAAQfCTwAA2AgQgACAENgIAIAJBgA9qJAALzAQCBH8BfiAAQQhqIQIgACkDACEGAk\
ACQAJAIAAoAhwiA0HAAEcNACACIABBIGpBARAIQQAhAyAAQQA2AhwMAQsgA0E/Sw0BCyAAQRxqIANq\
QQRqQYABOgAAIAAgACgCHCIEQQFqIgM2AhwCQAJAIANBwQBPDQAgAEEgaiIFIANqQQBBPyAEaxCdAR\
oCQEHAACAAKAIca0EHSw0AIAIgBUEBEAggACgCHCIDQcEATw0CIABBIGpBACADEJ0BGgsgAEHYAGog\
BkI7hiAGQiuGQoCAgICAgMD/AIOEIAZCG4ZCgICAgIDgP4MgBkILhkKAgICA8B+DhIQgBkIFiEKAgI\
D4D4MgBkIViEKAgPwHg4QgBkIliEKA/gODIAZCA4ZCOIiEhIQ3AwAgAiAFQQEQCCAAQQA2AhwgASAA\
KAIIIgNBGHQgA0EIdEGAgPwHcXIgA0EIdkGA/gNxIANBGHZycjYAACABIABBDGooAgAiA0EYdCADQQ\
h0QYCA/AdxciADQQh2QYD+A3EgA0EYdnJyNgAEIAEgAEEQaigCACIDQRh0IANBCHRBgID8B3FyIANB\
CHZBgP4DcSADQRh2cnI2AAggASAAQRRqKAIAIgNBGHQgA0EIdEGAgPwHcXIgA0EIdkGA/gNxIANBGH\
ZycjYADCABIABBGGooAgAiAEEYdCAAQQh0QYCA/AdxciAAQQh2QYD+A3EgAEEYdnJyNgAQDwsgA0HA\
AEGonMAAEIQBAAsgA0HAAEG4nMAAEIUBAAsgA0HAAEHInMAAEIcBAAvNBAEFfyMAQfAAayICJAAgAk\
EqakIANwEAIAJBMmpBADsBACACQSBqQRRqQgA3AgAgAkEgakEcakIANwIAIAJBADsBJCACQQA2ASYg\
AkEgNgIgIAJByABqQRhqIAJBIGpBGGopAwA3AwAgAkHIAGpBEGogAkEgakEQaikDADcDACACQcgAak\
EIaiACQSBqQQhqKQMANwMAIAJByABqQSBqIAJBIGpBIGooAgA2AgAgAiACKQMgNwNIIAJBEGogAkHI\
AGpBFGopAgA3AwAgAkEIaiACQdQAaikCADcDACACQRhqIAJByABqQRxqKQIANwMAIAIgAikCTDcDAC\
ACIAEQEiABQgA3AwAgAUEgaiABQYgBaikDADcDACABQRhqIAFBgAFqKQMANwMAIAFBEGogAUH4AGop\
AwA3AwAgASABKQNwNwMIIAFBKGpBAEHCABCdASEDAkAgAUHwDmoiBC0AAEUNACAEQQA6AAALAkBBIB\
AJIgRFDQAgBCACKQMANwAAIARBGGogAkEYaikDADcAACAEQRBqIAJBEGopAwA3AAAgBEEIaiACQQhq\
KQMANwAAIAFCADcDACABQQhqIgVBGGogAUHwAGoiBkEYaikDADcDACAFQRBqIAZBEGopAwA3AwAgBU\
EIaiAGQQhqKQMANwMAIAUgBikDADcDACADQQBBwgAQnQEaAkAgAUHwDmoiAS0AAEUNACABQQA6AAAL\
IABBIDYCBCAAIAQ2AgAgAkHwAGokAA8LQSBBAUEAKALMp0AiAkECIAIbEQQAAAuwBAEJfyMAQTBrIg\
YkAEEAIQcgBkEAOgAIAkACQAJAAkACQCABQUBxIghFDQAgCEFAakEGdkEBaiEJQQAhByAGIQogACEL\
A0AgB0ECRg0CIAogCzYCACAGIAdBAWoiBzoACCAKQQRqIQogC0HAAGohCyAJIAdHDQALCyABQT9xIQ\
wCQCAFQQV2IgsgB0H/////A3EiCiAKIAtLGyILRQ0AIANBBHIhDSALQQV0IQ5BACELIAYhCgNAIAoo\
AgAhByAGQRBqQRhqIgkgAkEYaikCADcDACAGQRBqQRBqIgEgAkEQaikCADcDACAGQRBqQQhqIgMgAk\
EIaikCADcDACAGIAIpAgA3AxAgBkEQaiAHQcAAQgAgDRAKIAQgC2oiB0EYaiAJKQMANwAAIAdBEGog\
ASkDADcAACAHQQhqIAMpAwA3AAAgByAGKQMQNwAAIApBBGohCiAOIAtBIGoiC0cNAAsgBi0ACCEHCw\
JAIAxFDQAgB0EFdCICIAVLDQIgBSACayILQR9NDQMgDEEgRw0EIAQgAmoiAiAAIAhqIgspAAA3AAAg\
AkEYaiALQRhqKQAANwAAIAJBEGogC0EQaikAADcAACACQQhqIAtBCGopAAA3AAAgB0EBaiEHCyAGQT\
BqJAAgBw8LIAYgCzYCEEHcm8AAQSsgBkEQakHci8AAQYCLwAAQfwALIAIgBUH8iMAAEIQBAAtBICAL\
QfyIwAAQhQEAC0EgIAxBmJ7AABCGAQALnwQBB38jAEGgAWsiAiQAIAJBOmpCADcBACACQcIAakEAOw\
EAIAJBMGpBFGpCADcCACACQTBqQRxqQgA3AgAgAkEwakEkakIANwIAIAJBMGpBLGpCADcCACACQQA7\
ATQgAkEwNgIwIAJBADYBNiACQegAakEwaiACQTBqQTBqKAIANgIAIAJB6ABqQShqIAJBMGpBKGopAw\
A3AwAgAkHoAGpBIGogAkEwakEgaikDADcDACACQegAakEYaiACQTBqQRhqKQMANwMAIAJB6ABqQRBq\
IAJBMGpBEGopAwA3AwAgAkHoAGpBCGogAkEwakEIaikDADcDACACIAIpAzA3A2ggAkEoaiIDIAJB6A\
BqQSxqKQIANwMAIAJBIGoiBCACQegAakEkaikCADcDACACQRhqIgUgAkHoAGpBHGopAgA3AwAgAkEQ\
aiIGIAJB6ABqQRRqKQIANwMAIAJBCGoiByACQfQAaikCADcDACACIAIpAmw3AwAgASACEFsgAUEAQc\
gBEJ0BIghBADYCyAECQEEwEAkiAQ0AQTBBAUEAKALMp0AiAkECIAIbEQQAAAsgASACKQMANwAAIAFB\
KGogAykDADcAACABQSBqIAQpAwA3AAAgAUEYaiAFKQMANwAAIAFBEGogBikDADcAACABQQhqIAcpAw\
A3AAAgCEEAQcgBEJ0BQQA2AsgBIABBMDYCBCAAIAE2AgAgAkGgAWokAAufBAEHfyMAQaABayICJAAg\
AkE6akIANwEAIAJBwgBqQQA7AQAgAkEwakEUakIANwIAIAJBMGpBHGpCADcCACACQTBqQSRqQgA3Ag\
AgAkEwakEsakIANwIAIAJBADsBNCACQTA2AjAgAkEANgE2IAJB6ABqQTBqIAJBMGpBMGooAgA2AgAg\
AkHoAGpBKGogAkEwakEoaikDADcDACACQegAakEgaiACQTBqQSBqKQMANwMAIAJB6ABqQRhqIAJBMG\
pBGGopAwA3AwAgAkHoAGpBEGogAkEwakEQaikDADcDACACQegAakEIaiACQTBqQQhqKQMANwMAIAIg\
AikDMDcDaCACQShqIgMgAkHoAGpBLGopAgA3AwAgAkEgaiIEIAJB6ABqQSRqKQIANwMAIAJBGGoiBS\
ACQegAakEcaikCADcDACACQRBqIgYgAkHoAGpBFGopAgA3AwAgAkEIaiIHIAJB9ABqKQIANwMAIAIg\
AikCbDcDACABIAIQXCABQQBByAEQnQEiCEEANgLIAQJAQTAQCSIBDQBBMEEBQQAoAsynQCICQQIgAh\
sRBAAACyABIAIpAwA3AAAgAUEoaiADKQMANwAAIAFBIGogBCkDADcAACABQRhqIAUpAwA3AAAgAUEQ\
aiAGKQMANwAAIAFBCGogBykDADcAACAIQQBByAEQnQFBADYCyAEgAEEwNgIEIAAgATYCACACQaABai\
QAC5YEAQd/IwBBoANrIgIkACACQfICakIANwEAIAJB+gJqQQA7AQAgAkHoAmpBFGpCADcCACACQegC\
akEcakIANwIAIAJB6AJqQSRqQgA3AgAgAkHoAmpBLGpCADcCACACQQA7AewCIAJBMDYC6AIgAkEANg\
HuAiACQTBqQTBqIAJB6AJqQTBqKAIANgIAIAJBMGpBKGogAkHoAmpBKGopAwA3AwAgAkEwakEgaiAC\
QegCakEgaikDADcDACACQTBqQRhqIAJB6AJqQRhqKQMANwMAIAJBMGpBEGogAkHoAmpBEGopAwA3Aw\
AgAkEwakEIaiACQegCakEIaikDADcDACACIAIpA+gCNwMwIAJBKGoiAyACQTBqQSxqKQIANwMAIAJB\
IGoiBCACQTBqQSRqKQIANwMAIAJBGGoiBSACQTBqQRxqKQIANwMAIAJBEGoiBiACQTBqQRRqKQIANw\
MAIAJBCGoiByACQTxqKQIANwMAIAIgAikCNDcDACACQTBqIAFBuAIQlwEaIAJBMGogAhBcAkBBMBAJ\
IggNAEEwQQFBACgCzKdAIgJBAiACGxEEAAALIAggAikDADcAACAIQShqIAMpAwA3AAAgCEEgaiAEKQ\
MANwAAIAhBGGogBSkDADcAACAIQRBqIAYpAwA3AAAgCEEIaiAHKQMANwAAIAEQECAAQTA2AgQgACAI\
NgIAIAJBoANqJAALlgQBB38jAEGgA2siAiQAIAJB8gJqQgA3AQAgAkH6AmpBADsBACACQegCakEUak\
IANwIAIAJB6AJqQRxqQgA3AgAgAkHoAmpBJGpCADcCACACQegCakEsakIANwIAIAJBADsB7AIgAkEw\
NgLoAiACQQA2Ae4CIAJBMGpBMGogAkHoAmpBMGooAgA2AgAgAkEwakEoaiACQegCakEoaikDADcDAC\
ACQTBqQSBqIAJB6AJqQSBqKQMANwMAIAJBMGpBGGogAkHoAmpBGGopAwA3AwAgAkEwakEQaiACQegC\
akEQaikDADcDACACQTBqQQhqIAJB6AJqQQhqKQMANwMAIAIgAikD6AI3AzAgAkEoaiIDIAJBMGpBLG\
opAgA3AwAgAkEgaiIEIAJBMGpBJGopAgA3AwAgAkEYaiIFIAJBMGpBHGopAgA3AwAgAkEQaiIGIAJB\
MGpBFGopAgA3AwAgAkEIaiIHIAJBPGopAgA3AwAgAiACKQI0NwMAIAJBMGogAUG4AhCXARogAkEwai\
ACEFsCQEEwEAkiCA0AQTBBAUEAKALMp0AiAkECIAIbEQQAAAsgCCACKQMANwAAIAhBKGogAykDADcA\
ACAIQSBqIAQpAwA3AAAgCEEYaiAFKQMANwAAIAhBEGogBikDADcAACAIQQhqIAcpAwA3AAAgARAQIA\
BBMDYCBCAAIAg2AgAgAkGgA2okAAuWBAEHfyMAQcACayICJAAgAkGSAmpCADcBACACQZoCakEAOwEA\
IAJBiAJqQRRqQgA3AgAgAkGIAmpBHGpCADcCACACQYgCakEkakIANwIAIAJBiAJqQSxqQgA3AgAgAk\
EAOwGMAiACQTA2AogCIAJBADYBjgIgAkEwakEwaiACQYgCakEwaigCADYCACACQTBqQShqIAJBiAJq\
QShqKQMANwMAIAJBMGpBIGogAkGIAmpBIGopAwA3AwAgAkEwakEYaiACQYgCakEYaikDADcDACACQT\
BqQRBqIAJBiAJqQRBqKQMANwMAIAJBMGpBCGogAkGIAmpBCGopAwA3AwAgAiACKQOIAjcDMCACQShq\
IgMgAkEwakEsaikCADcDACACQSBqIgQgAkEwakEkaikCADcDACACQRhqIgUgAkEwakEcaikCADcDAC\
ACQRBqIgYgAkEwakEUaikCADcDACACQQhqIgcgAkE8aikCADcDACACIAIpAjQ3AwAgAkEwaiABQdgB\
EJcBGiACQTBqIAIQHQJAQTAQCSIIDQBBMEEBQQAoAsynQCICQQIgAhsRBAAACyAIIAIpAwA3AAAgCE\
EoaiADKQMANwAAIAhBIGogBCkDADcAACAIQRhqIAUpAwA3AAAgCEEQaiAGKQMANwAAIAhBCGogBykD\
ADcAACABEBAgAEEwNgIEIAAgCDYCACACQcACaiQAC6sEAQl/IwBB0AFrIgIkACACQcoAakIANwEAIA\
JB0gBqQQA7AQAgAkHAAGpBFGpCADcCACACQcAAakEcakIANwIAIAJBwABqQSRqQgA3AgAgAkHAAGpB\
LGpCADcCACACQcAAakE0akIANwIAIAJBwABqQTxqQQA6AAAgAkH9AGpBADYAACACQYEBakEAOwAAIA\
JBgwFqQQA6AAAgAkHAADYCQCACQQA7AUQgAkEANgFGIAJBiAFqIAJBwABqQcQAEJcBGiACQThqIgMg\
AkGIAWpBPGopAgA3AwAgAkEwaiIEIAJBiAFqQTRqKQIANwMAIAJBKGoiBSACQYgBakEsaikCADcDAC\
ACQSBqIgYgAkGIAWpBJGopAgA3AwAgAkEYaiIHIAJBiAFqQRxqKQIANwMAIAJBEGoiCCACQYgBakEU\
aikCADcDACACQQhqIgkgAkGUAWopAgA3AwAgAiACKQKMATcDACABIAIQSyABQQBByAEQnQEiCkEANg\
LIAQJAQcAAEAkiAQ0AQcAAQQFBACgCzKdAIgJBAiACGxEEAAALIAEgAikDADcAACABQThqIAMpAwA3\
AAAgAUEwaiAEKQMANwAAIAFBKGogBSkDADcAACABQSBqIAYpAwA3AAAgAUEYaiAHKQMANwAAIAFBEG\
ogCCkDADcAACABQQhqIAkpAwA3AAAgCkEAQcgBEJ0BQQA2AsgBIABBwAA2AgQgACABNgIAIAJB0AFq\
JAALqwQBCX8jAEHQAWsiAiQAIAJBygBqQgA3AQAgAkHSAGpBADsBACACQcAAakEUakIANwIAIAJBwA\
BqQRxqQgA3AgAgAkHAAGpBJGpCADcCACACQcAAakEsakIANwIAIAJBwABqQTRqQgA3AgAgAkHAAGpB\
PGpBADoAACACQf0AakEANgAAIAJBgQFqQQA7AAAgAkGDAWpBADoAACACQcAANgJAIAJBADsBRCACQQ\
A2AUYgAkGIAWogAkHAAGpBxAAQlwEaIAJBOGoiAyACQYgBakE8aikCADcDACACQTBqIgQgAkGIAWpB\
NGopAgA3AwAgAkEoaiIFIAJBiAFqQSxqKQIANwMAIAJBIGoiBiACQYgBakEkaikCADcDACACQRhqIg\
cgAkGIAWpBHGopAgA3AwAgAkEQaiIIIAJBiAFqQRRqKQIANwMAIAJBCGoiCSACQZQBaikCADcDACAC\
IAIpAowBNwMAIAEgAhBMIAFBAEHIARCdASIKQQA2AsgBAkBBwAAQCSIBDQBBwABBAUEAKALMp0AiAk\
ECIAIbEQQAAAsgASACKQMANwAAIAFBOGogAykDADcAACABQTBqIAQpAwA3AAAgAUEoaiAFKQMANwAA\
IAFBIGogBikDADcAACABQRhqIAcpAwA3AAAgAUEQaiAIKQMANwAAIAFBCGogCSkDADcAACAKQQBByA\
EQnQFBADYCyAEgAEHAADYCBCAAIAE2AgAgAkHQAWokAAuiBAEJfyMAQaADayICJAAgAkHiAmpCADcB\
ACACQeoCakEAOwEAIAJB2AJqQRRqQgA3AgAgAkHYAmpBHGpCADcCACACQdgCakEkakIANwIAIAJB2A\
JqQSxqQgA3AgAgAkHYAmpBNGpCADcCACACQdgCakE8akEAOgAAIAJBlQNqQQA2AAAgAkGZA2pBADsA\
ACACQZsDakEAOgAAIAJBwAA2AtgCIAJBADsB3AIgAkEANgHeAiACQcAAaiACQdgCakHEABCXARogAk\
E4aiIDIAJBwABqQTxqKQIANwMAIAJBMGoiBCACQcAAakE0aikCADcDACACQShqIgUgAkHAAGpBLGop\
AgA3AwAgAkEgaiIGIAJBwABqQSRqKQIANwMAIAJBGGoiByACQcAAakEcaikCADcDACACQRBqIgggAk\
HAAGpBFGopAgA3AwAgAkEIaiIJIAJBzABqKQIANwMAIAIgAikCRDcDACACQcAAaiABQZgCEJcBGiAC\
QcAAaiACEEsCQEHAABAJIgoNAEHAAEEBQQAoAsynQCICQQIgAhsRBAAACyAKIAIpAwA3AAAgCkE4ai\
ADKQMANwAAIApBMGogBCkDADcAACAKQShqIAUpAwA3AAAgCkEgaiAGKQMANwAAIApBGGogBykDADcA\
ACAKQRBqIAgpAwA3AAAgCkEIaiAJKQMANwAAIAEQECAAQcAANgIEIAAgCjYCACACQaADaiQAC6IEAQ\
l/IwBBoANrIgIkACACQeICakIANwEAIAJB6gJqQQA7AQAgAkHYAmpBFGpCADcCACACQdgCakEcakIA\
NwIAIAJB2AJqQSRqQgA3AgAgAkHYAmpBLGpCADcCACACQdgCakE0akIANwIAIAJB2AJqQTxqQQA6AA\
AgAkGVA2pBADYAACACQZkDakEAOwAAIAJBmwNqQQA6AAAgAkHAADYC2AIgAkEAOwHcAiACQQA2Ad4C\
IAJBwABqIAJB2AJqQcQAEJcBGiACQThqIgMgAkHAAGpBPGopAgA3AwAgAkEwaiIEIAJBwABqQTRqKQ\
IANwMAIAJBKGoiBSACQcAAakEsaikCADcDACACQSBqIgYgAkHAAGpBJGopAgA3AwAgAkEYaiIHIAJB\
wABqQRxqKQIANwMAIAJBEGoiCCACQcAAakEUaikCADcDACACQQhqIgkgAkHMAGopAgA3AwAgAiACKQ\
JENwMAIAJBwABqIAFBmAIQlwEaIAJBwABqIAIQTAJAQcAAEAkiCg0AQcAAQQFBACgCzKdAIgJBAiAC\
GxEEAAALIAogAikDADcAACAKQThqIAMpAwA3AAAgCkEwaiAEKQMANwAAIApBKGogBSkDADcAACAKQS\
BqIAYpAwA3AAAgCkEYaiAHKQMANwAAIApBEGogCCkDADcAACAKQQhqIAkpAwA3AAAgARAQIABBwAA2\
AgQgACAKNgIAIAJBoANqJAALogQBCX8jAEHgAmsiAiQAIAJBogJqQgA3AQAgAkGqAmpBADsBACACQZ\
gCakEUakIANwIAIAJBmAJqQRxqQgA3AgAgAkGYAmpBJGpCADcCACACQZgCakEsakIANwIAIAJBmAJq\
QTRqQgA3AgAgAkGYAmpBPGpBADoAACACQdUCakEANgAAIAJB2QJqQQA7AAAgAkHbAmpBADoAACACQc\
AANgKYAiACQQA7AZwCIAJBADYBngIgAkHAAGogAkGYAmpBxAAQlwEaIAJBOGoiAyACQcAAakE8aikC\
ADcDACACQTBqIgQgAkHAAGpBNGopAgA3AwAgAkEoaiIFIAJBwABqQSxqKQIANwMAIAJBIGoiBiACQc\
AAakEkaikCADcDACACQRhqIgcgAkHAAGpBHGopAgA3AwAgAkEQaiIIIAJBwABqQRRqKQIANwMAIAJB\
CGoiCSACQcwAaikCADcDACACIAIpAkQ3AwAgAkHAAGogAUHYARCXARogAkHAAGogAhAWAkBBwAAQCS\
IKDQBBwABBAUEAKALMp0AiAkECIAIbEQQAAAsgCiACKQMANwAAIApBOGogAykDADcAACAKQTBqIAQp\
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\
CDcAACAGQRhqIAMpAwA3AAAgBkEQaiAEKQMANwAAIAZBCGogBSkDADcAACABEBAgAEEgNgIEIAAgBj\
YCACACQcABaiQAC5ADAQV/IwBB8ABrIgIkACACQSpqQgA3AQAgAkEyakEAOwEAIAJBIGpBFGpCADcC\
ACACQSBqQRxqQgA3AgAgAkEAOwEkIAJBIDYCICACQQA2ASYgAkHIAGpBIGogAkEgakEgaigCADYCAC\
ACQcgAakEYaiACQSBqQRhqKQMANwMAIAJByABqQRBqIAJBIGpBEGopAwA3AwAgAkHIAGpBCGogAkEg\
akEIaikDADcDACACIAIpAyA3A0ggAkEYaiIDIAJByABqQRxqKQIANwMAIAJBEGoiBCACQcgAakEUai\
kCADcDACACQQhqIgUgAkHUAGopAgA3AwAgAiACKQJMNwMAIAEgAhBnIAFBAEHIARCdASIGQQA2AsgB\
AkBBIBAJIgENAEEgQQFBACgCzKdAIgJBAiACGxEEAAALIAEgAikDADcAACABQRhqIAMpAwA3AAAgAU\
EQaiAEKQMANwAAIAFBCGogBSkDADcAACAGQQBByAEQnQFBADYCyAEgAEEgNgIEIAAgATYCACACQfAA\
aiQAC5ADAQV/IwBB8ABrIgIkACACQSpqQgA3AQAgAkEyakEAOwEAIAJBIGpBFGpCADcCACACQSBqQR\
xqQgA3AgAgAkEAOwEkIAJBIDYCICACQQA2ASYgAkHIAGpBIGogAkEgakEgaigCADYCACACQcgAakEY\
aiACQSBqQRhqKQMANwMAIAJByABqQRBqIAJBIGpBEGopAwA3AwAgAkHIAGpBCGogAkEgakEIaikDAD\
cDACACIAIpAyA3A0ggAkEYaiIDIAJByABqQRxqKQIANwMAIAJBEGoiBCACQcgAakEUaikCADcDACAC\
QQhqIgUgAkHUAGopAgA3AwAgAiACKQJMNwMAIAEgAhBpIAFBAEHIARCdASIGQQA2AsgBAkBBIBAJIg\
ENAEEgQQFBACgCzKdAIgJBAiACGxEEAAALIAEgAikDADcAACABQRhqIAMpAwA3AAAgAUEQaiAEKQMA\
NwAAIAFBCGogBSkDADcAACAGQQBByAEQnQFBADYCyAEgAEEgNgIEIAAgATYCACACQfAAaiQAC4gDAQ\
V/IwBBoANrIgIkACACQYIDakIANwEAIAJBigNqQQA7AQAgAkH4AmpBFGpCADcCACACQfgCakEcakIA\
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\
RXIQCiAEQQBBwQAQnQEaIAMgAy0AAEEBajoAAAtBACEDIAJBwQBJDQEgAEEIaiEFIABB6QBqIgMtAA\
AhBANAIAUgAUHAACAAKQMAIAAtAGogBEH/AXFFchAKIAMgAy0AAEEBaiIEOgAAIAFBwABqIQEgAkFA\
aiICQcAASw0ACyAALQBoIQQLIARB/wFxIgNBwQBPDQIgAkHAACADayIEIAQgAksbIQILIAAgA2pBKG\
ogASACEJcBGiAAIAAtAGggAmo6AGggAA8LIANBwABBkIjAABCEAQALIANBwABBkIjAABCEAQALggMC\
BH8BfiAAQQhqIQIgACkDACEGAkACQAJAIAAoAjAiA0HAAEcNACACIABBNGoQBkEAIQMgAEEANgIwDA\
ELIANBP0sNAQsgAEE0aiIEIANqQYABOgAAIAAgACgCMCIFQQFqIgM2AjACQAJAIANBwQBPDQAgAEEw\
aiADakEEakEAQT8gBWsQnQEaAkBBwAAgACgCMGtBB0sNACACIAQQBiAAKAIwIgNBwQBPDQIgAEE0ak\
EAIAMQnQEaCyAAQewAaiAGQgOGNwIAIAIgBBAGIABBADYCMCABIAAoAgg2AAAgASAAQQxqKAIANgAE\
IAEgAEEQaigCADYACCABIABBFGooAgA2AAwgASAAQRhqKAIANgAQIAEgAEEcaigCADYAFCABIABBIG\
ooAgA2ABggASAAQSRqKAIANgAcIAEgAEEoaigCADYAICABIABBLGooAgA2ACQPCyADQcAAQaicwAAQ\
hAEACyADQcAAQbicwAAQhQEACyADQcAAQcicwAAQhwEAC/kCAQV/IwBB4ABrIgIkACACQSpqQgA3AQ\
AgAkEyakEAOwEAIAJBIGpBFGpCADcCACACQSBqQRxqQQA2AgAgAkEcNgIgIAJBADsBJCACQQA2ASYg\
AkHAAGpBGGogAkEgakEYaikDADcDACACQcAAakEQaiACQSBqQRBqKQMANwMAIAJBwABqQQhqIAJBIG\
pBCGopAwA3AwAgAiACKQMgNwNAIAJBGGoiAyACQcAAakEcaigCADYCACACQRBqIgQgAkHAAGpBFGop\
AgA3AwAgAkEIaiIFIAJBzABqKQIANwMAIAIgAikCRDcDACABIAIQZiABQQBByAEQnQEiBkEANgLIAQ\
JAQRwQCSIBDQBBHEEBQQAoAsynQCICQQIgAhsRBAAACyABIAIpAwA3AAAgAUEYaiADKAIANgAAIAFB\
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\
AQALIANBkAFBhKDAABCEAQAL7wIBBX8CQAJAAkACQEHoACAAKALIASIDayIEIAJNDQAgAyACaiIFIA\
NJDQEgBUHpAE8NAiAAQcgBaiADakEEaiABIAIQlwEaIAAgACgCyAEgAmo2AsgBDwsCQAJAIAMNACAB\
IQUMAQsgA0HpAE8NAyACIARrIQIgASAEaiEFIAAgA2pBzAFqIAEgBBCXARpBACEDA0AgACADaiIBIA\
EtAAAgAUHMAWotAABzOgAAIANBAWoiA0HoAEcNAAsgABATCyAFIAIgAkHoAHAiBmsiAmohBwJAIAJB\
6ABJDQADQCAFQegAaiEEIAJBmH9qIQJBACEDA0AgACADaiIBIAEtAAAgBSADai0AAHM6AAAgA0EBai\
IDQegARw0ACyAAEBMgBCEFIAJB6ABPDQALCyAAQcwBaiAHIAYQlwEaIAAgBjYCyAEPCyADIAVB9J/A\
ABCIAQALIAVB6ABB9J/AABCFAQALIANB6ABBhKDAABCEAQAL8QIBBX8jAEGgA2siAiQAIAJBigNqQg\
A3AQAgAkGSA2pBADsBACACQYADakEUakIANwIAIAJBgANqQRxqQQA2AgAgAkEcNgKAAyACQQA7AYQD\
IAJBADYBhgMgAkEgakEYaiACQYADakEYaikDADcDACACQSBqQRBqIAJBgANqQRBqKQMANwMAIAJBIG\
pBCGogAkGAA2pBCGopAwA3AwAgAiACKQOAAzcDICACQRhqIgMgAkEgakEcaigCADYCACACQRBqIgQg\
AkEgakEUaikCADcDACACQQhqIgUgAkEsaikCADcDACACIAIpAiQ3AwAgAkEgaiABQeACEJcBGiACQS\
BqIAIQZgJAQRwQCSIGDQBBHEEBQQAoAsynQCICQQIgAhsRBAAACyAGIAIpAwA3AAAgBkEYaiADKAIA\
NgAAIAZBEGogBCkDADcAACAGQQhqIAUpAwA3AAAgARAQIABBHDYCBCAAIAY2AgAgAkGgA2okAAvxAg\
EFfyMAQaADayICJAAgAkGKA2pCADcBACACQZIDakEAOwEAIAJBgANqQRRqQgA3AgAgAkGAA2pBHGpB\
ADYCACACQRw2AoADIAJBADsBhAMgAkEANgGGAyACQSBqQRhqIAJBgANqQRhqKQMANwMAIAJBIGpBEG\
ogAkGAA2pBEGopAwA3AwAgAkEgakEIaiACQYADakEIaikDADcDACACIAIpA4ADNwMgIAJBGGoiAyAC\
QSBqQRxqKAIANgIAIAJBEGoiBCACQSBqQRRqKQIANwMAIAJBCGoiBSACQSxqKQIANwMAIAIgAikCJD\
cDACACQSBqIAFB4AIQlwEaIAJBIGogAhBoAkBBHBAJIgYNAEEcQQFBACgCzKdAIgJBAiACGxEEAAAL\
IAYgAikDADcAACAGQRhqIAMoAgA2AAAgBkEQaiAEKQMANwAAIAZBCGogBSkDADcAACABEBAgAEEcNg\
IEIAAgBjYCACACQaADaiQAC/ECAQV/IwBBsAFrIgIkACACQZoBakIANwEAIAJBogFqQQA7AQAgAkGQ\
AWpBFGpCADcCACACQZABakEcakEANgIAIAJBHDYCkAEgAkEAOwGUASACQQA2AZYBIAJBIGpBGGogAk\
GQAWpBGGopAwA3AwAgAkEgakEQaiACQZABakEQaikDADcDACACQSBqQQhqIAJBkAFqQQhqKQMANwMA\
IAIgAikDkAE3AyAgAkEYaiIDIAJBIGpBHGooAgA2AgAgAkEQaiIEIAJBIGpBFGopAgA3AwAgAkEIai\
IFIAJBLGopAgA3AwAgAiACKQIkNwMAIAJBIGogAUHwABCXARogAkEgaiACEEACQEEcEAkiBg0AQRxB\
AUEAKALMp0AiAkECIAIbEQQAAAsgBiACKQMANwAAIAZBGGogAygCADYAACAGQRBqIAQpAwA3AAAgBk\
EIaiAFKQMANwAAIAEQECAAQRw2AgQgACAGNgIAIAJBsAFqJAAL0AICBX8BfiMAQTBrIgIkAEEnIQMC\
QAJAIABCkM4AWg0AIAAhBwwBC0EnIQMDQCACQQlqIANqIgRBfGogAEKQzgCAIgdC8LF/fiAAfKciBU\
H//wNxQeQAbiIGQQF0QYqNwABqLwAAOwAAIARBfmogBkGcf2wgBWpB//8DcUEBdEGKjcAAai8AADsA\
ACADQXxqIQMgAEL/wdcvViEEIAchACAEDQALCwJAIAenIgRB4wBMDQAgAkEJaiADQX5qIgNqIAenIg\
VB//8DcUHkAG4iBEGcf2wgBWpB//8DcUEBdEGKjcAAai8AADsAAAsCQAJAIARBCUoNACACQQlqIANB\
f2oiA2ogBEEwajoAAAwBCyACQQlqIANBfmoiA2ogBEEBdEGKjcAAai8AADsAAAsgAUGoosAAQQAgAk\
EJaiADakEnIANrEBkhAyACQTBqJAAgAwviAgIEfwF+IABBzABqIQEgACkDACEFAkACQAJAIAAoAggi\
AkHAAEcNACABIABBDGpBARAEQQAhAiAAQQA2AggMAQsgAkE/Sw0BCyAAQQhqIAJqQQRqQYABOgAAIA\
AgACgCCCIDQQFqIgI2AggCQAJAIAJBwQBPDQAgAEEMaiIEIAJqQQBBPyADaxCdARoCQEHAACAAKAII\
a0EHSw0AIAEgBEEBEAQgACgCCCICQcEATw0CIABBDGpBACACEJ0BGgsgAEHEAGogBUI4hiAFQiiGQo\
CAgICAgMD/AIOEIAVCGIZCgICAgIDgP4MgBUIIhkKAgICA8B+DhIQgBUIIiEKAgID4D4MgBUIYiEKA\
gPwHg4QgBUIoiEKA/gODIAVCOIiEhIQ3AgAgASAEQQEQBCAAQQA2AggPCyACQcAAQaicwAAQhAEACy\
ACQcAAQbicwAAQhQEACyACQcAAQcicwAAQhwEAC7kCAQR/IwBBoAFrIgIkACACQQA2AhAgAkEIaiAC\
QRBqQQRyIAJB1ABqEKgBAkACQCACKAIMIAIoAggiA2siBEHAACAEQcAASRsiBEUNAANAIAMgAS0AAD\
oAACACIAIoAhBBAWoiBTYCECADQQFqIQMgAUEBaiEBIARBf2oiBA0ADAILCyACKAIQIQULAkAgBUE/\
Sw0AIAVBwAAQiQEACyACQdgAaiACQRBqQcQAEJcBGiAAQThqIAJBlAFqKQIANwAAIABBMGogAkGMAW\
opAgA3AAAgAEEoaiACQYQBaikCADcAACAAQSBqIAJB/ABqKQIANwAAIABBGGogAkH0AGopAgA3AAAg\
AEEQaiACQewAaikCADcAACAAQQhqIAJB5ABqKQIANwAAIAAgAikCXDcAACACQaABaiQAC7kCAQN/Iw\
BBEGsiAiQAAkAgACgCyAEiA0HHAEsNACAAIANqQcwBakEGOgAAAkAgA0EBaiIEQcgARg0AIAAgBGpB\
zAFqQQBBxwAgA2sQnQEaC0EAIQMgAEEANgLIASAAQZMCaiIEIAQtAABBgAFyOgAAA0AgACADaiIEIA\
QtAAAgBEHMAWotAABzOgAAIANBAWoiA0HIAEcNAAsgABATIAEgACkAADcAACABQThqIABBOGopAAA3\
AAAgAUEwaiAAQTBqKQAANwAAIAFBKGogAEEoaikAADcAACABQSBqIABBIGopAAA3AAAgAUEYaiAAQR\
hqKQAANwAAIAFBEGogAEEQaikAADcAACABQQhqIABBCGopAAA3AAAgAkEQaiQADwtB9Z7AAEEXIAJB\
CGpBjJ/AAEHEocAAEH8AC7kCAQN/IwBBEGsiAiQAAkAgACgCyAEiA0HHAEsNACAAIANqQcwBakEBOg\
AAAkAgA0EBaiIEQcgARg0AIAAgBGpBzAFqQQBBxwAgA2sQnQEaC0EAIQMgAEEANgLIASAAQZMCaiIE\
IAQtAABBgAFyOgAAA0AgACADaiIEIAQtAAAgBEHMAWotAABzOgAAIANBAWoiA0HIAEcNAAsgABATIA\
EgACkAADcAACABQThqIABBOGopAAA3AAAgAUEwaiAAQTBqKQAANwAAIAFBKGogAEEoaikAADcAACAB\
QSBqIABBIGopAAA3AAAgAUEYaiAAQRhqKQAANwAAIAFBEGogAEEQaikAADcAACABQQhqIABBCGopAA\
A3AAAgAkEQaiQADwtB9Z7AAEEXIAJBCGpBjJ/AAEGEocAAEH8AC8ICAQh/IwBB8ABrIgFBKGoiAkIA\
NwMAIAFBIGoiA0IANwMAIAFBGGoiBEIANwMAIAFBEGoiBUIANwMAIAFBCGoiBkIANwMAIAFCADcDAC\
ABQcoAakIANwEAIAFB0gBqQQA7AQAgAUEQNgJAIAFBADsBRCABQQA2AUYgAUHYAGpBEGogAUHAAGpB\
EGooAgA2AgAgAUHYAGpBCGogAUHAAGpBCGopAwA3AwAgASABKQNANwNYIAFBOGoiByABQeQAaikCAD\
cDACABQTBqIgggASkCXDcDACAAQcwAaiAHKQMANwAAIABBxABqIAgpAwA3AAAgAEE8aiACKQMANwAA\
IABBNGogAykDADcAACAAQSxqIAQpAwA3AAAgAEEkaiAFKQMANwAAIABBHGogBikDADcAACAAIAEpAw\
A3ABQgAEEANgIAC8ECAgR/AX4gAEEIaiECIAApAwAhBgJAAkACQCAAKAIcIgNBwABHDQAgAiAAQSBq\
EAdBACEDIABBADYCHAwBCyADQT9LDQELIABBIGoiBCADakGAAToAACAAIAAoAhwiBUEBaiIDNgIcAk\
ACQCADQcEATw0AIABBHGogA2pBBGpBAEE/IAVrEJ0BGgJAQcAAIAAoAhxrQQdLDQAgAiAEEAcgACgC\
HCIDQcEATw0CIABBIGpBACADEJ0BGgsgAEHYAGogBkIDhjcDACACIAQQByAAQQA2AhwgASAAKAIINg\
AAIAEgAEEMaigCADYABCABIABBEGooAgA2AAggASAAQRRqKAIANgAMIAEgAEEYaigCADYAEA8LIANB\
wABBqJzAABCEAQALIANBwABBuJzAABCFAQALIANBwABByJzAABCHAQALtwICBX8BfiMAQcABayICJA\
AgAkHQAGpBCGoiAyABQRBqKQMANwMAIAJB0ABqQRBqIgQgAUEYaikDADcDACACQdAAakEYaiIFIAFB\
IGopAwA3AwAgAkHQAGpBIGoiBiABQShqKQMANwMAIAIgASkDCDcDUCABKQMAIQcgAkH4AGpBBHIgAU\
E0ahBKIAIgASgCMDYCeCACQQhqIAJB+ABqQcQAEJcBGgJAQfgAEAkiAQ0AQfgAQQhBACgCzKdAIgJB\
AiACGxEEAAALIAEgBzcDACABIAIpA1A3AwggAUEQaiADKQMANwMAIAFBGGogBCkDADcDACABQSBqIA\
UpAwA3AwAgAUEoaiAGKQMANwMAIAFBMGogAkEIakHEABCXARogAEHclMAANgIEIAAgATYCACACQcAB\
aiQAC7gCAgR/AX4gAEHMAGohAiAAKQMAIQYCQAJAAkAgACgCCCIDQcAARw0AIAIgAEEMahAMQQAhAy\
AAQQA2AggMAQsgA0E/Sw0BCyAAQQhqIANqQQRqQYABOgAAIAAgACgCCCIEQQFqIgM2AggCQAJAIANB\
wQBPDQAgAEEMaiIFIANqQQBBPyAEaxCdARoCQEHAACAAKAIIa0EHSw0AIAIgBRAMIAAoAggiA0HBAE\
8NAiAAQQxqQQAgAxCdARoLIABBxABqIAZCA4Y3AgAgAiAFEAwgAEEANgIIIAEgACgCTDYAACABIABB\
0ABqKAIANgAEIAEgAEHUAGooAgA2AAggASAAQdgAaigCADYADA8LIANBwABBqJzAABCEAQALIANBwA\
BBuJzAABCFAQALIANBwABByJzAABCHAQALuAICBH8BfiAAQcwAaiECIAApAwAhBgJAAkACQCAAKAII\
IgNBwABHDQAgAiAAQQxqEA9BACEDIABBADYCCAwBCyADQT9LDQELIABBDGoiBCADakGAAToAACAAIA\
AoAggiBUEBaiIDNgIIAkACQCADQcEATw0AIABBCGogA2pBBGpBAEE/IAVrEJ0BGgJAQcAAIAAoAghr\
QQdLDQAgAiAEEA8gACgCCCIDQcEATw0CIABBDGpBACADEJ0BGgsgAEHEAGogBkIDhjcCACACIAQQDy\
AAQQA2AgggASAAKAJMNgAAIAEgAEHQAGooAgA2AAQgASAAQdQAaigCADYACCABIABB2ABqKAIANgAM\
DwsgA0HAAEGonMAAEIQBAAsgA0HAAEG4nMAAEIUBAAsgA0HAAEHInMAAEIcBAAujAgIEfwJ+IAAgAC\
kDACIHIAKtQgOGfCIINwMAIABBCGoiAyADKQMAIAggB1StfDcDAAJAAkACQAJAQYABIAAoAlAiA2si\
BCACTQ0AIAMgAmoiBCADSQ0BIARBgQFPDQIgAEHQAGogA2pBBGogASACEJcBGiAAIAAoAlAgAmo2Al\
APCyAAQRBqIQUCQCADRQ0AIANBgQFPDQMgAEHUAGoiBiADaiABIAQQlwEaIABBADYCUCAFIAZBARAD\
IAIgBGshAiABIARqIQELIAUgASACQQd2EAMgAEHUAGogASACQYB/cWogAkH/AHEiAhCXARogACACNg\
JQDwsgAyAEQYicwAAQiAEACyAEQYABQYicwAAQhQEACyADQYABQZicwAAQhAEAC54CAQR/IAAgACkD\
ACACrXw3AwACQAJAAkACQEHAACAAKAIIIgNrIgQgAk0NACADIAJqIgUgA0kNASAFQcEATw0CIABBCG\
ogA2pBBGogASACEJcBGiAAIAAoAgggAmo2AggPCyAAQcwAaiEFAkAgA0UNACADQcEATw0DIABBDGoi\
BiADaiABIAQQlwEaIAUgBhAMIAIgBGshAiABIARqIQELIAJBP3EhAyABIAJBQHEiAmohBAJAIAJFDQ\
BBACACayECA0AgBSABEAwgAUHAAGohASACQcAAaiICDQALCyAAQQxqIAQgAxCXARogACADNgIIDwsg\
AyAFQfSfwAAQiAEACyAFQcAAQfSfwAAQhQEACyADQcAAQYSgwAAQhAEAC50CAQR/IAAgACkDACACrX\
w3AwACQAJAAkACQEHAACAAKAIcIgNrIgQgAk0NACADIAJqIgUgA0kNASAFQcEATw0CIABBHGogA2pB\
BGogASACEJcBGiAAIAAoAhwgAmo2AhwPCyAAQQhqIQUCQCADRQ0AIANBwQBPDQMgAEEgaiIGIANqIA\
EgBBCXARogBSAGEAcgAiAEayECIAEgBGohAQsgAkE/cSEDIAEgAkFAcSICaiEEAkAgAkUNAEEAIAJr\
IQIDQCAFIAEQByABQcAAaiEBIAJBwABqIgINAAsLIABBIGogBCADEJcBGiAAIAM2AhwPCyADIAVB9J\
/AABCIAQALIAVBwABB9J/AABCFAQALIANBwABBhKDAABCEAQALngIBBH8gACAAKQMAIAKtfDcDAAJA\
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\
OgAAA0AgACADaiIEIAQtAAAgBEHMAWotAABzOgAAIANBAWoiA0HoAEcNAAsgABATIAEgACkAADcAAC\
ABQShqIABBKGopAAA3AAAgAUEgaiAAQSBqKQAANwAAIAFBGGogAEEYaikAADcAACABQRBqIABBEGop\
AAA3AAAgAUEIaiAAQQhqKQAANwAAIAJBEGokAA8LQfWewABBFyACQQhqQYyfwABB9KDAABB/AAuZAg\
EDfyMAQRBrIgIkAAJAIAAoAsgBIgNB5wBLDQAgACADakHMAWpBBjoAAAJAIANBAWoiBEHoAEYNACAA\
IARqQcwBakEAQecAIANrEJ0BGgtBACEDIABBADYCyAEgAEGzAmoiBCAELQAAQYABcjoAAANAIAAgA2\
oiBCAELQAAIARBzAFqLQAAczoAACADQQFqIgNB6ABHDQALIAAQEyABIAApAAA3AAAgAUEoaiAAQShq\
KQAANwAAIAFBIGogAEEgaikAADcAACABQRhqIABBGGopAAA3AAAgAUEQaiAAQRBqKQAANwAAIAFBCG\
ogAEEIaikAADcAACACQRBqJAAPC0H1nsAAQRcgAkEIakGMn8AAQbShwAAQfwALhQIBBH8CQAJAAkAC\
QEEQIAAoAgAiA2siBCACTQ0AIAMgAmoiBSADSQ0BIAVBEU8NAiAAIANqQQRqIAEgAhCXARogACAAKA\
IAIAJqNgIADwsgAEEUaiEFAkAgA0UNACADQRFPDQMgAEEEaiIGIANqIAEgBBCXARogBSAGEA0gAiAE\
ayECIAEgBGohAQsgAkEPcSEDIAEgAkFwcSICaiEEAkAgAkUNAEEAIAJrIQIDQCAFIAEQDSABQRBqIQ\
EgAkEQaiICDQALCyAAQQRqIAQgAxCXARogACADNgIADwsgAyAFQfSfwAAQiAEACyAFQRBB9J/AABCF\
AQALIANBEEGEoMAAEIQBAAukAgICfwJ+IwBBkAJrIgIkACABQQhqKQMAIQQgASkDACEFIAJBiAFqQQ\
RyIAFB1ABqEG8gAiABKAJQNgKIASACIAJBiAFqQYQBEJcBIQMCQEHYARAJIgINAEHYAUEIQQAoAsyn\
QCIBQQIgARsRBAAACyACIAU3AwAgAiAENwMIIAIgASkDEDcDECACQRhqIAFBGGopAwA3AwAgAkEgai\
ABQSBqKQMANwMAIAJBKGogAUEoaikDADcDACACQTBqIAFBMGopAwA3AwAgAkE4aiABQThqKQMANwMA\
IAJBwABqIAFBwABqKQMANwMAIAJByABqIAFByABqKQMANwMAIAJB0ABqIANBhAEQlwEaIABByJXAAD\
YCBCAAIAI2AgAgA0GQAmokAAukAgICfwJ+IwBBkAJrIgIkACABQQhqKQMAIQQgASkDACEFIAJBiAFq\
QQRyIAFB1ABqEG8gAiABKAJQNgKIASACIAJBiAFqQYQBEJcBIQMCQEHYARAJIgINAEHYAUEIQQAoAs\
ynQCIBQQIgARsRBAAACyACIAU3AwAgAiAENwMIIAIgASkDEDcDECACQRhqIAFBGGopAwA3AwAgAkEg\
aiABQSBqKQMANwMAIAJBKGogAUEoaikDADcDACACQTBqIAFBMGopAwA3AwAgAkE4aiABQThqKQMANw\
MAIAJBwABqIAFBwABqKQMANwMAIAJByABqIAFByABqKQMANwMAIAJB0ABqIANBhAEQlwEaIABB7JXA\
ADYCBCAAIAI2AgAgA0GQAmokAAuDAgEEfyAAIAApAwAgAq1CA4Z8NwMAAkACQAJAAkBBwAAgACgCCC\
IDayIEIAJNDQAgAyACaiIEIANJDQEgBEHBAE8NAiAAQQhqIANqQQRqIAEgAhCXARogACAAKAIIIAJq\
NgIIDwsgAEHMAGohBQJAIANFDQAgA0HBAE8NAyAAQQxqIgYgA2ogASAEEJcBGiAAQQA2AgggBSAGQQ\
EQBCACIARrIQIgASAEaiEBCyAFIAEgAkEGdhAEIABBDGogASACQUBxaiACQT9xIgIQlwEaIAAgAjYC\
CA8LIAMgBEGInMAAEIgBAAsgBEHAAEGInMAAEIUBAAsgA0HAAEGYnMAAEIQBAAuRAgEDfyMAQYABay\
ICJAAgAkEYaiABQdQAEJcBGgJAAkAgAigCGCIDQRBPDQAgAkEYakEEciIEIANqQRAgA2siAyADEJ0B\
GiACQQA2AhggAkEsaiIDIAQQDSACQfAAakEIaiACQeQAaikCADcDACACIAJB3ABqKQIANwNwIAMgAk\
HwAGoQDSACQQhqQQhqIgQgAkE0aikCADcDACACIAIpAiw3AwhBEBAJIgNFDQEgAyACKQMINwAAIANB\
CGogBCkDADcAACABEBAgAEEQNgIEIAAgAzYCACACQYABaiQADwtB9Z7AAEEXIAJB8ABqQfCawABBgJ\
vAABB/AAtBEEEBQQAoAsynQCICQQIgAhsRBAAAC/8BAQR/IAAgACkDACACrXw3AwACQAJAAkACQEHA\
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\
ciABQcwBahBtIAIgASgCyAE2AqACIAJBCGpByAFqIAJBoAJqQcwAEJcBGgJAQZgCEAkiAQ0AQZgCQQ\
hBACgCzKdAIgJBAiACGxEEAAALIAEgAkEIakGYAhCXASEBIABB5JDAADYCBCAAIAE2AgAgAkHwAmok\
AAuaAQEBfyMAQYAEayICJAAgAkEIaiABQcgBEJcBGiACQegCakEEciABQcwBahBuIAIgASgCyAE2Au\
gCIAJBCGpByAFqIAJB6AJqQZQBEJcBGgJAQeACEAkiAQ0AQeACQQhBACgCzKdAIgJBAiACGxEEAAAL\
IAEgAkEIakHgAhCXASEBIABBiJHAADYCBCAAIAE2AgAgAkGABGokAAuaAQEBfyMAQfADayICJAAgAk\
EIaiABQcgBEJcBGiACQeACakEEciABQcwBahBxIAIgASgCyAE2AuACIAJBCGpByAFqIAJB4AJqQYwB\
EJcBGgJAQdgCEAkiAQ0AQdgCQQhBACgCzKdAIgJBAiACGxEEAAALIAEgAkEIakHYAhCXASEBIABBrJ\
HAADYCBCAAIAE2AgAgAkHwA2okAAuaAQEBfyMAQYAEayICJAAgAkEIaiABQcgBEJcBGiACQegCakEE\
ciABQcwBahBuIAIgASgCyAE2AugCIAJBCGpByAFqIAJB6AJqQZQBEJcBGgJAQeACEAkiAQ0AQeACQQ\
hBACgCzKdAIgJBAiACGxEEAAALIAEgAkEIakHgAhCXASEBIABB0JHAADYCBCAAIAE2AgAgAkGABGok\
AAuaAQEBfyMAQbADayICJAAgAkEIaiABQcgBEJcBGiACQcACakEEciABQcwBahBwIAIgASgCyAE2As\
ACIAJBCGpByAFqIAJBwAJqQewAEJcBGgJAQbgCEAkiAQ0AQbgCQQhBACgCzKdAIgJBAiACGxEEAAAL\
IAEgAkEIakG4AhCXASEBIABB9JHAADYCBCAAIAE2AgAgAkGwA2okAAuaAQEBfyMAQfADayICJAAgAk\
EIaiABQcgBEJcBGiACQeACakEEciABQcwBahBxIAIgASgCyAE2AuACIAJBCGpByAFqIAJB4AJqQYwB\
EJcBGgJAQdgCEAkiAQ0AQdgCQQhBACgCzKdAIgJBAiACGxEEAAALIAEgAkEIakHYAhCXASEBIABBmJ\
LAADYCBCAAIAE2AgAgAkHwA2okAAuaAQEBfyMAQfACayICJAAgAkEIaiABQcgBEJcBGiACQaACakEE\
ciABQcwBahBtIAIgASgCyAE2AqACIAJBCGpByAFqIAJBoAJqQcwAEJcBGgJAQZgCEAkiAQ0AQZgCQQ\
hBACgCzKdAIgJBAiACGxEEAAALIAEgAkEIakGYAhCXASEBIABBvJLAADYCBCAAIAE2AgAgAkHwAmok\
AAuaAQEBfyMAQbADayICJAAgAkEIaiABQcgBEJcBGiACQcACakEEciABQcwBahBwIAIgASgCyAE2As\
ACIAJBCGpByAFqIAJBwAJqQewAEJcBGgJAQbgCEAkiAQ0AQbgCQQhBACgCzKdAIgJBAiACGxEEAAAL\
IAEgAkEIakG4AhCXASEBIABB4JLAADYCBCAAIAE2AgAgAkGwA2okAAt/AQF/IwBBwABrIgUkACAFIA\
E2AgwgBSAANgIIIAUgAzYCFCAFIAI2AhAgBUEsakECNgIAIAVBPGpBBDYCACAFQgI3AhwgBUHwj8AA\
NgIYIAVBATYCNCAFIAVBMGo2AiggBSAFQRBqNgI4IAUgBUEIajYCMCAFQRhqIAQQmwEAC34BAn8jAE\
EwayICJAAgAkEUakEBNgIAIAJBhIzAADYCECACQQE2AgwgAkH8i8AANgIIIAFBHGooAgAhAyABKAIY\
IQEgAkEsakECNgIAIAJCAjcCHCACQfCPwAA2AhggAiACQQhqNgIoIAEgAyACQRhqEBwhASACQTBqJA\
AgAQt+AQJ/IwBBMGsiAiQAIAJBFGpBATYCACACQYSMwAA2AhAgAkEBNgIMIAJB/IvAADYCCCABQRxq\
KAIAIQMgASgCGCEBIAJBLGpBAjYCACACQgI3AhwgAkHwj8AANgIYIAIgAkEIajYCKCABIAMgAkEYah\
AcIQEgAkEwaiQAIAELjgEAIABCADcDCCAAQgA3AwAgAEEANgJQIABBACkD2J1ANwMQIABBGGpBACkD\
4J1ANwMAIABBIGpBACkD6J1ANwMAIABBKGpBACkD8J1ANwMAIABBMGpBACkD+J1ANwMAIABBOGpBAC\
kDgJ5ANwMAIABBwABqQQApA4ieQDcDACAAQcgAakEAKQOQnkA3AwALjgEAIABCADcDCCAAQgA3AwAg\
AEEANgJQIABBACkDmJ1ANwMQIABBGGpBACkDoJ1ANwMAIABBIGpBACkDqJ1ANwMAIABBKGpBACkDsJ\
1ANwMAIABBMGpBACkDuJ1ANwMAIABBOGpBACkDwJ1ANwMAIABBwABqQQApA8idQDcDACAAQcgAakEA\
KQPQnUA3AwALbQEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYCACADQSxqQQU2AgAgA0\
ICNwIMIANBmI/AADYCCCADQQU2AiQgAyADQSBqNgIYIAMgA0EEajYCKCADIAM2AiAgA0EIaiACEJsB\
AAttAQF/IwBBMGsiAyQAIAMgATYCBCADIAA2AgAgA0EcakECNgIAIANBLGpBBTYCACADQgI3AgwgA0\
HUjsAANgIIIANBBTYCJCADIANBIGo2AhggAyADQQRqNgIoIAMgAzYCICADQQhqIAIQmwEAC20BAX8j\
AEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakEFNgIAIANCAzcCDCADQYSQwAA2Ag\
ggA0EFNgIkIAMgA0EgajYCGCADIAM2AiggAyADQQRqNgIgIANBCGogAhCbAQALbQEBfyMAQTBrIgMk\
ACADIAE2AgQgAyAANgIAIANBHGpBAjYCACADQSxqQQU2AgAgA0ICNwIMIANBuIzAADYCCCADQQU2Ai\
QgAyADQSBqNgIYIAMgAzYCKCADIANBBGo2AiAgA0EIaiACEJsBAAttAQF/IwBBMGsiAyQAIAMgATYC\
BCADIAA2AgAgA0EcakECNgIAIANBLGpBBTYCACADQgI3AgwgA0G8j8AANgIIIANBBTYCJCADIANBIG\
o2AhggAyADQQRqNgIoIAMgAzYCICADQQhqIAIQmwEAC3ABAX8jAEEwayICJAAgAiABNgIEIAIgADYC\
ACACQRxqQQI2AgAgAkEsakEFNgIAIAJCAjcCDCACQZCWwAA2AgggAkEFNgIkIAIgAkEgajYCGCACIA\
JBBGo2AiggAiACNgIgIAJBCGpBoJbAABCbAQALbAAgAEIANwMAIAAgACkDcDcDCCAAQSBqIABBiAFq\
KQMANwMAIABBGGogAEGAAWopAwA3AwAgAEEQaiAAQfgAaikDADcDACAAQShqQQBBwgAQnQEaAkAgAE\
HwDmoiAC0AAEUNACAAQQA6AAALC2MBAX8jAEEgayICJAAgAiAAKAIANgIEIAJBCGpBEGogAUEQaikC\
ADcDACACQQhqQQhqIAFBCGopAgA3AwAgAiABKQIANwMIIAJBBGpBjIfAACACQQhqEBwhASACQSBqJA\
AgAQt3AQF/QQBBACgC+KNAQQFqNgL4o0ACQAJAAkBBACgCwKdAQQFHDQBBAEEAKALEp0BBAWoiADYC\
xKdAIABBA08NAkEAKALIp0BBf0wNAiAAQQJJDQEMAgtBAEKBgICAEDcDwKdAQQAoAsinQEF/TA0BCx\
DEAQALAAtlAgF/AX4jAEEQayICJAACQAJAIAFFDQAgASgCAA0BIAFBfzYCACACQQhqIAEoAgQgAUEI\
aigCACgCEBEEACACKQMIIQMgAUEANgIAIAAgAzcDACACQRBqJAAPCxCxAQALELIBAAtUAQJ/AkAgAC\
gCACIAQQRqKAIAIABBCGoiAygCACIEayACTw0AIAAgBCACEGwgAygCACEECyAAKAIAIARqIAEgAhCX\
ARogAyADKAIAIAJqNgIAQQALSgEDf0EAIQMCQCACRQ0AAkADQCAALQAAIgQgAS0AACIFRw0BIABBAW\
ohACABQQFqIQEgAkF/aiICRQ0CDAALCyAEIAVrIQMLIAMLUQECfwJAAkAgAEUNACAAKAIADQEgAEEA\
NgIAIAAoAgQhASAAKAIIIQIgABAQIAEgAigCABEBAAJAIAIoAgRFDQAgARAQCw8LELEBAAsQsgEAC0\
4AAkACQCAARQ0AIAAoAgANASAAQX82AgAgACgCBCABIAIgAEEIaigCACgCDBEGAAJAIAJFDQAgARAQ\
CyAAQQA2AgAPCxCxAQALELIBAAtUAQF/AkACQCABQYCAxABGDQBBASEEIAAoAhggASAAQRxqKAIAKA\
IQEQUADQELAkAgAg0AQQAPCyAAKAIYIAIgAyAAQRxqKAIAKAIMEQcAIQQLIAQLWAAgAEIANwMAIABB\
ADYCMCAAQQApA6CbQDcDCCAAQRBqQQApA6ibQDcDACAAQRhqQQApA7CbQDcDACAAQSBqQQApA7ibQD\
cDACAAQShqQQApA8CbQDcDAAtIAQF/IwBBIGsiAyQAIANBFGpBADYCACADQaiiwAA2AhAgA0IBNwIE\
IAMgATYCHCADIAA2AhggAyADQRhqNgIAIAMgAhCbAQALTAAgAEEANgIIIABCADcDACAAQQApAticQD\
cCTCAAQdQAakEAKQLgnEA3AgAgAEHcAGpBACkC6JxANwIAIABB5ABqQQApAvCcQDcCAAtMACAAQQA2\
AgggAEIANwMAIABBACkD+JxANwJMIABB1ABqQQApA4CdQDcCACAAQdwAakEAKQOInUA3AgAgAEHkAG\
pBACkDkJ1ANwIACzYBAX8CQCACRQ0AIAAhAwNAIAMgAS0AADoAACABQQFqIQEgA0EBaiEDIAJBf2oi\
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\
AABrAAAAYSBmb3JtYXR0aW5nIHRyYWl0IGltcGxlbWVudGF0aW9uIHJldHVybmVkIGFuIGVycm9yAA\
YAAAAAAAAAAQAAAGwAAAD4AxAAGAAAAEUCAAAcAAAAbGlicmFyeS9hbGxvYy9zcmMvZm10LnJzIAQQ\
AEkAAABlAQAACQAAAH4vLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZW\
M4MjMvYmxha2UzLTAuMy44L3NyYy9saWIucnMAAAAgBBAASQAAAAsCAAAKAAAAIAQQAEkAAAA5AgAA\
CQAAACAEEABJAAAArgIAABkAAAAgBBAASQAAALACAAAJAAAAIAQQAEkAAACwAgAAOAAAAGFzc2VydG\
lvbiBmYWlsZWQ6IG1pZCA8PSBzZWxmLmxlbigpACgPEABNAAAA4wUAAAkAAAAgBBAASQAAAIMCAAAJ\
AAAAIAQQAEkAAACKAgAACgAAACAEEABJAAAAmQMAADMAAAAgBBAASQAAAJoDAAAyAAAAIAQQAEkAAA\
BVBAAAFgAAACAEEABJAAAAZwQAABYAAAAgBBAASQAAAJgEAAASAAAAIAQQAEkAAACiBAAAEgAAAAYA\
AAAEAAAABAAAAG0AAACQBRAASwAAAM0AAAAgAAAAfi8uY2FyZ28vcmVnaXN0cnkvc3JjL2dpdGh1Yi\
5jb20tMWVjYzYyOTlkYjllYzgyMy9hcnJheXZlYy0wLjUuMi9zcmMvbGliLnJzAAYAAAAEAAAABAAA\
AG0AAAAGAAAAIAAAAAEAAABuAAAAIQYQAA0AAAAMBhAAFQAAAGluc3VmZmljaWVudCBjYXBhY2l0eU\
NhcGFjaXR5RXJyb3JQYWRFcnJvcgAAWAYQACAAAAB4BhAAEgAAAAYAAAAAAAAAAQAAAG8AAABpbmRl\
eCBvdXQgb2YgYm91bmRzOiB0aGUgbGVuIGlzICBidXQgdGhlIGluZGV4IGlzIDAwMDEwMjAzMDQwNT\
A2MDcwODA5MTAxMTEyMTMxNDE1MTYxNzE4MTkyMDIxMjIyMzI0MjUyNjI3MjgyOTMwMzEzMjMzMzQz\
NTM2MzczODM5NDA0MTQyNDM0NDQ1NDY0NzQ4NDk1MDUxNTI1MzU0NTU1NjU3NTg1OTYwNjE2MjYzNj\
Q2NTY2Njc2ODY5NzA3MTcyNzM3NDc1NzY3Nzc4Nzk4MDgxODI4Mzg0ODU4Njg3ODg4OTkwOTE5Mjkz\
OTQ5NTk2OTc5ODk5AABkBxAAEAAAAHQHEAAiAAAAcmFuZ2UgZW5kIGluZGV4ICBvdXQgb2YgcmFuZ2\
UgZm9yIHNsaWNlIG9mIGxlbmd0aCAAAKgHEAASAAAAdAcQACIAAAByYW5nZSBzdGFydCBpbmRleCAA\
AMwHEAAWAAAA4gcQAA0AAABzbGljZSBpbmRleCBzdGFydHMgYXQgIGJ1dCBlbmRzIGF0IAAoERAAAA\
AAAAAIEAACAAAAOiApABwIEAAVAAAAMQgQACsAAAACCBAAAQAAAHNvdXJjZSBzbGljZSBsZW5ndGgg\
KCkgZG9lcyBub3QgbWF0Y2ggZGVzdGluYXRpb24gc2xpY2UgbGVuZ3RoIChFcnJvcgAAAAYAAAAYAQ\
AACAAAAFAAAABfAAAAYAAAAFMAAABUAAAAYQAAAAYAAABgAQAACAAAAD4AAAA/AAAAQAAAAEEAAABC\
AAAAQwAAAAYAAABYAQAACAAAAEQAAABZAAAAWgAAAEcAAABIAAAAWwAAAAYAAABgAQAACAAAAD4AAA\
BWAAAAVwAAAEEAAABCAAAAWAAAAAYAAAA4AQAACAAAAEoAAABcAAAAXQAAAE0AAABOAAAAXgAAAAYA\
AABYAQAACAAAAEQAAABFAAAARgAAAEcAAABIAAAASQAAAAYAAAAYAQAACAAAAFAAAABRAAAAUgAAAF\
MAAABUAAAAVQAAAAYAAAA4AQAACAAAAEoAAABLAAAATAAAAE0AAABOAAAATwAAAAYAAABwAAAACAAA\
ACgAAAAuAAAALwAAADAAAAAxAAAAMgAAAAYAAABwAAAACAAAACgAAAApAAAAKgAAACsAAAAsAAAALQ\
AAAAYAAABgAAAACAAAABMAAAAUAAAAFQAAABAAAAARAAAAFgAAAGIAAAB4BwAACAAAAGMAAABkAAAA\
ZQAAAGYAAABnAAAAaAAAAAYAAABgAAAACAAAABcAAAAYAAAAGQAAABoAAAAbAAAAHAAAAAYAAABgAA\
AACAAAAA0AAAAOAAAADwAAABAAAAARAAAAEgAAAAYAAAB4AAAACAAAAB0AAAAeAAAAHwAAACAAAAAh\
AAAAIgAAAAYAAABgAAAACAAAACMAAAAkAAAAJQAAACYAAAAbAAAAJwAAAAYAAABUAAAABAAAAAcAAA\
AIAAAACQAAAAoAAAALAAAADAAAAAYAAADYAAAACAAAADMAAAA5AAAAOgAAADsAAAA8AAAAPQAAAAYA\
AADYAAAACAAAADMAAAA0AAAANQAAADYAAAA3AAAAOAAAADALEAAhAAAAUQsQABcAAADUEBAAUQAAAG\
cBAAAFAAAAR2VuZXJpY0FycmF5Ojpmcm9tX2l0ZXIgcmVjZWl2ZWQgIGVsZW1lbnRzIGJ1dCBleHBl\
Y3RlZCABAAAAAAAAAIKAAAAAAAAAioAAAAAAAIAAgACAAAAAgIuAAAAAAAAAAQAAgAAAAACBgACAAA\
AAgAmAAAAAAACAigAAAAAAAACIAAAAAAAAAAmAAIAAAAAACgAAgAAAAACLgACAAAAAAIsAAAAAAACA\
iYAAAAAAAIADgAAAAAAAgAKAAAAAAACAgAAAAAAAAIAKgAAAAAAAAAoAAIAAAACAgYAAgAAAAICAgA\
AAAAAAgAEAAIAAAAAACIAAgAAAAIApLkPJoth8AT02VKHs8AYTYqcF88DHc4yYkyvZvEyCyh6bVzz9\
1OAWZ0JvGIoX5RK+TsTW2p7eSaD79Y67L+56qWh5kRWyBz+UwhCJCyJfIYB/XZpakDInNT7M57/3lw\
P/GTCzSKW10ddekiqsVqrGT7g40pakfbZ2/GvinHQE8UWdcFlkcYcghlvPZeYtqAIbYCWtrrC59hxG\
YWk0QH4PVUejI91RrzrDXPnOusXqJixTDW6FKIQJ09/N9EGBTVJq3DfIbMGr+iThewgMvbFKeIiVi+\
Nj6G3py9X+OwAdOfLvtw5mWNDkpndy+Ot1SwoxRFC0j+0fGtuZjTOfEYMUfi8uY2FyZ28vcmVnaXN0\
cnkvc3JjL2dpdGh1Yi5jb20tMWVjYzYyOTlkYjllYzgyMy9tZDItMC45LjAvc3JjL2xpYi5ycwAABg\
AAAAAAAAABAAAAcAAAACgNEABGAAAAbwAAAA4AAAABI0VniavN7/7cuph2VDIQASNFZ4mrze/+3LqY\
dlQyEPDh0sMQMlR2mLrc/u/Nq4lnRSMBDx4tPAEjRWeJq83v/ty6mHZUMhDw4dLDY2FsbGVkIGBSZX\
N1bHQ6OnVud3JhcCgpYCBvbiBhbiBgRXJyYCB2YWx1ZQAUEBAATwAAADoAAAANAAAAFBAQAE8AAABB\
AAAADQAAABQQEABPAAAAhwAAABcAAAAUEBAATwAAAIsAAAAbAAAAFBAQAE8AAACEAAAACQAAANieBc\
EH1Xw2F91wMDlZDvcxC8D/ERVYaKeP+WSkT/q+Z+YJaoWuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN\
4FvYngXBXZ27ywfVfDYqKZpiF91wMFoBWZE5WQ732OwvFTELwP9nJjNnERVYaIdKtI6nj/lkDS4M26\
RP+r4dSLVHCMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IOUR9sPiuMaAWba71B\
+6vZgx95IX4TGc3gWygPEABNAAAA6wsAAA0AAAAvcnVzdGMvNTNjYjdiMDliMDBjYmVhODc1NGZmYj\
c4ZTdlM2NiNTIxY2I4YWY0Yi9saWJyYXJ5L2NvcmUvc3JjL3NsaWNlL21vZC5yc3dlIG5ldmVyIHVz\
ZSBpbnB1dF9sYXp5BgAAAAAAAAABAAAAcAAAAKwPEABHAAAAQQAAAAEAAAB+Ly5jYXJnby9yZWdpc3\
RyeS9zcmMvZ2l0aHViLmNvbS0xZWNjNjI5OWRiOWVjODIzL3NoYTMtMC45LjEvc3JjL2xpYi5ycwAU\
EBAATwAAABsAAAANAAAAFBAQAE8AAAAiAAAADQAAAH4vLmNhcmdvL3JlZ2lzdHJ5L3NyYy9naXRodW\
IuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvYmxvY2stYnVmZmVyLTAuOS4wL3NyYy9saWIucnMArA8QAEcA\
AABIAAAAAQAAAKwPEABHAAAATwAAAAEAAACsDxAARwAAAFYAAAABAAAArA8QAEcAAABmAAAAAQAAAK\
wPEABHAAAAbQAAAAEAAACsDxAARwAAAHQAAAABAAAArA8QAEcAAAB7AAAAAQAAAH4vLmNhcmdvL3Jl\
Z2lzdHJ5L3NyYy9naXRodWIuY29tLTFlY2M2Mjk5ZGI5ZWM4MjMvZ2VuZXJpYy1hcnJheS0wLjE0Lj\
Qvc3JjL2xpYi5ycwAAAGNhbGxlZCBgT3B0aW9uOjp1bndyYXAoKWAgb24gYSBgTm9uZWAgdmFsdWUA\
ZBEQABwAAADsAQAAHgAAAGxpYnJhcnkvc3RkL3NyYy9wYW5pY2tpbmcucnMEAAAAAAAAAG51bGwgcG\
9pbnRlciBwYXNzZWQgdG8gcnVzdHJlY3Vyc2l2ZSB1c2Ugb2YgYW4gb2JqZWN0IGRldGVjdGVkIHdo\
aWNoIHdvdWxkIGxlYWQgdG8gdW5zYWZlIGFsaWFzaW5nIGluIHJ1c3QApeWAgAAEbmFtZQGa5YCAAM\
cBADZ3YXNtX2JpbmRnZW46Ol9fd2JpbmRnZW5fc3RyaW5nX25ldzo6aDg1ZDAzZjY1ODJiZmMxZWQB\
MXdhc21fYmluZGdlbjo6X193YmluZGdlbl90aHJvdzo6aDU2NTkwZWE1ZmNkN2Q0YjMCM3dhc21fYm\
luZGdlbjo6X193YmluZGdlbl9yZXRocm93OjpoN2VmMjVmMjk2ZmZjNzFlMwMvc2hhMjo6c2hhNTEy\
Ojpzb2Z0Ojpjb21wcmVzczo6aGM0M2QxYjA4NzhlYWZiODkEL3NoYTI6OnNoYTI1Njo6c29mdDo6Y2\
9tcHJlc3M6Omg3NDdmNmFkOGQ2ZjNjNDliBQtjcmVhdGVfaGFzaAY2cmlwZW1kMzIwOjpibG9jazo6\
cHJvY2Vzc19tc2dfYmxvY2s6OmgzYjU4YjBkMjc1MDQwZDBkBzZyaXBlbWQxNjA6OmJsb2NrOjpwcm\
9jZXNzX21zZ19ibG9jazo6aGMyYmJkYTk3NDdlMTk1ZGQIK3NoYTE6OmNvbXByZXNzOjpjb21wcmVz\
czo6aGIyNWQwMDU3ZWM2MmM3ZWIJOmRsbWFsbG9jOjpkbG1hbGxvYzo6RGxtYWxsb2M8QT46Om1hbG\
xvYzo6aGRhNDhiMThmMWE5MzBiNzYKNmJsYWtlMzo6cG9ydGFibGU6OmNvbXByZXNzX2luX3BsYWNl\
OjpoNjNlMTI2ZmM5MzZkMzY3MAs/PEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+Oj\
p1cGRhdGU6Omg2ZGYwNWIxYmEzNDcxOGZiDCdtZDU6OnV0aWxzOjpjb21wcmVzczo6aGM5YTkyZTVh\
ZDhmZjE4YjINL21kMjo6TWQyU3RhdGU6OnByb2Nlc3NfYmxvY2s6Omg1MjgzMmZiYzEyNTFkYmNhDj\
BibGFrZTM6OmNvbXByZXNzX3N1YnRyZWVfd2lkZTo6aDI3ODEyZGE5NzM1OWE4MTAPL21kNDo6TWQ0\
U3RhdGU6OnByb2Nlc3NfYmxvY2s6Omg3NjNlY2ZhN2ZkMmE4MTM4EDhkbG1hbGxvYzo6ZGxtYWxsb2\
M6OkRsbWFsbG9jPEE+OjpmcmVlOjpoMGIzNjc5M2M5NzIxMjMzZhFBZGxtYWxsb2M6OmRsbWFsbG9j\
OjpEbG1hbGxvYzxBPjo6ZGlzcG9zZV9jaHVuazo6aGVjNWMyYWYzZDQyNDY2YmUSK2JsYWtlMzo6SG\
FzaGVyOjpmaW5hbGl6ZTo6aDNmZTdmOTY4MTNmZDFjZDYTIGtlY2Nhazo6ZjE2MDA6OmhiOGVmNmQ1\
M2VhMTEzODVkFCxjb3JlOjpmbXQ6OkZvcm1hdHRlcjo6cGFkOjpoY2M2ZGI3YjU5M2YzYjk2MxUOX1\
9ydXN0X3JlYWxsb2MWYTxzaGEyOjpzaGE1MTI6OlNoYTUxMiBhcyBkaWdlc3Q6OmZpeGVkOjpGaXhl\
ZE91dHB1dERpcnR5Pjo6ZmluYWxpemVfaW50b19kaXJ0eTo6aDFhZTU4YzExODk0ZjYxNTgXMWJsYW\
tlMzo6SGFzaGVyOjptZXJnZV9jdl9zdGFjazo6aDk4OGIxZjlkYWQ2YzIyYTQYRzxEIGFzIGRpZ2Vz\
dDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemVfcmVzZXQ6OmhhNjlmZmJjMjFiODIwZj\
NkGTVjb3JlOjpmbXQ6OkZvcm1hdHRlcjo6cGFkX2ludGVncmFsOjpoOGJkZWJmNmFmZTRjMDFlZBpH\
PEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZV9yZXNldDo6aGUyYT\
IzNjE1OTkxMDI5NGYbRzxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxp\
emVfcmVzZXQ6OmgxMWUzMDc2ZWZiZTZlYmM5HCNjb3JlOjpmbXQ6OndyaXRlOjpoZTljNGRjNmIwNT\
gwNDA5NR1hPHNoYTI6OnNoYTUxMjo6U2hhMzg0IGFzIGRpZ2VzdDo6Zml4ZWQ6OkZpeGVkT3V0cHV0\
RGlydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoYTYzMThiYzJjYjRmZjI4Yh5HPEQgYXMgZGlnZX\
N0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZV9yZXNldDo6aDg5ZTliNTc2M2Q2NDA3\
NDQfQjxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6Ym94X2Nsb25lOjpoMTg4Mz\
c4NTM3ZmE3ODdmNCBXPHNoYTE6OlNoYTEgYXMgZGlnZXN0OjpmaXhlZDo6Rml4ZWRPdXRwdXREaXJ0\
eT46OmZpbmFsaXplX2ludG9fZGlydHk6OmgzODg1MjgzMjA5MGFjNGY4IUc8RCBhcyBkaWdlc3Q6Om\
R5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmZpbmFsaXplX3Jlc2V0OjpoYzM3ZDYyNWQwN2IzNzhhNSI0\
Ymxha2UzOjpjb21wcmVzc19wYXJlbnRzX3BhcmFsbGVsOjpoMzQ1N2Y2YWI2NWU2NmQxNyNHPEQgYX\
MgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZV9yZXNldDo6aDRiNWVjM2Mz\
ZWM5YTRhYTUkRzxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemVfcm\
VzZXQ6OmhjOGI4MWVjNDM0MjdhMjUyJUE8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2Vz\
dD46OmZpbmFsaXplOjpoMmY0OTU5YjM5YzI1YWFiMiZBPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0Oj\
pEeW5EaWdlc3Q+OjpmaW5hbGl6ZTo6aDk3MDQ1NWZjZmJlYjZjNzknQTxEIGFzIGRpZ2VzdDo6ZHlu\
X2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemU6OmhiNGY4MTZiNGM2MGVlYmZhKEc8RCBhcyBkaW\
dlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmZpbmFsaXplX3Jlc2V0OjpoMTM4OWY4ZmRlZTlk\
OTY4YylHPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZV9yZXNldD\
o6aGNkYzQ5ODM2Njg5NWZlMDkqQTxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6\
ZmluYWxpemU6OmhlODUyOTk3YTUxOGRkNWVlK0E8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bk\
RpZ2VzdD46OmZpbmFsaXplOjpoZjI2OGUzMjNjMjA1MGEwMyxBPEQgYXMgZGlnZXN0OjpkeW5fZGln\
ZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZTo6aDg3NzdjMjFmNDhhZWJhZTctRzxEIGFzIGRpZ2VzdD\
o6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemVfcmVzZXQ6OmhjMDk2N2Y0MmU0MTQ2YzY3\
LmE8c2hhMjo6c2hhMjU2OjpTaGEyNTYgYXMgZGlnZXN0OjpmaXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT\
46OmZpbmFsaXplX2ludG9fZGlydHk6OmhhNWZjNDdiZWViZmI4NDQ5L0c8RCBhcyBkaWdlc3Q6OmR5\
bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmZpbmFsaXplX3Jlc2V0OjpoMGNlZmEzMzI0ZjQwYTIwMTBBPE\
QgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZTo6aGI2OTRlNTBkYTc0\
ODg0M2MxMnNoYTI6OnNoYTUxMjo6RW5naW5lNTEyOjpmaW5pc2g6Omg0N2M0YWIxNmI1ZWVlYzFlMk\
E8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmZpbmFsaXplOjpoZTJkMWVlMjc1\
OWVhMzE5ZjNHPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZV9yZX\
NldDo6aDcxMWU1YTcxOTY1MmI1NWU0RzxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0\
Pjo6ZmluYWxpemVfcmVzZXQ6OmhjNTFhMzQwMDY1NzczMDcyNUE8RCBhcyBkaWdlc3Q6OmR5bl9kaW\
dlc3Q6OkR5bkRpZ2VzdD46OmZpbmFsaXplOjpoNWJhOTRjZGY5NzA5NzYwNjZBPEQgYXMgZGlnZXN0\
OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZTo6aGU1ODcwZWM4MGY5YTA5NDA3QTxEIG\
FzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemU6OmhkMmY0OGZkMzU5M2Q4\
ZGIwOEI8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmJveF9jbG9uZTo6aGVlNT\
RkMGNjMjA5M2IwNGY5RzxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxp\
emVfcmVzZXQ6OmgxMzdhYWU1YTc3Nzg0MTI3Okc8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bk\
RpZ2VzdD46OmZpbmFsaXplX3Jlc2V0OjpoMWQzMjllZWMzNTkwNDFmMDs7PCZtdXQgVyBhcyBjb3Jl\
OjpmbXQ6OldyaXRlPjo6d3JpdGVfY2hhcjo6aDczMTIxZmJlMmE5OTBhMmU8LWJsYWtlMzo6Q2h1bm\
tTdGF0ZTo6dXBkYXRlOjpoZDU2Nzk3NzFlMWQxNDNkOT1hPHJpcGVtZDMyMDo6UmlwZW1kMzIwIGFz\
IGRpZ2VzdDo6Zml4ZWQ6OkZpeGVkT3V0cHV0RGlydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoMj\
k3ZmNmNmI3NjE1MTI2Nj5HPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW5h\
bGl6ZV9yZXNldDo6aDE1MjdmNTI1MDgxODUwNTE/RzxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RH\
luRGlnZXN0Pjo6ZmluYWxpemVfcmVzZXQ6OmhhMDMwMTYzNjliMjU5MmU3QGE8c2hhMjo6c2hhMjU2\
OjpTaGEyMjQgYXMgZGlnZXN0OjpmaXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZpbmFsaXplX2ludG\
9fZGlydHk6Omg5MTY1NTc5OTI1MDg2NTJjQT88RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRp\
Z2VzdD46OnVwZGF0ZTo6aDExMWVlOGZhMTY0ZGUwZjhCPzxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdD\
o6RHluRGlnZXN0Pjo6dXBkYXRlOjpoMTliYjU5NWFkMTljNGQ5OUM/PEQgYXMgZGlnZXN0OjpkeW5f\
ZGlnZXN0OjpEeW5EaWdlc3Q+Ojp1cGRhdGU6OmgyOGI4ZmZmMGM3M2NmMWQ1RD88RCBhcyBkaWdlc3\
Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OnVwZGF0ZTo6aDY4NzI4YWJiZmY4NTE0MDNFQTxEIGFz\
IGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemU6OmhhZmYyZmZjNDFlODFlMm\
NjRkE8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmZpbmFsaXplOjpoZmFiNjc3\
Y2M3MTViYWFkZUdBPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZT\
o6aDEzNmYwYTExOGMwOWQyZDhIL2NvcmU6OmZtdDo6bnVtOjppbXA6OmZtdF91NjQ6Omg0NDBlYzRi\
N2JmODRmM2UzSTJzaGEyOjpzaGEyNTY6OkVuZ2luZTI1Njo6ZmluaXNoOjpoMDc1ZThjOTBiZDExZm\
VlZkpuZ2VuZXJpY19hcnJheTo6aW1wbHM6OjxpbXBsIGNvcmU6OmNsb25lOjpDbG9uZSBmb3IgZ2Vu\
ZXJpY19hcnJheTo6R2VuZXJpY0FycmF5PFQsTj4+OjpjbG9uZTo6aDljMWI0YzA3NTg1NWU4MmNLWz\
xzaGEzOjpTaGEzXzUxMiBhcyBkaWdlc3Q6OmZpeGVkOjpGaXhlZE91dHB1dERpcnR5Pjo6ZmluYWxp\
emVfaW50b19kaXJ0eTo6aDgwYWI5YTVjZTAxMTYwYjBMXDxzaGEzOjpLZWNjYWs1MTIgYXMgZGlnZX\
N0OjpmaXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZpbmFsaXplX2ludG9fZGlydHk6OmhiZjhjMmU3\
N2JiMzRkZjJlTT48RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OnJlc2V0OjpoMj\
Q4ZmEzZmU1MGU3NTFlN05hPHJpcGVtZDE2MDo6UmlwZW1kMTYwIGFzIGRpZ2VzdDo6Zml4ZWQ6OkZp\
eGVkT3V0cHV0RGlydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoYmY1MzJjZWUwOTJiZDMxOU9CPE\
QgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+Ojpib3hfY2xvbmU6OmhjZTI3ZDQ2ZDY5\
MmQwYTk3UFU8bWQ1OjpNZDUgYXMgZGlnZXN0OjpmaXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZpbm\
FsaXplX2ludG9fZGlydHk6OmhmY2NhMTcyNWQ2MGQ0MjYxUVU8bWQ0OjpNZDQgYXMgZGlnZXN0Ojpm\
aXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZpbmFsaXplX2ludG9fZGlydHk6OmhhNzNmODUzODY0NT\
FjM2ExUj88RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OnVwZGF0ZTo6aGExMTU0\
MzY2YWViZWRjNTBTPzxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6dXBkYXRlOj\
poYzEyMTE4YWViM2YyY2UzOVQ/PEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+Ojp1\
cGRhdGU6Omg4NjcyMTI5MjY2NGVlZTEzVT88RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2\
VzdD46OnVwZGF0ZTo6aGY1ZDY2ZjBmOWE5Mjc5MTFWPzxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6\
RHluRGlnZXN0Pjo6dXBkYXRlOjpoMzUyMDk2YTNjYmI4Y2Q2MFdHPEQgYXMgZGlnZXN0OjpkeW5fZG\
lnZXN0OjpEeW5EaWdlc3Q+OjpmaW5hbGl6ZV9yZXNldDo6aDRkNzc4ZmRlMjNkNDQ1YzlYRzxEIGFz\
IGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemVfcmVzZXQ6OmgyYmE3MTQzMT\
BmZGViODQ0WUE8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmZpbmFsaXplOjpo\
NTJkMTliZGU5MDViZTc2MlpBPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpmaW\
5hbGl6ZTo6aGE5OTI5MjIzZTEwYzZiNzFbXDxzaGEzOjpLZWNjYWszODQgYXMgZGlnZXN0OjpmaXhl\
ZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZpbmFsaXplX2ludG9fZGlydHk6OmgxOTA1NGVkN2M3Y2FkNj\
cyXFs8c2hhMzo6U2hhM18zODQgYXMgZGlnZXN0OjpmaXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZp\
bmFsaXplX2ludG9fZGlydHk6OmgwOTQwMmY4MzM2OGQ5NzhkXT88RCBhcyBkaWdlc3Q6OmR5bl9kaW\
dlc3Q6OkR5bkRpZ2VzdD46OnVwZGF0ZTo6aDEzNjE4OGU5OWM5NmIwN2ZeQjxEIGFzIGRpZ2VzdDo6\
ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6Ym94X2Nsb25lOjpoM2IxYmI0ZDhlMGQ4Mjk4N19CPEQgYX\
MgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+Ojpib3hfY2xvbmU6Omg4OWUyZTJhODVjMTYz\
YjFiYD88RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OnVwZGF0ZTo6aDIwNmUwM2\
UwZmQ0ODVmMTNhQTxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6ZmluYWxpemU6\
OmhlZjY3MzMwYmU1MTNiNWIyYj88RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46On\
VwZGF0ZTo6aDJjMGQ1MDI0YjcxNzgzNTZjbmdlbmVyaWNfYXJyYXk6OmltcGxzOjo8aW1wbCBjb3Jl\
OjpjbG9uZTo6Q2xvbmUgZm9yIGdlbmVyaWNfYXJyYXk6OkdlbmVyaWNBcnJheTxULE4+Pjo6Y2xvbm\
U6Omg4MWE5ZTc1YjEyYTAxMjUxZEE8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46\
OmZpbmFsaXplOjpoM2IyZDA4MGRlNWVhMTBjNWVBPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW\
5EaWdlc3Q+OjpmaW5hbGl6ZTo6aDk5ODE3OGYyZGQwOGUzM2ZmXDxzaGEzOjpLZWNjYWsyMjQgYXMg\
ZGlnZXN0OjpmaXhlZDo6Rml4ZWRPdXRwdXREaXJ0eT46OmZpbmFsaXplX2ludG9fZGlydHk6Omg5NT\
UyNDlhMmVhYWYzZTdjZ1w8c2hhMzo6S2VjY2FrMjU2IGFzIGRpZ2VzdDo6Zml4ZWQ6OkZpeGVkT3V0\
cHV0RGlydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoMzVmNjYwZTNiZjZmZmZlMWhbPHNoYTM6Ol\
NoYTNfMjI0IGFzIGRpZ2VzdDo6Zml4ZWQ6OkZpeGVkT3V0cHV0RGlydHk+OjpmaW5hbGl6ZV9pbnRv\
X2RpcnR5OjpoNzk5NDFjMDQwNmEzNDI3Y2lbPHNoYTM6OlNoYTNfMjU2IGFzIGRpZ2VzdDo6Zml4ZW\
Q6OkZpeGVkT3V0cHV0RGlydHk+OjpmaW5hbGl6ZV9pbnRvX2RpcnR5OjpoOTk0MDEyZWEyNDJiOTkx\
N2pCPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+Ojpib3hfY2xvbmU6OmhhMjVkNj\
AwMWU0MDQ1YTA4a0I8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmJveF9jbG9u\
ZTo6aGUzNWM1NDcwMDE1YTFiMmNsTmFsbG9jOjpyYXdfdmVjOjpSYXdWZWM8VCxBPjo6cmVzZXJ2ZT\
o6ZG9fcmVzZXJ2ZV9hbmRfaGFuZGxlOjpoODYyNGFiNzE1MTQ5ZWViMm1uZ2VuZXJpY19hcnJheTo6\
aW1wbHM6OjxpbXBsIGNvcmU6OmNsb25lOjpDbG9uZSBmb3IgZ2VuZXJpY19hcnJheTo6R2VuZXJpY0\
FycmF5PFQsTj4+OjpjbG9uZTo6aDAxMTQ3OTBjM2U2ZmNlYjdubmdlbmVyaWNfYXJyYXk6OmltcGxz\
Ojo8aW1wbCBjb3JlOjpjbG9uZTo6Q2xvbmUgZm9yIGdlbmVyaWNfYXJyYXk6OkdlbmVyaWNBcnJheT\
xULE4+Pjo6Y2xvbmU6OmgyNDA0NDY5MTcyMzczOGQ0b25nZW5lcmljX2FycmF5OjppbXBsczo6PGlt\
cGwgY29yZTo6Y2xvbmU6OkNsb25lIGZvciBnZW5lcmljX2FycmF5OjpHZW5lcmljQXJyYXk8VCxOPj\
46OmNsb25lOjpoODdmY2Q0YzQ2N2RjNzc5N3BuZ2VuZXJpY19hcnJheTo6aW1wbHM6OjxpbXBsIGNv\
cmU6OmNsb25lOjpDbG9uZSBmb3IgZ2VuZXJpY19hcnJheTo6R2VuZXJpY0FycmF5PFQsTj4+OjpjbG\
9uZTo6aGE0ODgzZTE4MjY0ZmFiZGFxbmdlbmVyaWNfYXJyYXk6OmltcGxzOjo8aW1wbCBjb3JlOjpj\
bG9uZTo6Q2xvbmUgZm9yIGdlbmVyaWNfYXJyYXk6OkdlbmVyaWNBcnJheTxULE4+Pjo6Y2xvbmU6Om\
hjZGViNzdmN2Y3Yjg2MGI4ckI8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmJv\
eF9jbG9uZTo6aDM5MTQxZDI4NzM3YzhiYzFzQjxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRG\
lnZXN0Pjo6Ym94X2Nsb25lOjpoOTA4YzM0N2EyNTE3MDU0ZHRCPEQgYXMgZGlnZXN0OjpkeW5fZGln\
ZXN0OjpEeW5EaWdlc3Q+Ojpib3hfY2xvbmU6Omg5ZjUyNWI2OTNmOTcyMDVmdUI8RCBhcyBkaWdlc3\
Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmJveF9jbG9uZTo6aGE2YjY4MWMxZjhjMzVhOTZ2LmFs\
bG9jOjpyYXdfdmVjOjpmaW5pc2hfZ3Jvdzo6aDU1MTQ0YWZiYWZjYTUyMGR3QjxEIGFzIGRpZ2VzdD\
o6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6Ym94X2Nsb25lOjpoMzlmMWQ5YmU2NDA2MWE0Y3hCPEQg\
YXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+Ojpib3hfY2xvbmU6Omg1MTQ1OTQ3MjVkNz\
k2NGRmeUI8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OmJveF9jbG9uZTo6aDU5\
MTg4YmVhMWJlOTQ3Y2N6QjxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6Ym94X2\
Nsb25lOjpoNjdkOGJhN2JmY2IyNzc1MntCPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdl\
c3Q+Ojpib3hfY2xvbmU6OmhhYjJlZTQyNjYzMDdlNWZkfEI8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3\
Q6OkR5bkRpZ2VzdD46OmJveF9jbG9uZTo6aGNiMTg0ZmY3YTUwNTY5YTV9QjxEIGFzIGRpZ2VzdDo6\
ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6Ym94X2Nsb25lOjpoZDQ1ZDA2NzI2MDY5Nzc0YX5CPEQgYX\
MgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+Ojpib3hfY2xvbmU6OmhmZjdiN2Y3Y2Y5MmNm\
NTcxfy5jb3JlOjpyZXN1bHQ6OnVud3JhcF9mYWlsZWQ6Omg5YmY5OWJjYTg4YmEwNWRjgAFQPGFycm\
F5dmVjOjplcnJvcnM6OkNhcGFjaXR5RXJyb3I8VD4gYXMgY29yZTo6Zm10OjpEZWJ1Zz46OmZtdDo6\
aDFkNTg1OWMzYTVmMmEzMjSBAVA8YXJyYXl2ZWM6OmVycm9yczo6Q2FwYWNpdHlFcnJvcjxUPiBhcy\
Bjb3JlOjpmbXQ6OkRlYnVnPjo6Zm10OjpoYmYyNTk2ODRjMzZmYzQ0ZoIBPjxEIGFzIGRpZ2VzdDo6\
ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6cmVzZXQ6OmhiMjg3ZDY1ZDg4NzBjNDljgwE+PEQgYXMgZG\
lnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpyZXNldDo6aGI2NmU2Zjg0NzcyN2UyZWOEAUFj\
b3JlOjpzbGljZTo6aW5kZXg6OnNsaWNlX3N0YXJ0X2luZGV4X2xlbl9mYWlsOjpoZjg2NGRiMmY3MG\
NmZTEyZIUBP2NvcmU6OnNsaWNlOjppbmRleDo6c2xpY2VfZW5kX2luZGV4X2xlbl9mYWlsOjpoZDgx\
M2NkY2EwMGVkNTkwZIYBTmNvcmU6OnNsaWNlOjo8aW1wbCBbVF0+Ojpjb3B5X2Zyb21fc2xpY2U6Om\
xlbl9taXNtYXRjaF9mYWlsOjpoODU3Mjc3ZGYwMzg3N2ZmOIcBNmNvcmU6OnBhbmlja2luZzo6cGFu\
aWNfYm91bmRzX2NoZWNrOjpoYjE1MTc3ZTA2NzkyMzIxNYgBPWNvcmU6OnNsaWNlOjppbmRleDo6c2\
xpY2VfaW5kZXhfb3JkZXJfZmFpbDo6aGU1M2ZmMzYxNjAwYzhiZTGJATdnZW5lcmljX2FycmF5Ojpm\
cm9tX2l0ZXJfbGVuZ3RoX2ZhaWw6OmhjZTQ1MWY0ZTFiMTBiMzk2igE+PEQgYXMgZGlnZXN0OjpkeW\
5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpyZXNldDo6aDMyYmE3ZWY0NjIzNjZlNDiLATo8Jm11dCBXIGFz\
IGNvcmU6OmZtdDo6V3JpdGU+Ojp3cml0ZV9mbXQ6OmgzMGY1MjA1YjU0YjE4OGE4jAE3c3RkOjpwYW\
5pY2tpbmc6OnJ1c3RfcGFuaWNfd2l0aF9ob29rOjpoYmRiY2ViNWNkMTU4YmYxOY0BC2RpZ2VzdF9o\
YXNojgE6PCZtdXQgVyBhcyBjb3JlOjpmbXQ6OldyaXRlPjo6d3JpdGVfc3RyOjpoYmI3NTg3MzRkNW\
I0MTlkYY8BBGJjbXCQARNfX3diZ19kZW5vaGFzaF9mcmVlkQELdXBkYXRlX2hhc2iSAUNjb3JlOjpm\
bXQ6OkZvcm1hdHRlcjo6cGFkX2ludGVncmFsOjp3cml0ZV9wcmVmaXg6OmhiZjQ2MzQ3Y2VjY2NmNT\
NlkwE+PEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpyZXNldDo6aDlmNTBkZDky\
NWNjYTRiZGOUASljb3JlOjpwYW5pY2tpbmc6OnBhbmljOjpoNWJmZGZhYTNkYjlhNGI0YZUBPjxEIG\
FzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6cmVzZXQ6Omg0OTNjMzNjNzZlZjVkOGFk\
lgE+PEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpyZXNldDo6aGI4MWZlMmRmYz\
E4ZjA1OGSXAQZtZW1jcHmYARFydXN0X2JlZ2luX3Vud2luZJkBPjxEIGFzIGRpZ2VzdDo6ZHluX2Rp\
Z2VzdDo6RHluRGlnZXN0Pjo6cmVzZXQ6OmhjNWFlZDI0ZTg3ZjAwMjM5mgE+PEQgYXMgZGlnZXN0Oj\
pkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpyZXNldDo6aDI4NDQzNTUxMTE5Mzk2YjKbAS1jb3JlOjpw\
YW5pY2tpbmc6OnBhbmljX2ZtdDo6aDNhYjU0MTcxNTViN2JhM2KcAUlzdGQ6OnN5c19jb21tb246Om\
JhY2t0cmFjZTo6X19ydXN0X2VuZF9zaG9ydF9iYWNrdHJhY2U6OmhjNzYwODE2MWE0NjdjMDAynQEG\
bWVtc2V0ngERX193YmluZGdlbl9tYWxsb2OfAT48RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bk\
RpZ2VzdD46OnJlc2V0OjpoM2Q5MTYwNDRiMzhlOTAzOaABEl9fd2JpbmRnZW5fcmVhbGxvY6EBQ3N0\
ZDo6cGFuaWNraW5nOjpiZWdpbl9wYW5pY19oYW5kbGVyOjp7e2Nsb3N1cmV9fTo6aDk5OTViYjJmMG\
RlNGJiMziiATtjb3JlOjpwdHI6OmRyb3BfaW5fcGxhY2U8Ymxha2UzOjpIYXNoZXI+OjpoYmM0Yjkz\
YTU0Y2FjYzM1Y6MBRTxibG9ja19wYWRkaW5nOjpQYWRFcnJvciBhcyBjb3JlOjpmbXQ6OkRlYnVnPj\
o6Zm10OjpoODJjY2Y1Y2Q1ZWYxMjM2MaQBPjxjb3JlOjpmbXQ6OkVycm9yIGFzIGNvcmU6OmZtdDo6\
RGVidWc+OjpmbXQ6Omg5MmFkODFmMzJjNDQzNGQwpQEyY29yZTo6b3B0aW9uOjpPcHRpb248VD46On\
Vud3JhcDo6aDdiNTUxODMzMjE2Yzg4NjamATA8JlQgYXMgY29yZTo6Zm10OjpEZWJ1Zz46OmZtdDo6\
aDdiNDBkZDdlMTg5NjNhMjmnATI8JlQgYXMgY29yZTo6Zm10OjpEaXNwbGF5Pjo6Zm10OjpoOGE0Yj\
c0NGUwNDJjYWRlNagBTjxJIGFzIGNvcmU6Oml0ZXI6OnRyYWl0czo6Y29sbGVjdDo6SW50b0l0ZXJh\
dG9yPjo6aW50b19pdGVyOjpoOTdhMDEzZjljYmEyYjljYakBPjxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2\
VzdDo6RHluRGlnZXN0Pjo6cmVzZXQ6OmgyNjJmNjgzZjNiYTNjMWQxqgE+PEQgYXMgZGlnZXN0Ojpk\
eW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpyZXNldDo6aDI4NTc5ZDI0NDE5MDY2ZTOrAT48RCBhcyBkaW\
dlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46OnJlc2V0OjpoOGI0NWYwY2U5OGZlZmIzYawBPjxE\
IGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6cmVzZXQ6OmhhOWY4YzhiMDU3MTUyNm\
U3rQEPX193YmluZGdlbl9mcmVlrgE0YWxsb2M6OnJhd192ZWM6OmNhcGFjaXR5X292ZXJmbG93Ojpo\
NDA3ZTZjZDE3ZTJkYTViNa8BOWNvcmU6Om9wczo6ZnVuY3Rpb246OkZuT25jZTo6Y2FsbF9vbmNlOj\
poYjVlN2Y4Y2Y1Nzk5OWFkN7ABH19fd2JpbmRnZW5fYWRkX3RvX3N0YWNrX3BvaW50ZXKxATF3YXNt\
X2JpbmRnZW46Ol9fcnQ6OnRocm93X251bGw6OmhjOTdlYTYyNDJlZjE5ODc2sgEyd2FzbV9iaW5kZ2\
VuOjpfX3J0Ojpib3Jyb3dfZmFpbDo6aGVjMjk4OTI4NWFjZTYyY2SzAU5jb3JlOjpmbXQ6Om51bTo6\
aW1wOjo8aW1wbCBjb3JlOjpmbXQ6OkRpc3BsYXkgZm9yIHUzMj46OmZtdDo6aDY0NWY0NWE5MWU3MT\
VjODW0ASp3YXNtX2JpbmRnZW46OnRocm93X3N0cjo6aGZiZDk3MTE3NjVlZTdkMWS1ASp3YXNtX2Jp\
bmRnZW46OnRocm93X3ZhbDo6aGY5ZDMxMzhhYjBiYzAxMDe2ATE8VCBhcyBjb3JlOjphbnk6OkFueT\
46OnR5cGVfaWQ6OmgyOWRlYzgxMzgyZDNkNmE0twFEPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpE\
eW5EaWdlc3Q+OjpvdXRwdXRfc2l6ZTo6aDE4NWZiM2MzZDI5YWZhNGW4AUQ8RCBhcyBkaWdlc3Q6Om\
R5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46Om91dHB1dF9zaXplOjpoMTlkNTc3YjNmNzkwZTY5NLkBRDxE\
IGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6b3V0cHV0X3NpemU6Omg3MDZlZTQzNW\
Q0MWJjNjViugFEPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpvdXRwdXRfc2l6\
ZTo6aDcxZTY2Nzc2NWRiNWVkY2O7AUQ8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD\
46Om91dHB1dF9zaXplOjpoMzQzMWViNGQ5OWU3MTNmY7wBRDxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2Vz\
dDo6RHluRGlnZXN0Pjo6b3V0cHV0X3NpemU6Omg3OGFjNGIxODczNTZhNmI2vQFEPEQgYXMgZGlnZX\
N0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpvdXRwdXRfc2l6ZTo6aDViZThjNjllMDU5ODM5Zje+\
AUQ8RCBhcyBkaWdlc3Q6OmR5bl9kaWdlc3Q6OkR5bkRpZ2VzdD46Om91dHB1dF9zaXplOjpoNmNiNT\
RmMmI0NWE2OGQ2Nr8BRDxEIGFzIGRpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6b3V0cHV0\
X3NpemU6OmhhNDAyMjZlNmY4MzU1ZjI3wAFEPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaW\
dlc3Q+OjpvdXRwdXRfc2l6ZTo6aDJkOTEzYjllOWYzNThhYmPBAUQ8RCBhcyBkaWdlc3Q6OmR5bl9k\
aWdlc3Q6OkR5bkRpZ2VzdD46Om91dHB1dF9zaXplOjpoZDg0NzI3NGM0MDY3OTRkMcIBRDxEIGFzIG\
RpZ2VzdDo6ZHluX2RpZ2VzdDo6RHluRGlnZXN0Pjo6b3V0cHV0X3NpemU6Omg4MjUzN2Y2ZTdkNWJk\
ZmNhwwFEPEQgYXMgZGlnZXN0OjpkeW5fZGlnZXN0OjpEeW5EaWdlc3Q+OjpvdXRwdXRfc2l6ZTo6aG\
IwZWM2MGQ5YmI4YjE4NDTEAQpydXN0X3BhbmljxQE3c3RkOjphbGxvYzo6ZGVmYXVsdF9hbGxvY19l\
cnJvcl9ob29rOjpoMDZmYjkxMTY3MjYwOWRkN8YBb2NvcmU6OnB0cjo6ZHJvcF9pbl9wbGFjZTwmY2\
9yZTo6aXRlcjo6YWRhcHRlcnM6OmNvcGllZDo6Q29waWVkPGNvcmU6OnNsaWNlOjppdGVyOjpJdGVy\
PHU4Pj4+OjpoNTRmNjAzZDg5NDA0ZWEyMgDvgICAAAlwcm9kdWNlcnMCCGxhbmd1YWdlAQRSdXN0AA\
xwcm9jZXNzZWQtYnkDBXJ1c3RjHTEuNTMuMCAoNTNjYjdiMDliIDIwMjEtMDYtMTcpBndhbHJ1cwYw\
LjE5LjAMd2FzbS1iaW5kZ2VuBjAuMi43NA=="));
const wasmInstance1 = new WebAssembly.Instance(wasmModule1, imports1);
const wasm3 = wasmInstance1.exports;
const hexTable = new TextEncoder().encode("0123456789abcdef");
function errInvalidByte(__byte) {
    return new TypeError(`Invalid byte '${String.fromCharCode(__byte)}'`);
}
function errLength() {
    return new RangeError("Odd length hex string");
}
function fromHexChar(__byte) {
    if (48 <= __byte && __byte <= 57) return __byte - 48;
    if (97 <= __byte && __byte <= 102) return __byte - 97 + 10;
    if (65 <= __byte && __byte <= 70) return __byte - 65 + 10;
    throw errInvalidByte(__byte);
}
function encode2(src) {
    const dst = new Uint8Array(src.length * 2);
    for(let i4 = 0; i4 < dst.length; i4++){
        const v = src[i4];
        dst[i4 * 2] = hexTable[v >> 4];
        dst[i4 * 2 + 1] = hexTable[v & 15];
    }
    return dst;
}
function decode2(src) {
    const dst = new Uint8Array(src.length / 2);
    for(let i4 = 0; i4 < dst.length; i4++){
        const a = fromHexChar(src[i4 * 2]);
        const b = fromHexChar(src[i4 * 2 + 1]);
        dst[i4] = a << 4 | b;
    }
    if (src.length % 2 == 1) {
        fromHexChar(src[dst.length * 2]);
        throw errLength();
    }
    return dst;
}
class Hash {
    #hash;
    #digested;
    constructor(algorithm2){
        this.#hash = create_hash(algorithm2);
        this.#digested = false;
    }
    update(message) {
        let view;
        if (message instanceof Uint8Array) {
            view = message;
        } else if (typeof message === "string") {
            view = new TextEncoder().encode(message);
        } else if (ArrayBuffer.isView(message)) {
            view = new Uint8Array(message.buffer, message.byteOffset, message.byteLength);
        } else if (message instanceof ArrayBuffer) {
            view = new Uint8Array(message);
        } else {
            throw new Error("hash: `data` is invalid type");
        }
        const chunkSize = 65536;
        for(let offset = 0; offset < view.byteLength; offset += chunkSize){
            update_hash(this.#hash, new Uint8Array(view.buffer, view.byteOffset + offset, Math.min(65536, view.byteLength - offset)));
        }
        return this;
    }
    digest() {
        if (this.#digested) throw new Error("hash: already digested");
        this.#digested = true;
        return digest_hash(this.#hash);
    }
    toString(format = "hex") {
        const finalized = new Uint8Array(this.digest());
        switch(format){
            case "hex":
                return new TextDecoder().decode(encode2(finalized));
            case "base64":
                return encode1(finalized);
            default:
                throw new Error("hash: invalid format");
        }
    }
}
function createHash(algorithm3) {
    return new Hash(algorithm3);
}
function deferred1() {
    let methods2;
    const promise = new Promise((resolve3, reject)=>{
        methods2 = {
            resolve: resolve3,
            reject
        };
    });
    return Object.assign(promise, methods2);
}
const noop1 = ()=>{
};
class AsyncIterableClone1 {
    currentPromise;
    resolveCurrent = noop1;
    consumed;
    consume = noop1;
    constructor(){
        this.currentPromise = new Promise((resolve3)=>{
            this.resolveCurrent = resolve3;
        });
        this.consumed = new Promise((resolve3)=>{
            this.consume = resolve3;
        });
    }
    reset() {
        this.currentPromise = new Promise((resolve3)=>{
            this.resolveCurrent = resolve3;
        });
        this.consumed = new Promise((resolve3)=>{
            this.consume = resolve3;
        });
    }
    async next() {
        const res = await this.currentPromise;
        this.consume();
        this.reset();
        return res;
    }
    async push(res) {
        this.resolveCurrent(res);
        await this.consumed;
    }
    [Symbol.asyncIterator]() {
        return this;
    }
}
class DeadlineError1 extends Error {
    constructor(){
        super("Deadline");
        this.name = "DeadlineError";
    }
}
const ANSI_PATTERN1 = new RegExp([
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))", 
].join("|"), "g");
var DiffType1;
(function(DiffType2) {
    DiffType2["removed"] = "removed";
    DiffType2["common"] = "common";
    DiffType2["added"] = "added";
})(DiffType1 || (DiffType1 = {
}));
class AssertionError1 extends Error {
    constructor(message4){
        super(message4);
        this.name = "AssertionError";
    }
}
function assert2(expr, msg = "") {
    if (!expr) {
        throw new AssertionError1(msg);
    }
}
class DenoStdInternalError1 extends Error {
    constructor(message5){
        super(message5);
        this.name = "DenoStdInternalError";
    }
}
function assert3(expr, msg = "") {
    if (!expr) {
        throw new DenoStdInternalError1(msg);
    }
}
function copy5(src, dst, off = 0) {
    off = Math.max(0, Math.min(off, dst.byteLength));
    const dstBytesAvailable = dst.byteLength - off;
    if (src.byteLength > dstBytesAvailable) {
        src = src.subarray(0, dstBytesAvailable);
    }
    dst.set(src, off);
    return src.byteLength;
}
const MIN_READ1 = 32 * 1024;
const MAX_SIZE1 = 2 ** 32 - 2;
class Buffer2 {
    #buf;
    #off = 0;
    constructor(ab1){
        this.#buf = ab1 === undefined ? new Uint8Array(0) : new Uint8Array(ab1);
    }
    bytes(options = {
        copy: true
    }) {
        if (options.copy === false) return this.#buf.subarray(this.#off);
        return this.#buf.slice(this.#off);
    }
    empty() {
        return this.#buf.byteLength <= this.#off;
    }
    get length() {
        return this.#buf.byteLength - this.#off;
    }
    get capacity() {
        return this.#buf.buffer.byteLength;
    }
    truncate(n) {
        if (n === 0) {
            this.reset();
            return;
        }
        if (n < 0 || n > this.length) {
            throw Error("bytes.Buffer: truncation out of range");
        }
        this.#reslice(this.#off + n);
    }
    reset() {
        this.#reslice(0);
        this.#off = 0;
    }
     #tryGrowByReslice(n) {
        const l = this.#buf.byteLength;
        if (n <= this.capacity - l) {
            this.#reslice(l + n);
            return l;
        }
        return -1;
    }
     #reslice(len) {
        assert3(len <= this.#buf.buffer.byteLength);
        this.#buf = new Uint8Array(this.#buf.buffer, 0, len);
    }
    readSync(p) {
        if (this.empty()) {
            this.reset();
            if (p.byteLength === 0) {
                return 0;
            }
            return null;
        }
        const nread = copy5(this.#buf.subarray(this.#off), p);
        this.#off += nread;
        return nread;
    }
    read(p) {
        const rr = this.readSync(p);
        return Promise.resolve(rr);
    }
    writeSync(p) {
        const m = this.#grow(p.byteLength);
        return copy5(p, this.#buf, m);
    }
    write(p) {
        const n = this.writeSync(p);
        return Promise.resolve(n);
    }
     #grow(n) {
        const m = this.length;
        if (m === 0 && this.#off !== 0) {
            this.reset();
        }
        const i4 = this.#tryGrowByReslice(n);
        if (i4 >= 0) {
            return i4;
        }
        const c = this.capacity;
        if (n <= Math.floor(c / 2) - m) {
            copy5(this.#buf.subarray(this.#off), this.#buf);
        } else if (c + n > MAX_SIZE1) {
            throw new Error("The buffer cannot be grown beyond the maximum size.");
        } else {
            const buf = new Uint8Array(Math.min(2 * c + n, MAX_SIZE1));
            copy5(this.#buf.subarray(this.#off), buf);
            this.#buf = buf;
        }
        this.#off = 0;
        this.#reslice(Math.min(m + n, MAX_SIZE1));
        return m;
    }
    grow(n) {
        if (n < 0) {
            throw Error("Buffer.grow: negative count");
        }
        const m = this.#grow(n);
        this.#reslice(m);
    }
    async readFrom(r) {
        let n = 0;
        const tmp = new Uint8Array(MIN_READ1);
        while(true){
            const shouldGrow = this.capacity - this.length < MIN_READ1;
            const buf = shouldGrow ? tmp : new Uint8Array(this.#buf.buffer, this.length);
            const nread = await r.read(buf);
            if (nread === null) {
                return n;
            }
            if (shouldGrow) this.writeSync(buf.subarray(0, nread));
            else this.#reslice(this.length + nread);
            n += nread;
        }
    }
    readFromSync(r) {
        let n = 0;
        const tmp = new Uint8Array(MIN_READ1);
        while(true){
            const shouldGrow = this.capacity - this.length < MIN_READ1;
            const buf = shouldGrow ? tmp : new Uint8Array(this.#buf.buffer, this.length);
            const nread = r.readSync(buf);
            if (nread === null) {
                return n;
            }
            if (shouldGrow) this.writeSync(buf.subarray(0, nread));
            else this.#reslice(this.length + nread);
            n += nread;
        }
    }
}
async function writeAll1(w, arr) {
    let nwritten = 0;
    while(nwritten < arr.length){
        nwritten += await w.write(arr.subarray(nwritten));
    }
}
function writeAllSync1(w, arr) {
    let nwritten = 0;
    while(nwritten < arr.length){
        nwritten += w.writeSync(arr.subarray(nwritten));
    }
}
function notImplemented(msg) {
    const message6 = msg ? `Not implemented: ${msg}` : "Not implemented";
    throw new Error(message6);
}
function normalizeEncoding(enc) {
    if (enc == null || enc === "utf8" || enc === "utf-8") return "utf8";
    return slowCases(enc);
}
function slowCases(enc) {
    switch(enc.length){
        case 4:
            if (enc === "UTF8") return "utf8";
            if (enc === "ucs2" || enc === "UCS2") return "utf16le";
            enc = `${enc}`.toLowerCase();
            if (enc === "utf8") return "utf8";
            if (enc === "ucs2") return "utf16le";
            break;
        case 3:
            if (enc === "hex" || enc === "HEX" || `${enc}`.toLowerCase() === "hex") {
                return "hex";
            }
            break;
        case 5:
            if (enc === "ascii") return "ascii";
            if (enc === "ucs-2") return "utf16le";
            if (enc === "UTF-8") return "utf8";
            if (enc === "ASCII") return "ascii";
            if (enc === "UCS-2") return "utf16le";
            enc = `${enc}`.toLowerCase();
            if (enc === "utf-8") return "utf8";
            if (enc === "ascii") return "ascii";
            if (enc === "ucs-2") return "utf16le";
            break;
        case 6:
            if (enc === "base64") return "base64";
            if (enc === "latin1" || enc === "binary") return "latin1";
            if (enc === "BASE64") return "base64";
            if (enc === "LATIN1" || enc === "BINARY") return "latin1";
            enc = `${enc}`.toLowerCase();
            if (enc === "base64") return "base64";
            if (enc === "latin1" || enc === "binary") return "latin1";
            break;
        case 7:
            if (enc === "utf16le" || enc === "UTF16LE" || `${enc}`.toLowerCase() === "utf16le") {
                return "utf16le";
            }
            break;
        case 8:
            if (enc === "utf-16le" || enc === "UTF-16LE" || `${enc}`.toLowerCase() === "utf-16le") {
                return "utf16le";
            }
            break;
        default:
            if (enc === "") return "utf8";
    }
}
const notImplementedEncodings = [
    "ascii",
    "binary",
    "latin1",
    "ucs2",
    "utf16le", 
];
function checkEncoding(encoding = "utf8", strict = true) {
    if (typeof encoding !== "string" || strict && encoding === "") {
        if (!strict) return "utf8";
        throw new TypeError(`Unkown encoding: ${encoding}`);
    }
    const normalized = normalizeEncoding(encoding);
    if (normalized === undefined) {
        throw new TypeError(`Unkown encoding: ${encoding}`);
    }
    if (notImplementedEncodings.includes(encoding)) {
        notImplemented(`"${encoding}" encoding`);
    }
    return normalized;
}
const encodingOps = {
    utf8: {
        byteLength: (string)=>new TextEncoder().encode(string).byteLength
    },
    ucs2: {
        byteLength: (string)=>string.length * 2
    },
    utf16le: {
        byteLength: (string)=>string.length * 2
    },
    latin1: {
        byteLength: (string)=>string.length
    },
    ascii: {
        byteLength: (string)=>string.length
    },
    base64: {
        byteLength: (string)=>base64ByteLength(string, string.length)
    },
    hex: {
        byteLength: (string)=>string.length >>> 1
    }
};
function base64ByteLength(str1, bytes) {
    if (str1.charCodeAt(bytes - 1) === 61) bytes--;
    if (bytes > 1 && str1.charCodeAt(bytes - 1) === 61) bytes--;
    return bytes * 3 >>> 2;
}
class Buffer3 extends Uint8Array {
    static alloc(size, fill, encoding = "utf8") {
        if (typeof size !== "number") {
            throw new TypeError(`The "size" argument must be of type number. Received type ${typeof size}`);
        }
        const buf = new Buffer3(size);
        if (size === 0) return buf;
        let bufFill;
        if (typeof fill === "string") {
            const clearEncoding = checkEncoding(encoding);
            if (typeof fill === "string" && fill.length === 1 && clearEncoding === "utf8") {
                buf.fill(fill.charCodeAt(0));
            } else bufFill = Buffer3.from(fill, clearEncoding);
        } else if (typeof fill === "number") {
            buf.fill(fill);
        } else if (fill instanceof Uint8Array) {
            if (fill.length === 0) {
                throw new TypeError(`The argument "value" is invalid. Received ${fill.constructor.name} []`);
            }
            bufFill = fill;
        }
        if (bufFill) {
            if (bufFill.length > buf.length) {
                bufFill = bufFill.subarray(0, buf.length);
            }
            let offset = 0;
            while(offset < size){
                buf.set(bufFill, offset);
                offset += bufFill.length;
                if (offset + bufFill.length >= size) break;
            }
            if (offset !== size) {
                buf.set(bufFill.subarray(0, size - offset), offset);
            }
        }
        return buf;
    }
    static allocUnsafe(size) {
        return new Buffer3(size);
    }
    static byteLength(string, encoding = "utf8") {
        if (typeof string != "string") return string.byteLength;
        encoding = normalizeEncoding(encoding) || "utf8";
        return encodingOps[encoding].byteLength(string);
    }
    static concat(list, totalLength) {
        if (totalLength == undefined) {
            totalLength = 0;
            for (const buf of list){
                totalLength += buf.length;
            }
        }
        const buffer1 = Buffer3.allocUnsafe(totalLength);
        let pos = 0;
        for (const item of list){
            let buf;
            if (!(item instanceof Buffer3)) {
                buf = Buffer3.from(item);
            } else {
                buf = item;
            }
            buf.copy(buffer1, pos);
            pos += buf.length;
        }
        return buffer1;
    }
    static from(value, offsetOrEncoding, length) {
        const offset = typeof offsetOrEncoding === "string" ? undefined : offsetOrEncoding;
        let encoding = typeof offsetOrEncoding === "string" ? offsetOrEncoding : undefined;
        if (typeof value == "string") {
            encoding = checkEncoding(encoding, false);
            if (encoding === "hex") {
                return new Buffer3(decode2(new TextEncoder().encode(value)).buffer);
            }
            if (encoding === "base64") return new Buffer3(decode1(value).buffer);
            return new Buffer3(new TextEncoder().encode(value).buffer);
        }
        return new Buffer3(value, offset, length);
    }
    static isBuffer(obj) {
        return obj instanceof Buffer3;
    }
    static isEncoding(encoding) {
        return typeof encoding === "string" && encoding.length !== 0 && normalizeEncoding(encoding) !== undefined;
    }
    copy(targetBuffer, targetStart = 0, sourceStart = 0, sourceEnd = this.length) {
        const sourceBuffer = this.subarray(sourceStart, sourceEnd).subarray(0, Math.max(0, targetBuffer.length - targetStart));
        if (sourceBuffer.length === 0) return 0;
        targetBuffer.set(sourceBuffer, targetStart);
        return sourceBuffer.length;
    }
    equals(otherBuffer) {
        if (!(otherBuffer instanceof Uint8Array)) {
            throw new TypeError(`The "otherBuffer" argument must be an instance of Buffer or Uint8Array. Received type ${typeof otherBuffer}`);
        }
        if (this === otherBuffer) return true;
        if (this.byteLength !== otherBuffer.byteLength) return false;
        for(let i4 = 0; i4 < this.length; i4++){
            if (this[i4] !== otherBuffer[i4]) return false;
        }
        return true;
    }
    readBigInt64BE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getBigInt64(offset);
    }
    readBigInt64LE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getBigInt64(offset, true);
    }
    readBigUInt64BE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getBigUint64(offset);
    }
    readBigUInt64LE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getBigUint64(offset, true);
    }
    readDoubleBE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getFloat64(offset);
    }
    readDoubleLE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getFloat64(offset, true);
    }
    readFloatBE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getFloat32(offset);
    }
    readFloatLE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getFloat32(offset, true);
    }
    readInt8(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getInt8(offset);
    }
    readInt16BE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getInt16(offset);
    }
    readInt16LE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getInt16(offset, true);
    }
    readInt32BE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getInt32(offset);
    }
    readInt32LE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getInt32(offset, true);
    }
    readUInt8(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getUint8(offset);
    }
    readUInt16BE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getUint16(offset);
    }
    readUInt16LE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getUint16(offset, true);
    }
    readUInt32BE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getUint32(offset);
    }
    readUInt32LE(offset = 0) {
        return new DataView(this.buffer, this.byteOffset, this.byteLength).getUint32(offset, true);
    }
    slice(begin = 0, end = this.length) {
        return this.subarray(begin, end);
    }
    toJSON() {
        return {
            type: "Buffer",
            data: Array.from(this)
        };
    }
    toString(encoding = "utf8", start = 0, end = this.length) {
        encoding = checkEncoding(encoding);
        const b = this.subarray(start, end);
        if (encoding === "hex") return new TextDecoder().decode(encode2(b));
        if (encoding === "base64") return encode1(b.buffer);
        return new TextDecoder(encoding).decode(b);
    }
    write(string, offset = 0, length = this.length) {
        return new TextEncoder().encodeInto(string, this.subarray(offset, offset + length)).written;
    }
    writeBigInt64BE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setBigInt64(offset, value);
        return offset + 4;
    }
    writeBigInt64LE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setBigInt64(offset, value, true);
        return offset + 4;
    }
    writeBigUInt64BE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setBigUint64(offset, value);
        return offset + 4;
    }
    writeBigUInt64LE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setBigUint64(offset, value, true);
        return offset + 4;
    }
    writeDoubleBE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setFloat64(offset, value);
        return offset + 8;
    }
    writeDoubleLE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setFloat64(offset, value, true);
        return offset + 8;
    }
    writeFloatBE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setFloat32(offset, value);
        return offset + 4;
    }
    writeFloatLE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setFloat32(offset, value, true);
        return offset + 4;
    }
    writeInt8(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setInt8(offset, value);
        return offset + 1;
    }
    writeInt16BE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setInt16(offset, value);
        return offset + 2;
    }
    writeInt16LE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setInt16(offset, value, true);
        return offset + 2;
    }
    writeInt32BE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setUint32(offset, value);
        return offset + 4;
    }
    writeInt32LE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setInt32(offset, value, true);
        return offset + 4;
    }
    writeUInt8(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setUint8(offset, value);
        return offset + 1;
    }
    writeUInt16BE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setUint16(offset, value);
        return offset + 2;
    }
    writeUInt16LE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setUint16(offset, value, true);
        return offset + 2;
    }
    writeUInt32BE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setUint32(offset, value);
        return offset + 4;
    }
    writeUInt32LE(value, offset = 0) {
        new DataView(this.buffer, this.byteOffset, this.byteLength).setUint32(offset, value, true);
        return offset + 4;
    }
}
const MAX_ALLOC = Math.pow(2, 30) - 1;
function createHasher(alg) {
    let normalizedAlg;
    if (alg === "rmd160") {
        normalizedAlg = "ripemd160";
    } else {
        normalizedAlg = alg;
    }
    return (value8)=>Buffer3.from(createHash(normalizedAlg).update(value8).digest())
    ;
}
function getZeroes(zeros) {
    return Buffer3.alloc(zeros);
}
const sizes = {
    md5: 16,
    sha1: 20,
    sha224: 28,
    sha256: 32,
    sha384: 48,
    sha512: 64,
    rmd160: 20,
    ripemd160: 20
};
function toBuffer(bufferable) {
    if (bufferable instanceof Uint8Array || typeof bufferable === "string") {
        return Buffer3.from(bufferable);
    } else {
        return Buffer3.from(bufferable.buffer);
    }
}
class Hmac {
    hash;
    ipad1;
    opad;
    alg;
    blocksize;
    size;
    ipad2;
    constructor(alg, key7, saltLen){
        this.hash = createHasher(alg);
        const blocksize = alg === "sha512" || alg === "sha384" ? 128 : 64;
        if (key7.length > blocksize) {
            key7 = this.hash(key7);
        } else if (key7.length < blocksize) {
            key7 = Buffer3.concat([
                key7,
                getZeroes(blocksize - key7.length)
            ], blocksize);
        }
        const ipad2 = Buffer3.allocUnsafe(blocksize + sizes[alg]);
        const opad = Buffer3.allocUnsafe(blocksize + sizes[alg]);
        for(let i4 = 0; i4 < blocksize; i4++){
            ipad2[i4] = key7[i4] ^ 54;
            opad[i4] = key7[i4] ^ 92;
        }
        const ipad1 = Buffer3.allocUnsafe(blocksize + saltLen + 4);
        ipad2.copy(ipad1, 0, 0, blocksize);
        this.ipad1 = ipad1;
        this.ipad2 = ipad2;
        this.opad = opad;
        this.alg = alg;
        this.blocksize = blocksize;
        this.size = sizes[alg];
    }
    run(data, ipad) {
        data.copy(ipad, this.blocksize);
        const h = this.hash(ipad);
        h.copy(this.opad, this.blocksize);
        return this.hash(this.opad);
    }
}
function pbkdf2Sync(password, salt, iterations, keylen, digest2 = "sha1") {
    if (typeof iterations !== "number" || iterations < 0) {
        throw new TypeError("Bad iterations");
    }
    if (typeof keylen !== "number" || keylen < 0 || keylen > MAX_ALLOC) {
        throw new TypeError("Bad key length");
    }
    const bufferedPassword = toBuffer(password);
    const bufferedSalt = toBuffer(salt);
    const hmac = new Hmac(digest2, bufferedPassword, bufferedSalt.length);
    const DK = Buffer3.allocUnsafe(keylen);
    const block1 = Buffer3.allocUnsafe(bufferedSalt.length + 4);
    bufferedSalt.copy(block1, 0, 0, bufferedSalt.length);
    let destPos = 0;
    const hLen = sizes[digest2];
    const l = Math.ceil(keylen / hLen);
    for(let i5 = 1; i5 <= l; i5++){
        block1.writeUInt32BE(i5, bufferedSalt.length);
        const T = hmac.run(block1, hmac.ipad1);
        let U = T;
        for(let j = 1; j < iterations; j++){
            U = hmac.run(U, hmac.ipad2);
            for(let k = 0; k < hLen; k++)T[k] ^= U[k];
        }
        T.copy(DK, destPos);
        destPos += hLen;
    }
    return DK;
}
const HEX_CHARS = "0123456789abcdef".split("");
const EXTRA = [
    -2147483648,
    8388608,
    32768,
    128
];
const SHIFT = [
    24,
    16,
    8,
    0
];
const blocks = [];
class Sha1 {
    #blocks;
    #block;
    #start;
    #bytes;
    #hBytes;
    #finalized;
    #hashed;
    #h0 = 1732584193;
    #h1 = 4023233417;
    #h2 = 2562383102;
    #h3 = 271733878;
    #h4 = 3285377520;
    #lastByteIndex = 0;
    constructor(sharedMemory1 = false){
        this.init(sharedMemory1);
    }
    init(sharedMemory) {
        if (sharedMemory) {
            blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
            this.#blocks = blocks;
        } else {
            this.#blocks = [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ];
        }
        this.#h0 = 1732584193;
        this.#h1 = 4023233417;
        this.#h2 = 2562383102;
        this.#h3 = 271733878;
        this.#h4 = 3285377520;
        this.#block = this.#start = this.#bytes = this.#hBytes = 0;
        this.#finalized = this.#hashed = false;
    }
    update(message) {
        if (this.#finalized) {
            return this;
        }
        let msg;
        if (message instanceof ArrayBuffer) {
            msg = new Uint8Array(message);
        } else {
            msg = message;
        }
        let index = 0;
        const length = msg.length;
        const blocks1 = this.#blocks;
        while(index < length){
            let i5;
            if (this.#hashed) {
                this.#hashed = false;
                blocks1[0] = this.#block;
                blocks1[16] = blocks1[1] = blocks1[2] = blocks1[3] = blocks1[4] = blocks1[5] = blocks1[6] = blocks1[7] = blocks1[8] = blocks1[9] = blocks1[10] = blocks1[11] = blocks1[12] = blocks1[13] = blocks1[14] = blocks1[15] = 0;
            }
            if (typeof msg !== "string") {
                for(i5 = this.#start; index < length && i5 < 64; ++index){
                    blocks1[i5 >> 2] |= msg[index] << SHIFT[(i5++) & 3];
                }
            } else {
                for(i5 = this.#start; index < length && i5 < 64; ++index){
                    let code1 = msg.charCodeAt(index);
                    if (code1 < 128) {
                        blocks1[i5 >> 2] |= code1 << SHIFT[(i5++) & 3];
                    } else if (code1 < 2048) {
                        blocks1[i5 >> 2] |= (192 | code1 >> 6) << SHIFT[(i5++) & 3];
                        blocks1[i5 >> 2] |= (128 | code1 & 63) << SHIFT[(i5++) & 3];
                    } else if (code1 < 55296 || code1 >= 57344) {
                        blocks1[i5 >> 2] |= (224 | code1 >> 12) << SHIFT[(i5++) & 3];
                        blocks1[i5 >> 2] |= (128 | code1 >> 6 & 63) << SHIFT[(i5++) & 3];
                        blocks1[i5 >> 2] |= (128 | code1 & 63) << SHIFT[(i5++) & 3];
                    } else {
                        code1 = 65536 + ((code1 & 1023) << 10 | msg.charCodeAt(++index) & 1023);
                        blocks1[i5 >> 2] |= (240 | code1 >> 18) << SHIFT[(i5++) & 3];
                        blocks1[i5 >> 2] |= (128 | code1 >> 12 & 63) << SHIFT[(i5++) & 3];
                        blocks1[i5 >> 2] |= (128 | code1 >> 6 & 63) << SHIFT[(i5++) & 3];
                        blocks1[i5 >> 2] |= (128 | code1 & 63) << SHIFT[(i5++) & 3];
                    }
                }
            }
            this.#lastByteIndex = i5;
            this.#bytes += i5 - this.#start;
            if (i5 >= 64) {
                this.#block = blocks1[16];
                this.#start = i5 - 64;
                this.hash();
                this.#hashed = true;
            } else {
                this.#start = i5;
            }
        }
        if (this.#bytes > 4294967295) {
            this.#hBytes += this.#bytes / 4294967296 >>> 0;
            this.#bytes = this.#bytes >>> 0;
        }
        return this;
    }
    finalize() {
        if (this.#finalized) {
            return;
        }
        this.#finalized = true;
        const blocks1 = this.#blocks;
        const i5 = this.#lastByteIndex;
        blocks1[16] = this.#block;
        blocks1[i5 >> 2] |= EXTRA[i5 & 3];
        this.#block = blocks1[16];
        if (i5 >= 56) {
            if (!this.#hashed) {
                this.hash();
            }
            blocks1[0] = this.#block;
            blocks1[16] = blocks1[1] = blocks1[2] = blocks1[3] = blocks1[4] = blocks1[5] = blocks1[6] = blocks1[7] = blocks1[8] = blocks1[9] = blocks1[10] = blocks1[11] = blocks1[12] = blocks1[13] = blocks1[14] = blocks1[15] = 0;
        }
        blocks1[14] = this.#hBytes << 3 | this.#bytes >>> 29;
        blocks1[15] = this.#bytes << 3;
        this.hash();
    }
    hash() {
        let a = this.#h0;
        let b = this.#h1;
        let c = this.#h2;
        let d = this.#h3;
        let e = this.#h4;
        let f;
        let j;
        let t;
        const blocks1 = this.#blocks;
        for(j = 16; j < 80; ++j){
            t = blocks1[j - 3] ^ blocks1[j - 8] ^ blocks1[j - 14] ^ blocks1[j - 16];
            blocks1[j] = t << 1 | t >>> 31;
        }
        for(j = 0; j < 20; j += 5){
            f = b & c | ~b & d;
            t = a << 5 | a >>> 27;
            e = t + f + e + 1518500249 + blocks1[j] >>> 0;
            b = b << 30 | b >>> 2;
            f = a & b | ~a & c;
            t = e << 5 | e >>> 27;
            d = t + f + d + 1518500249 + blocks1[j + 1] >>> 0;
            a = a << 30 | a >>> 2;
            f = e & a | ~e & b;
            t = d << 5 | d >>> 27;
            c = t + f + c + 1518500249 + blocks1[j + 2] >>> 0;
            e = e << 30 | e >>> 2;
            f = d & e | ~d & a;
            t = c << 5 | c >>> 27;
            b = t + f + b + 1518500249 + blocks1[j + 3] >>> 0;
            d = d << 30 | d >>> 2;
            f = c & d | ~c & e;
            t = b << 5 | b >>> 27;
            a = t + f + a + 1518500249 + blocks1[j + 4] >>> 0;
            c = c << 30 | c >>> 2;
        }
        for(; j < 40; j += 5){
            f = b ^ c ^ d;
            t = a << 5 | a >>> 27;
            e = t + f + e + 1859775393 + blocks1[j] >>> 0;
            b = b << 30 | b >>> 2;
            f = a ^ b ^ c;
            t = e << 5 | e >>> 27;
            d = t + f + d + 1859775393 + blocks1[j + 1] >>> 0;
            a = a << 30 | a >>> 2;
            f = e ^ a ^ b;
            t = d << 5 | d >>> 27;
            c = t + f + c + 1859775393 + blocks1[j + 2] >>> 0;
            e = e << 30 | e >>> 2;
            f = d ^ e ^ a;
            t = c << 5 | c >>> 27;
            b = t + f + b + 1859775393 + blocks1[j + 3] >>> 0;
            d = d << 30 | d >>> 2;
            f = c ^ d ^ e;
            t = b << 5 | b >>> 27;
            a = t + f + a + 1859775393 + blocks1[j + 4] >>> 0;
            c = c << 30 | c >>> 2;
        }
        for(; j < 60; j += 5){
            f = b & c | b & d | c & d;
            t = a << 5 | a >>> 27;
            e = t + f + e - 1894007588 + blocks1[j] >>> 0;
            b = b << 30 | b >>> 2;
            f = a & b | a & c | b & c;
            t = e << 5 | e >>> 27;
            d = t + f + d - 1894007588 + blocks1[j + 1] >>> 0;
            a = a << 30 | a >>> 2;
            f = e & a | e & b | a & b;
            t = d << 5 | d >>> 27;
            c = t + f + c - 1894007588 + blocks1[j + 2] >>> 0;
            e = e << 30 | e >>> 2;
            f = d & e | d & a | e & a;
            t = c << 5 | c >>> 27;
            b = t + f + b - 1894007588 + blocks1[j + 3] >>> 0;
            d = d << 30 | d >>> 2;
            f = c & d | c & e | d & e;
            t = b << 5 | b >>> 27;
            a = t + f + a - 1894007588 + blocks1[j + 4] >>> 0;
            c = c << 30 | c >>> 2;
        }
        for(; j < 80; j += 5){
            f = b ^ c ^ d;
            t = a << 5 | a >>> 27;
            e = t + f + e - 899497514 + blocks1[j] >>> 0;
            b = b << 30 | b >>> 2;
            f = a ^ b ^ c;
            t = e << 5 | e >>> 27;
            d = t + f + d - 899497514 + blocks1[j + 1] >>> 0;
            a = a << 30 | a >>> 2;
            f = e ^ a ^ b;
            t = d << 5 | d >>> 27;
            c = t + f + c - 899497514 + blocks1[j + 2] >>> 0;
            e = e << 30 | e >>> 2;
            f = d ^ e ^ a;
            t = c << 5 | c >>> 27;
            b = t + f + b - 899497514 + blocks1[j + 3] >>> 0;
            d = d << 30 | d >>> 2;
            f = c ^ d ^ e;
            t = b << 5 | b >>> 27;
            a = t + f + a - 899497514 + blocks1[j + 4] >>> 0;
            c = c << 30 | c >>> 2;
        }
        this.#h0 = this.#h0 + a >>> 0;
        this.#h1 = this.#h1 + b >>> 0;
        this.#h2 = this.#h2 + c >>> 0;
        this.#h3 = this.#h3 + d >>> 0;
        this.#h4 = this.#h4 + e >>> 0;
    }
    hex() {
        this.finalize();
        const h0 = this.#h0;
        const h1 = this.#h1;
        const h2 = this.#h2;
        const h3 = this.#h3;
        const h4 = this.#h4;
        return HEX_CHARS[h0 >> 28 & 15] + HEX_CHARS[h0 >> 24 & 15] + HEX_CHARS[h0 >> 20 & 15] + HEX_CHARS[h0 >> 16 & 15] + HEX_CHARS[h0 >> 12 & 15] + HEX_CHARS[h0 >> 8 & 15] + HEX_CHARS[h0 >> 4 & 15] + HEX_CHARS[h0 & 15] + HEX_CHARS[h1 >> 28 & 15] + HEX_CHARS[h1 >> 24 & 15] + HEX_CHARS[h1 >> 20 & 15] + HEX_CHARS[h1 >> 16 & 15] + HEX_CHARS[h1 >> 12 & 15] + HEX_CHARS[h1 >> 8 & 15] + HEX_CHARS[h1 >> 4 & 15] + HEX_CHARS[h1 & 15] + HEX_CHARS[h2 >> 28 & 15] + HEX_CHARS[h2 >> 24 & 15] + HEX_CHARS[h2 >> 20 & 15] + HEX_CHARS[h2 >> 16 & 15] + HEX_CHARS[h2 >> 12 & 15] + HEX_CHARS[h2 >> 8 & 15] + HEX_CHARS[h2 >> 4 & 15] + HEX_CHARS[h2 & 15] + HEX_CHARS[h3 >> 28 & 15] + HEX_CHARS[h3 >> 24 & 15] + HEX_CHARS[h3 >> 20 & 15] + HEX_CHARS[h3 >> 16 & 15] + HEX_CHARS[h3 >> 12 & 15] + HEX_CHARS[h3 >> 8 & 15] + HEX_CHARS[h3 >> 4 & 15] + HEX_CHARS[h3 & 15] + HEX_CHARS[h4 >> 28 & 15] + HEX_CHARS[h4 >> 24 & 15] + HEX_CHARS[h4 >> 20 & 15] + HEX_CHARS[h4 >> 16 & 15] + HEX_CHARS[h4 >> 12 & 15] + HEX_CHARS[h4 >> 8 & 15] + HEX_CHARS[h4 >> 4 & 15] + HEX_CHARS[h4 & 15];
    }
    toString() {
        return this.hex();
    }
    digest() {
        this.finalize();
        const h0 = this.#h0;
        const h1 = this.#h1;
        const h2 = this.#h2;
        const h3 = this.#h3;
        const h4 = this.#h4;
        return [
            h0 >> 24 & 255,
            h0 >> 16 & 255,
            h0 >> 8 & 255,
            h0 & 255,
            h1 >> 24 & 255,
            h1 >> 16 & 255,
            h1 >> 8 & 255,
            h1 & 255,
            h2 >> 24 & 255,
            h2 >> 16 & 255,
            h2 >> 8 & 255,
            h2 & 255,
            h3 >> 24 & 255,
            h3 >> 16 & 255,
            h3 >> 8 & 255,
            h3 & 255,
            h4 >> 24 & 255,
            h4 >> 16 & 255,
            h4 >> 8 & 255,
            h4 & 255, 
        ];
    }
    array() {
        return this.digest();
    }
    arrayBuffer() {
        this.finalize();
        const buffer1 = new ArrayBuffer(20);
        const dataView = new DataView(buffer1);
        dataView.setUint32(0, this.#h0);
        dataView.setUint32(4, this.#h1);
        dataView.setUint32(8, this.#h2);
        dataView.setUint32(12, this.#h3);
        dataView.setUint32(16, this.#h4);
        return buffer1;
    }
}
class HmacSha1 extends Sha1 {
    #sharedMemory;
    #inner;
    #oKeyPad;
    constructor(secretKey, sharedMemory2 = false){
        super(sharedMemory2);
        let key8;
        if (typeof secretKey === "string") {
            const bytes = [];
            const length = secretKey.length;
            let index = 0;
            for(let i5 = 0; i5 < length; i5++){
                let code1 = secretKey.charCodeAt(i5);
                if (code1 < 128) {
                    bytes[index++] = code1;
                } else if (code1 < 2048) {
                    bytes[index++] = 192 | code1 >> 6;
                    bytes[index++] = 128 | code1 & 63;
                } else if (code1 < 55296 || code1 >= 57344) {
                    bytes[index++] = 224 | code1 >> 12;
                    bytes[index++] = 128 | code1 >> 6 & 63;
                    bytes[index++] = 128 | code1 & 63;
                } else {
                    code1 = 65536 + ((code1 & 1023) << 10 | secretKey.charCodeAt(++i5) & 1023);
                    bytes[index++] = 240 | code1 >> 18;
                    bytes[index++] = 128 | code1 >> 12 & 63;
                    bytes[index++] = 128 | code1 >> 6 & 63;
                    bytes[index++] = 128 | code1 & 63;
                }
            }
            key8 = bytes;
        } else {
            if (secretKey instanceof ArrayBuffer) {
                key8 = new Uint8Array(secretKey);
            } else {
                key8 = secretKey;
            }
        }
        if (key8.length > 64) {
            key8 = new Sha1(true).update(key8).array();
        }
        const oKeyPad = [];
        const iKeyPad = [];
        for(let i5 = 0; i5 < 64; i5++){
            const b = key8[i5] || 0;
            oKeyPad[i5] = 92 ^ b;
            iKeyPad[i5] = 54 ^ b;
        }
        this.update(iKeyPad);
        this.#oKeyPad = oKeyPad;
        this.#inner = true;
        this.#sharedMemory = sharedMemory2;
    }
    finalize() {
        super.finalize();
        if (this.#inner) {
            this.#inner = false;
            const innerHash = this.array();
            super.init(this.#sharedMemory);
            this.update(this.#oKeyPad);
            this.update(innerHash);
            super.finalize();
        }
    }
}
const HEX_CHARS1 = "0123456789abcdef".split("");
const EXTRA1 = [
    -2147483648,
    8388608,
    32768,
    128
];
const SHIFT1 = [
    24,
    16,
    8,
    0
];
const K = [
    1116352408,
    1899447441,
    3049323471,
    3921009573,
    961987163,
    1508970993,
    2453635748,
    2870763221,
    3624381080,
    310598401,
    607225278,
    1426881987,
    1925078388,
    2162078206,
    2614888103,
    3248222580,
    3835390401,
    4022224774,
    264347078,
    604807628,
    770255983,
    1249150122,
    1555081692,
    1996064986,
    2554220882,
    2821834349,
    2952996808,
    3210313671,
    3336571891,
    3584528711,
    113926993,
    338241895,
    666307205,
    773529912,
    1294757372,
    1396182291,
    1695183700,
    1986661051,
    2177026350,
    2456956037,
    2730485921,
    2820302411,
    3259730800,
    3345764771,
    3516065817,
    3600352804,
    4094571909,
    275423344,
    430227734,
    506948616,
    659060556,
    883997877,
    958139571,
    1322822218,
    1537002063,
    1747873779,
    1955562222,
    2024104815,
    2227730452,
    2361852424,
    2428436474,
    2756734187,
    3204031479,
    3329325298, 
];
const blocks1 = [];
class Sha256 {
    #block;
    #blocks;
    #bytes;
    #finalized;
    #first;
    #h0;
    #h1;
    #h2;
    #h3;
    #h4;
    #h5;
    #h6;
    #h7;
    #hashed;
    #hBytes;
    #is224;
    #lastByteIndex = 0;
    #start;
    constructor(is2241 = false, sharedMemory3 = false){
        this.init(is2241, sharedMemory3);
    }
    init(is224, sharedMemory) {
        if (sharedMemory) {
            blocks1[0] = blocks1[16] = blocks1[1] = blocks1[2] = blocks1[3] = blocks1[4] = blocks1[5] = blocks1[6] = blocks1[7] = blocks1[8] = blocks1[9] = blocks1[10] = blocks1[11] = blocks1[12] = blocks1[13] = blocks1[14] = blocks1[15] = 0;
            this.#blocks = blocks1;
        } else {
            this.#blocks = [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
            ];
        }
        if (is224) {
            this.#h0 = 3238371032;
            this.#h1 = 914150663;
            this.#h2 = 812702999;
            this.#h3 = 4144912697;
            this.#h4 = 4290775857;
            this.#h5 = 1750603025;
            this.#h6 = 1694076839;
            this.#h7 = 3204075428;
        } else {
            this.#h0 = 1779033703;
            this.#h1 = 3144134277;
            this.#h2 = 1013904242;
            this.#h3 = 2773480762;
            this.#h4 = 1359893119;
            this.#h5 = 2600822924;
            this.#h6 = 528734635;
            this.#h7 = 1541459225;
        }
        this.#block = this.#start = this.#bytes = this.#hBytes = 0;
        this.#finalized = this.#hashed = false;
        this.#first = true;
        this.#is224 = is224;
    }
    update(message) {
        if (this.#finalized) {
            return this;
        }
        let msg;
        if (message instanceof ArrayBuffer) {
            msg = new Uint8Array(message);
        } else {
            msg = message;
        }
        let index = 0;
        const length = msg.length;
        const blocks2 = this.#blocks;
        while(index < length){
            let i6;
            if (this.#hashed) {
                this.#hashed = false;
                blocks2[0] = this.#block;
                blocks2[16] = blocks2[1] = blocks2[2] = blocks2[3] = blocks2[4] = blocks2[5] = blocks2[6] = blocks2[7] = blocks2[8] = blocks2[9] = blocks2[10] = blocks2[11] = blocks2[12] = blocks2[13] = blocks2[14] = blocks2[15] = 0;
            }
            if (typeof msg !== "string") {
                for(i6 = this.#start; index < length && i6 < 64; ++index){
                    blocks2[i6 >> 2] |= msg[index] << SHIFT1[(i6++) & 3];
                }
            } else {
                for(i6 = this.#start; index < length && i6 < 64; ++index){
                    let code1 = msg.charCodeAt(index);
                    if (code1 < 128) {
                        blocks2[i6 >> 2] |= code1 << SHIFT1[(i6++) & 3];
                    } else if (code1 < 2048) {
                        blocks2[i6 >> 2] |= (192 | code1 >> 6) << SHIFT1[(i6++) & 3];
                        blocks2[i6 >> 2] |= (128 | code1 & 63) << SHIFT1[(i6++) & 3];
                    } else if (code1 < 55296 || code1 >= 57344) {
                        blocks2[i6 >> 2] |= (224 | code1 >> 12) << SHIFT1[(i6++) & 3];
                        blocks2[i6 >> 2] |= (128 | code1 >> 6 & 63) << SHIFT1[(i6++) & 3];
                        blocks2[i6 >> 2] |= (128 | code1 & 63) << SHIFT1[(i6++) & 3];
                    } else {
                        code1 = 65536 + ((code1 & 1023) << 10 | msg.charCodeAt(++index) & 1023);
                        blocks2[i6 >> 2] |= (240 | code1 >> 18) << SHIFT1[(i6++) & 3];
                        blocks2[i6 >> 2] |= (128 | code1 >> 12 & 63) << SHIFT1[(i6++) & 3];
                        blocks2[i6 >> 2] |= (128 | code1 >> 6 & 63) << SHIFT1[(i6++) & 3];
                        blocks2[i6 >> 2] |= (128 | code1 & 63) << SHIFT1[(i6++) & 3];
                    }
                }
            }
            this.#lastByteIndex = i6;
            this.#bytes += i6 - this.#start;
            if (i6 >= 64) {
                this.#block = blocks2[16];
                this.#start = i6 - 64;
                this.hash();
                this.#hashed = true;
            } else {
                this.#start = i6;
            }
        }
        if (this.#bytes > 4294967295) {
            this.#hBytes += this.#bytes / 4294967296 << 0;
            this.#bytes = this.#bytes % 4294967296;
        }
        return this;
    }
    finalize() {
        if (this.#finalized) {
            return;
        }
        this.#finalized = true;
        const blocks2 = this.#blocks;
        const i6 = this.#lastByteIndex;
        blocks2[16] = this.#block;
        blocks2[i6 >> 2] |= EXTRA1[i6 & 3];
        this.#block = blocks2[16];
        if (i6 >= 56) {
            if (!this.#hashed) {
                this.hash();
            }
            blocks2[0] = this.#block;
            blocks2[16] = blocks2[1] = blocks2[2] = blocks2[3] = blocks2[4] = blocks2[5] = blocks2[6] = blocks2[7] = blocks2[8] = blocks2[9] = blocks2[10] = blocks2[11] = blocks2[12] = blocks2[13] = blocks2[14] = blocks2[15] = 0;
        }
        blocks2[14] = this.#hBytes << 3 | this.#bytes >>> 29;
        blocks2[15] = this.#bytes << 3;
        this.hash();
    }
    hash() {
        let a = this.#h0;
        let b = this.#h1;
        let c = this.#h2;
        let d = this.#h3;
        let e = this.#h4;
        let f = this.#h5;
        let g = this.#h6;
        let h = this.#h7;
        const blocks2 = this.#blocks;
        let s0;
        let s1;
        let maj;
        let t1;
        let t2;
        let ch;
        let ab2;
        let da;
        let cd;
        let bc;
        for(let j = 16; j < 64; ++j){
            t1 = blocks2[j - 15];
            s0 = (t1 >>> 7 | t1 << 25) ^ (t1 >>> 18 | t1 << 14) ^ t1 >>> 3;
            t1 = blocks2[j - 2];
            s1 = (t1 >>> 17 | t1 << 15) ^ (t1 >>> 19 | t1 << 13) ^ t1 >>> 10;
            blocks2[j] = blocks2[j - 16] + s0 + blocks2[j - 7] + s1 << 0;
        }
        bc = b & c;
        for(let j1 = 0; j1 < 64; j1 += 4){
            if (this.#first) {
                if (this.#is224) {
                    ab2 = 300032;
                    t1 = blocks2[0] - 1413257819;
                    h = t1 - 150054599 << 0;
                    d = t1 + 24177077 << 0;
                } else {
                    ab2 = 704751109;
                    t1 = blocks2[0] - 210244248;
                    h = t1 - 1521486534 << 0;
                    d = t1 + 143694565 << 0;
                }
                this.#first = false;
            } else {
                s0 = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10);
                s1 = (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);
                ab2 = a & b;
                maj = ab2 ^ a & c ^ bc;
                ch = e & f ^ ~e & g;
                t1 = h + s1 + ch + K[j1] + blocks2[j1];
                t2 = s0 + maj;
                h = d + t1 << 0;
                d = t1 + t2 << 0;
            }
            s0 = (d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10);
            s1 = (h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7);
            da = d & a;
            maj = da ^ d & b ^ ab2;
            ch = h & e ^ ~h & f;
            t1 = g + s1 + ch + K[j1 + 1] + blocks2[j1 + 1];
            t2 = s0 + maj;
            g = c + t1 << 0;
            c = t1 + t2 << 0;
            s0 = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10);
            s1 = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7);
            cd = c & d;
            maj = cd ^ c & a ^ da;
            ch = g & h ^ ~g & e;
            t1 = f + s1 + ch + K[j1 + 2] + blocks2[j1 + 2];
            t2 = s0 + maj;
            f = b + t1 << 0;
            b = t1 + t2 << 0;
            s0 = (b >>> 2 | b << 30) ^ (b >>> 13 | b << 19) ^ (b >>> 22 | b << 10);
            s1 = (f >>> 6 | f << 26) ^ (f >>> 11 | f << 21) ^ (f >>> 25 | f << 7);
            bc = b & c;
            maj = bc ^ b & d ^ cd;
            ch = f & g ^ ~f & h;
            t1 = e + s1 + ch + K[j1 + 3] + blocks2[j1 + 3];
            t2 = s0 + maj;
            e = a + t1 << 0;
            a = t1 + t2 << 0;
        }
        this.#h0 = this.#h0 + a << 0;
        this.#h1 = this.#h1 + b << 0;
        this.#h2 = this.#h2 + c << 0;
        this.#h3 = this.#h3 + d << 0;
        this.#h4 = this.#h4 + e << 0;
        this.#h5 = this.#h5 + f << 0;
        this.#h6 = this.#h6 + g << 0;
        this.#h7 = this.#h7 + h << 0;
    }
    hex() {
        this.finalize();
        const h0 = this.#h0;
        const h1 = this.#h1;
        const h2 = this.#h2;
        const h3 = this.#h3;
        const h4 = this.#h4;
        const h5 = this.#h5;
        const h6 = this.#h6;
        const h7 = this.#h7;
        let hex = HEX_CHARS1[h0 >> 28 & 15] + HEX_CHARS1[h0 >> 24 & 15] + HEX_CHARS1[h0 >> 20 & 15] + HEX_CHARS1[h0 >> 16 & 15] + HEX_CHARS1[h0 >> 12 & 15] + HEX_CHARS1[h0 >> 8 & 15] + HEX_CHARS1[h0 >> 4 & 15] + HEX_CHARS1[h0 & 15] + HEX_CHARS1[h1 >> 28 & 15] + HEX_CHARS1[h1 >> 24 & 15] + HEX_CHARS1[h1 >> 20 & 15] + HEX_CHARS1[h1 >> 16 & 15] + HEX_CHARS1[h1 >> 12 & 15] + HEX_CHARS1[h1 >> 8 & 15] + HEX_CHARS1[h1 >> 4 & 15] + HEX_CHARS1[h1 & 15] + HEX_CHARS1[h2 >> 28 & 15] + HEX_CHARS1[h2 >> 24 & 15] + HEX_CHARS1[h2 >> 20 & 15] + HEX_CHARS1[h2 >> 16 & 15] + HEX_CHARS1[h2 >> 12 & 15] + HEX_CHARS1[h2 >> 8 & 15] + HEX_CHARS1[h2 >> 4 & 15] + HEX_CHARS1[h2 & 15] + HEX_CHARS1[h3 >> 28 & 15] + HEX_CHARS1[h3 >> 24 & 15] + HEX_CHARS1[h3 >> 20 & 15] + HEX_CHARS1[h3 >> 16 & 15] + HEX_CHARS1[h3 >> 12 & 15] + HEX_CHARS1[h3 >> 8 & 15] + HEX_CHARS1[h3 >> 4 & 15] + HEX_CHARS1[h3 & 15] + HEX_CHARS1[h4 >> 28 & 15] + HEX_CHARS1[h4 >> 24 & 15] + HEX_CHARS1[h4 >> 20 & 15] + HEX_CHARS1[h4 >> 16 & 15] + HEX_CHARS1[h4 >> 12 & 15] + HEX_CHARS1[h4 >> 8 & 15] + HEX_CHARS1[h4 >> 4 & 15] + HEX_CHARS1[h4 & 15] + HEX_CHARS1[h5 >> 28 & 15] + HEX_CHARS1[h5 >> 24 & 15] + HEX_CHARS1[h5 >> 20 & 15] + HEX_CHARS1[h5 >> 16 & 15] + HEX_CHARS1[h5 >> 12 & 15] + HEX_CHARS1[h5 >> 8 & 15] + HEX_CHARS1[h5 >> 4 & 15] + HEX_CHARS1[h5 & 15] + HEX_CHARS1[h6 >> 28 & 15] + HEX_CHARS1[h6 >> 24 & 15] + HEX_CHARS1[h6 >> 20 & 15] + HEX_CHARS1[h6 >> 16 & 15] + HEX_CHARS1[h6 >> 12 & 15] + HEX_CHARS1[h6 >> 8 & 15] + HEX_CHARS1[h6 >> 4 & 15] + HEX_CHARS1[h6 & 15];
        if (!this.#is224) {
            hex += HEX_CHARS1[h7 >> 28 & 15] + HEX_CHARS1[h7 >> 24 & 15] + HEX_CHARS1[h7 >> 20 & 15] + HEX_CHARS1[h7 >> 16 & 15] + HEX_CHARS1[h7 >> 12 & 15] + HEX_CHARS1[h7 >> 8 & 15] + HEX_CHARS1[h7 >> 4 & 15] + HEX_CHARS1[h7 & 15];
        }
        return hex;
    }
    toString() {
        return this.hex();
    }
    digest() {
        this.finalize();
        const h0 = this.#h0;
        const h1 = this.#h1;
        const h2 = this.#h2;
        const h3 = this.#h3;
        const h4 = this.#h4;
        const h5 = this.#h5;
        const h6 = this.#h6;
        const h7 = this.#h7;
        const arr = [
            h0 >> 24 & 255,
            h0 >> 16 & 255,
            h0 >> 8 & 255,
            h0 & 255,
            h1 >> 24 & 255,
            h1 >> 16 & 255,
            h1 >> 8 & 255,
            h1 & 255,
            h2 >> 24 & 255,
            h2 >> 16 & 255,
            h2 >> 8 & 255,
            h2 & 255,
            h3 >> 24 & 255,
            h3 >> 16 & 255,
            h3 >> 8 & 255,
            h3 & 255,
            h4 >> 24 & 255,
            h4 >> 16 & 255,
            h4 >> 8 & 255,
            h4 & 255,
            h5 >> 24 & 255,
            h5 >> 16 & 255,
            h5 >> 8 & 255,
            h5 & 255,
            h6 >> 24 & 255,
            h6 >> 16 & 255,
            h6 >> 8 & 255,
            h6 & 255, 
        ];
        if (!this.#is224) {
            arr.push(h7 >> 24 & 255, h7 >> 16 & 255, h7 >> 8 & 255, h7 & 255);
        }
        return arr;
    }
    array() {
        return this.digest();
    }
    arrayBuffer() {
        this.finalize();
        const buffer1 = new ArrayBuffer(this.#is224 ? 28 : 32);
        const dataView = new DataView(buffer1);
        dataView.setUint32(0, this.#h0);
        dataView.setUint32(4, this.#h1);
        dataView.setUint32(8, this.#h2);
        dataView.setUint32(12, this.#h3);
        dataView.setUint32(16, this.#h4);
        dataView.setUint32(20, this.#h5);
        dataView.setUint32(24, this.#h6);
        if (!this.#is224) {
            dataView.setUint32(28, this.#h7);
        }
        return buffer1;
    }
}
class HmacSha256 extends Sha256 {
    #inner;
    #is224;
    #oKeyPad;
    #sharedMemory;
    constructor(secretKey1, is2242 = false, sharedMemory4 = false){
        super(is2242, sharedMemory4);
        let key9;
        if (typeof secretKey1 === "string") {
            const bytes = [];
            const length = secretKey1.length;
            let index = 0;
            for(let i6 = 0; i6 < length; ++i6){
                let code1 = secretKey1.charCodeAt(i6);
                if (code1 < 128) {
                    bytes[index++] = code1;
                } else if (code1 < 2048) {
                    bytes[index++] = 192 | code1 >> 6;
                    bytes[index++] = 128 | code1 & 63;
                } else if (code1 < 55296 || code1 >= 57344) {
                    bytes[index++] = 224 | code1 >> 12;
                    bytes[index++] = 128 | code1 >> 6 & 63;
                    bytes[index++] = 128 | code1 & 63;
                } else {
                    code1 = 65536 + ((code1 & 1023) << 10 | secretKey1.charCodeAt(++i6) & 1023);
                    bytes[index++] = 240 | code1 >> 18;
                    bytes[index++] = 128 | code1 >> 12 & 63;
                    bytes[index++] = 128 | code1 >> 6 & 63;
                    bytes[index++] = 128 | code1 & 63;
                }
            }
            key9 = bytes;
        } else {
            if (secretKey1 instanceof ArrayBuffer) {
                key9 = new Uint8Array(secretKey1);
            } else {
                key9 = secretKey1;
            }
        }
        if (key9.length > 64) {
            key9 = new Sha256(is2242, true).update(key9).array();
        }
        const oKeyPad1 = [];
        const iKeyPad1 = [];
        for(let i6 = 0; i6 < 64; ++i6){
            const b = key9[i6] || 0;
            oKeyPad1[i6] = 92 ^ b;
            iKeyPad1[i6] = 54 ^ b;
        }
        this.update(iKeyPad1);
        this.#oKeyPad = oKeyPad1;
        this.#inner = true;
        this.#is224 = is2242;
        this.#sharedMemory = sharedMemory4;
    }
    finalize() {
        super.finalize();
        if (this.#inner) {
            this.#inner = false;
            const innerHash = this.array();
            super.init(this.#is224, this.#sharedMemory);
            this.update(this.#oKeyPad);
            this.update(innerHash);
            super.finalize();
        }
    }
}
const ANSI_PATTERN2 = new RegExp([
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))", 
].join("|"), "g");
const DEFAULT_BUF_SIZE1 = 4096;
const MIN_BUF_SIZE2 = 16;
const CR3 = "\r".charCodeAt(0);
const LF3 = "\n".charCodeAt(0);
class BufferFullError2 extends Error {
    partial;
    name = "BufferFullError";
    constructor(partial3){
        super("Buffer full");
        this.partial = partial3;
    }
}
class PartialReadError1 extends Error {
    name = "PartialReadError";
    partial;
    constructor(){
        super("Encountered UnexpectedEof, data only partially read");
    }
}
class BufReader2 {
    buf;
    rd;
    r = 0;
    w = 0;
    eof = false;
    static create(r, size = 4096) {
        return r instanceof BufReader2 ? r : new BufReader2(r, size);
    }
    constructor(rd3, size9 = 4096){
        if (size9 < 16) {
            size9 = MIN_BUF_SIZE2;
        }
        this._reset(new Uint8Array(size9), rd3);
    }
    size() {
        return this.buf.byteLength;
    }
    buffered() {
        return this.w - this.r;
    }
    async _fill() {
        if (this.r > 0) {
            this.buf.copyWithin(0, this.r, this.w);
            this.w -= this.r;
            this.r = 0;
        }
        if (this.w >= this.buf.byteLength) {
            throw Error("bufio: tried to fill full buffer");
        }
        for(let i7 = 100; i7 > 0; i7--){
            const rr = await this.rd.read(this.buf.subarray(this.w));
            if (rr === null) {
                this.eof = true;
                return;
            }
            assert3(rr >= 0, "negative read");
            this.w += rr;
            if (rr > 0) {
                return;
            }
        }
        throw new Error(`No progress after ${100} read() calls`);
    }
    reset(r) {
        this._reset(this.buf, r);
    }
    _reset(buf, rd) {
        this.buf = buf;
        this.rd = rd;
        this.eof = false;
    }
    async read(p) {
        let rr = p.byteLength;
        if (p.byteLength === 0) return rr;
        if (this.r === this.w) {
            if (p.byteLength >= this.buf.byteLength) {
                const rr1 = await this.rd.read(p);
                const nread = rr1 ?? 0;
                assert3(nread >= 0, "negative read");
                return rr1;
            }
            this.r = 0;
            this.w = 0;
            rr = await this.rd.read(this.buf);
            if (rr === 0 || rr === null) return rr;
            assert3(rr >= 0, "negative read");
            this.w += rr;
        }
        const copied = copy5(this.buf.subarray(this.r, this.w), p, 0);
        this.r += copied;
        return copied;
    }
    async readFull(p) {
        let bytesRead = 0;
        while(bytesRead < p.length){
            try {
                const rr = await this.read(p.subarray(bytesRead));
                if (rr === null) {
                    if (bytesRead === 0) {
                        return null;
                    } else {
                        throw new PartialReadError1();
                    }
                }
                bytesRead += rr;
            } catch (err) {
                err.partial = p.subarray(0, bytesRead);
                throw err;
            }
        }
        return p;
    }
    async readByte() {
        while(this.r === this.w){
            if (this.eof) return null;
            await this._fill();
        }
        const c = this.buf[this.r];
        this.r++;
        return c;
    }
    async readString(delim) {
        if (delim.length !== 1) {
            throw new Error("Delimiter should be a single character");
        }
        const buffer1 = await this.readSlice(delim.charCodeAt(0));
        if (buffer1 === null) return null;
        return new TextDecoder().decode(buffer1);
    }
    async readLine() {
        let line;
        try {
            line = await this.readSlice(LF3);
        } catch (err) {
            if (err instanceof Deno.errors.BadResource) {
                throw err;
            }
            let { partial: partial4  } = err;
            assert3(partial4 instanceof Uint8Array, "bufio: caught error from `readSlice()` without `partial` property");
            if (!(err instanceof BufferFullError2)) {
                throw err;
            }
            if (!this.eof && partial4.byteLength > 0 && partial4[partial4.byteLength - 1] === CR3) {
                assert3(this.r > 0, "bufio: tried to rewind past start of buffer");
                this.r--;
                partial4 = partial4.subarray(0, partial4.byteLength - 1);
            }
            return {
                line: partial4,
                more: !this.eof
            };
        }
        if (line === null) {
            return null;
        }
        if (line.byteLength === 0) {
            return {
                line,
                more: false
            };
        }
        if (line[line.byteLength - 1] == LF3) {
            let drop = 1;
            if (line.byteLength > 1 && line[line.byteLength - 2] === CR3) {
                drop = 2;
            }
            line = line.subarray(0, line.byteLength - drop);
        }
        return {
            line,
            more: false
        };
    }
    async readSlice(delim) {
        let s1 = 0;
        let slice;
        while(true){
            let i7 = this.buf.subarray(this.r + s1, this.w).indexOf(delim);
            if (i7 >= 0) {
                i7 += s1;
                slice = this.buf.subarray(this.r, this.r + i7 + 1);
                this.r += i7 + 1;
                break;
            }
            if (this.eof) {
                if (this.r === this.w) {
                    return null;
                }
                slice = this.buf.subarray(this.r, this.w);
                this.r = this.w;
                break;
            }
            if (this.buffered() >= this.buf.byteLength) {
                this.r = this.w;
                const oldbuf = this.buf;
                const newbuf = this.buf.slice(0);
                this.buf = newbuf;
                throw new BufferFullError2(oldbuf);
            }
            s1 = this.w - this.r;
            try {
                await this._fill();
            } catch (err) {
                err.partial = slice;
                throw err;
            }
        }
        return slice;
    }
    async peek(n) {
        if (n < 0) {
            throw Error("negative count");
        }
        let avail = this.w - this.r;
        while(avail < n && avail < this.buf.byteLength && !this.eof){
            try {
                await this._fill();
            } catch (err) {
                err.partial = this.buf.subarray(this.r, this.w);
                throw err;
            }
            avail = this.w - this.r;
        }
        if (avail === 0 && this.eof) {
            return null;
        } else if (avail < n && this.eof) {
            return this.buf.subarray(this.r, this.r + avail);
        } else if (avail < n) {
            throw new BufferFullError2(this.buf.subarray(this.r, this.w));
        }
        return this.buf.subarray(this.r, this.r + n);
    }
}
class AbstractBufBase1 {
    buf;
    usedBufferBytes = 0;
    err = null;
    size() {
        return this.buf.byteLength;
    }
    available() {
        return this.buf.byteLength - this.usedBufferBytes;
    }
    buffered() {
        return this.usedBufferBytes;
    }
}
class BufWriter1 extends AbstractBufBase1 {
    writer;
    static create(writer, size = 4096) {
        return writer instanceof BufWriter1 ? writer : new BufWriter1(writer, size);
    }
    constructor(writer3, size10 = 4096){
        super();
        this.writer = writer3;
        if (size10 <= 0) {
            size10 = DEFAULT_BUF_SIZE1;
        }
        this.buf = new Uint8Array(size10);
    }
    reset(w) {
        this.err = null;
        this.usedBufferBytes = 0;
        this.writer = w;
    }
    async flush() {
        if (this.err !== null) throw this.err;
        if (this.usedBufferBytes === 0) return;
        try {
            await writeAll1(this.writer, this.buf.subarray(0, this.usedBufferBytes));
        } catch (e) {
            this.err = e;
            throw e;
        }
        this.buf = new Uint8Array(this.buf.length);
        this.usedBufferBytes = 0;
    }
    async write(data) {
        if (this.err !== null) throw this.err;
        if (data.length === 0) return 0;
        let totalBytesWritten = 0;
        let numBytesWritten = 0;
        while(data.byteLength > this.available()){
            if (this.buffered() === 0) {
                try {
                    numBytesWritten = await this.writer.write(data);
                } catch (e) {
                    this.err = e;
                    throw e;
                }
            } else {
                numBytesWritten = copy5(data, this.buf, this.usedBufferBytes);
                this.usedBufferBytes += numBytesWritten;
                await this.flush();
            }
            totalBytesWritten += numBytesWritten;
            data = data.subarray(numBytesWritten);
        }
        numBytesWritten = copy5(data, this.buf, this.usedBufferBytes);
        this.usedBufferBytes += numBytesWritten;
        totalBytesWritten += numBytesWritten;
        return totalBytesWritten;
    }
}
class BufWriterSync1 extends AbstractBufBase1 {
    writer;
    static create(writer, size = 4096) {
        return writer instanceof BufWriterSync1 ? writer : new BufWriterSync1(writer, size);
    }
    constructor(writer4, size11 = 4096){
        super();
        this.writer = writer4;
        if (size11 <= 0) {
            size11 = DEFAULT_BUF_SIZE1;
        }
        this.buf = new Uint8Array(size11);
    }
    reset(w) {
        this.err = null;
        this.usedBufferBytes = 0;
        this.writer = w;
    }
    flush() {
        if (this.err !== null) throw this.err;
        if (this.usedBufferBytes === 0) return;
        try {
            writeAllSync1(this.writer, this.buf.subarray(0, this.usedBufferBytes));
        } catch (e) {
            this.err = e;
            throw e;
        }
        this.buf = new Uint8Array(this.buf.length);
        this.usedBufferBytes = 0;
    }
    writeSync(data) {
        if (this.err !== null) throw this.err;
        if (data.length === 0) return 0;
        let totalBytesWritten = 0;
        let numBytesWritten = 0;
        while(data.byteLength > this.available()){
            if (this.buffered() === 0) {
                try {
                    numBytesWritten = this.writer.writeSync(data);
                } catch (e) {
                    this.err = e;
                    throw e;
                }
            } else {
                numBytesWritten = copy5(data, this.buf, this.usedBufferBytes);
                this.usedBufferBytes += numBytesWritten;
                this.flush();
            }
            totalBytesWritten += numBytesWritten;
            data = data.subarray(numBytesWritten);
        }
        numBytesWritten = copy5(data, this.buf, this.usedBufferBytes);
        this.usedBufferBytes += numBytesWritten;
        totalBytesWritten += numBytesWritten;
        return totalBytesWritten;
    }
}
class StringReader1 extends Buffer2 {
    constructor(s1){
        super(new TextEncoder().encode(s1).buffer);
    }
}
class MultiReader1 {
    readers;
    currentIndex = 0;
    constructor(...readers2){
        this.readers = readers2;
    }
    async read(p) {
        const r2 = this.readers[this.currentIndex];
        if (!r2) return null;
        const result = await r2.read(p);
        if (result === null) {
            this.currentIndex++;
            return 0;
        }
        return result;
    }
}
class LimitedReader1 {
    reader;
    limit;
    constructor(reader2, limit4){
        this.reader = reader2;
        this.limit = limit4;
    }
    async read(p) {
        if (this.limit <= 0) {
            return null;
        }
        if (p.length > this.limit) {
            p = p.subarray(0, this.limit);
        }
        const n = await this.reader.read(p);
        if (n == null) {
            return null;
        }
        this.limit -= n;
        return n;
    }
}
const decoder4 = new TextDecoder();
class StringWriter {
    base;
    chunks = [];
    byteLength = 0;
    cache;
    constructor(base = ""){
        this.base = base;
        const c = new TextEncoder().encode(base);
        this.chunks.push(c);
        this.byteLength += c.byteLength;
    }
    write(p) {
        return Promise.resolve(this.writeSync(p));
    }
    writeSync(p) {
        this.chunks.push(p);
        this.byteLength += p.byteLength;
        this.cache = undefined;
        return p.byteLength;
    }
    toString() {
        if (this.cache) {
            return this.cache;
        }
        const buf = new Uint8Array(this.byteLength);
        let offs = 0;
        for (const chunk of this.chunks){
            buf.set(chunk, offs);
            offs += chunk.byteLength;
        }
        this.cache = decoder4.decode(buf);
        return this.cache;
    }
}
class MongoError extends Error {
    constructor(info){
        super(`MongoError: ${JSON.stringify(info)}`);
    }
}
function parseNamespace(ns) {
    const [db1, ...rest] = ns.split(".");
    return {
        db: db1,
        collection: rest.join(".")
    };
}
class CommandCursor {
    #id;
    #protocol;
    #batches = [];
    #db;
    #collection;
    #executor;
    #executed = false;
    constructor(protocol1, executor){
        this.#protocol = protocol1;
        this.#executor = executor;
    }
    async execute() {
        this.#executed = true;
        const options6 = await this.#executor();
        this.#batches = options6.firstBatch;
        this.#id = BigInt(options6.id);
        const { db: db1 , collection  } = parseNamespace(options6.ns);
        this.#db = db1;
        this.#collection = collection;
    }
    async next() {
        if (this.#batches.length > 0) {
            return this.#batches.shift();
        }
        if (!this.#executed) {
            await this.execute();
            return this.#batches.shift();
        }
        if (this.#id === 0n) {
            return undefined;
        }
        const { cursor  } = await this.#protocol.commandSingle(this.#db, {
            getMore: mod4.Long.fromBigInt(this.#id),
            collection: this.#collection
        });
        this.#batches = cursor.nextBatch || [];
        this.#id = BigInt(cursor.id.toString());
        return this.#batches.shift();
    }
    async *[Symbol.asyncIterator]() {
        while(this.#batches.length > 0 || this.#id !== 0n){
            const value8 = await this.next();
            if (value8 !== undefined) {
                yield value8;
            }
        }
    }
    async forEach(callback) {
        let index = 0;
        for await (const item of this){
            if (item) {
                callback(item, index++);
            }
        }
    }
    async map(callback) {
        let index = 0;
        const result = [];
        for await (const item of this){
            if (item) {
                const newItem = callback(item, index++);
                result.push(newItem);
            }
        }
        return result;
    }
    toArray() {
        return this.map((item)=>item
        );
    }
}
class AggregateCursor extends CommandCursor {
    #context;
    async executor() {
        const { dbName , pipeline , collectionName , protocol: protocol2 , options: options6  } = this.#context;
        const { cursor  } = await protocol2.commandSingle(dbName, {
            aggregate: collectionName,
            pipeline,
            cursor: {
                batchSize: options6?.batchSize || 1000
            },
            ...options6
        });
        return {
            ...cursor,
            id: cursor.id.toString()
        };
    }
    constructor(context3){
        super(context3.protocol, ()=>this.executor()
        );
        this.#context = context3;
    }
}
const driverMetadata = {
    driver: {
        name: "Deno Mongo",
        version: "v0.0.1"
    },
    os: {
        type: Deno.build.os,
        name: Deno.build.os,
        architecture: Deno.build.arch
    }
};
async function handshake(protocol2) {
    const reply = await protocol2.commandSingle("admin", {
        isMaster: true,
        client: driverMetadata
    });
    return reply;
}
var OpCode1;
(function(OpCode2) {
    OpCode2[OpCode2["REPLAY"] = 1] = "REPLAY";
    OpCode2[OpCode2["UPDATE"] = 2001] = "UPDATE";
    OpCode2[OpCode2["INSERT"] = 2002] = "INSERT";
    OpCode2[OpCode2["RESERVED"] = 2003] = "RESERVED";
    OpCode2[OpCode2["QUERY"] = 2004] = "QUERY";
    OpCode2[OpCode2["GET_MORE"] = 2005] = "GET_MORE";
    OpCode2[OpCode2["DELETE"] = 2006] = "DELETE";
    OpCode2[OpCode2["KILL_CURSORS"] = 2007] = "KILL_CURSORS";
    OpCode2[OpCode2["MSG"] = 2013] = "MSG";
})(OpCode1 || (OpCode1 = {
}));
function serializeHeader(header) {
    const view = new DataView(new ArrayBuffer(16));
    view.setInt32(0, header.messageLength, true);
    view.setInt32(4, header.requestId, true);
    view.setInt32(8, header.responseTo, true);
    view.setInt32(12, header.opCode, true);
    return new Uint8Array(view.buffer);
}
function parseHeader(buffer1) {
    const view = new DataView(buffer1.buffer);
    return {
        messageLength: view.getUint32(0, true),
        requestId: view.getUint32(4, true),
        responseTo: view.getUint32(8, true),
        opCode: view.getUint32(12, true)
    };
}
function serializeBson(target) {
    return mod4.serialize(target);
}
function deserializeBson(buffer1) {
    return mod4.deserialize(buffer1);
}
const encoder7 = new TextEncoder();
const decoder5 = new TextDecoder();
function serializeSections(sections) {
    let totalLen = 0;
    const buffers = sections.map((section)=>{
        if ("document" in section) {
            const document = serializeBson(section.document);
            const section0 = new Uint8Array(1 + document.byteLength);
            new DataView(section0.buffer).setUint8(0, 0);
            section0.set(document, 1);
            totalLen += section0.byteLength;
            return section0;
        } else {
            const identifier = encoder7.encode(section.identifier + "\0");
            let documentsLength = 0;
            const docs = section.documents.map((doc)=>{
                const document = serializeBson(doc);
                documentsLength += document.byteLength;
                return document;
            });
            const section1 = new Uint8Array(1 + 4 + identifier.byteLength + documentsLength);
            const view = new DataView(section1.buffer);
            view.setUint8(0, 1);
            view.setUint32(1, section1.byteLength - 1, true);
            let pos = 4;
            for (const doc of docs){
                section1.set(doc, pos);
                pos += doc.byteLength;
            }
            totalLen += section1.byteLength;
            return section1;
        }
    });
    return {
        length: totalLen,
        sections: buffers
    };
}
function serializeMessage(message6) {
    const { length , sections  } = serializeSections(message6.sections);
    const buffer1 = new Uint8Array(4 + length);
    const view = new DataView(buffer1.buffer);
    view.setInt32(0, message6.flags ?? 0, true);
    let pos = 4;
    for (const section of sections){
        buffer1.set(section, pos);
        pos += section.byteLength;
    }
    const header = serializeHeader({
        messageLength: 16 + buffer1.byteLength,
        responseTo: message6.responseTo,
        requestId: message6.requestId,
        opCode: OpCode1.MSG
    });
    return [
        header,
        buffer1
    ];
}
function deserializeMessage(header, buffer1) {
    const view = new DataView(buffer1.buffer);
    const flags2 = view.getInt32(0);
    const sections = [];
    let pos = 4;
    while(pos < view.byteLength){
        const kind = view.getInt8(pos);
        pos++;
        if (kind === 0) {
            const docLen = view.getInt32(pos, true);
            const document = deserializeBson(new Uint8Array(view.buffer.slice(pos, pos + docLen)));
            pos += docLen;
            sections.push({
                document
            });
        } else if (kind === 1) {
            console.log("kind1");
            const len4 = view.getInt32(pos, true);
            const sectionBody = new Uint8Array(view.buffer.slice(pos + 4, pos + len4 - 4));
            const identifierEndPos = sectionBody.findIndex((__byte)=>__byte === 0
            );
            const identifier = decoder5.decode(buffer1.slice(0, identifierEndPos));
            const docsBuffer = sectionBody.slice(identifierEndPos + 1);
            const documents = parseDocuments(docsBuffer);
            pos += len4;
            sections.push({
                identifier,
                documents
            });
        } else {
            throw new Error("Invalid section kind: " + kind);
        }
    }
    return {
        responseTo: header.responseTo,
        requestId: header.requestId,
        flags: flags2,
        sections
    };
}
function parseDocuments(buffer1) {
    let pos = 0;
    const docs = [];
    const view = new DataView(buffer1);
    while(pos < buffer1.byteLength){
        const docLen = view.getInt32(pos, true);
        const doc = deserializeBson(buffer1.slice(pos, pos + docLen));
        docs.push(doc);
        pos += docLen;
    }
    return docs;
}
let nextRequestId = 0;
class WireProtocol {
    #socket;
    #isPendingResponse = false;
    #isPendingRequest = false;
    #pendingResponses = new Map();
    #reader;
    #commandQueue = [];
    constructor(socket1){
        this.#socket = socket1;
        this.#reader = new BufReader2(this.#socket);
    }
    async connect() {
        const { connectionId: _connectionId  } = await handshake(this);
    }
    async commandSingle(db, body) {
        const [doc] = await this.command(db, body);
        const maybeError = doc;
        if (maybeError.ok === 0) {
            throw new MongoError(maybeError);
        }
        return doc;
    }
    async command(db, body) {
        const requestId = nextRequestId++;
        const commandTask = {
            requestId,
            db,
            body
        };
        this.#commandQueue.push(commandTask);
        this.send();
        this.#pendingResponses.set(requestId, deferred1());
        this.receive();
        const message6 = await this.#pendingResponses.get(requestId);
        let documents = [];
        for (const section of message6?.sections){
            if ("document" in section) {
                documents.push(section.document);
            } else {
                documents = documents.concat(section.documents);
            }
        }
        return documents;
    }
    async send() {
        if (this.#isPendingRequest) return;
        this.#isPendingRequest = true;
        while(this.#commandQueue.length > 0){
            const task = this.#commandQueue.shift();
            const chunks = serializeMessage({
                requestId: task.requestId,
                responseTo: 0,
                sections: [
                    {
                        document: {
                            ...task.body,
                            $db: task.db
                        }
                    }, 
                ]
            });
            for (const chunk of chunks){
                await writeAll1(this.#socket, chunk);
            }
        }
        this.#isPendingRequest = false;
    }
    async receive() {
        if (this.#isPendingResponse) return;
        this.#isPendingResponse = true;
        while(this.#pendingResponses.size > 0){
            const headerBuffer = await this.#reader.readFull(new Uint8Array(16));
            assert2(headerBuffer);
            const header = parseHeader(headerBuffer);
            const bodyBuffer = await this.#reader.readFull(new Uint8Array(header.messageLength - 16));
            assert2(bodyBuffer);
            const reply = deserializeMessage(header, bodyBuffer);
            const pendingMessage = this.#pendingResponses.get(header.responseTo);
            this.#pendingResponses.delete(header.responseTo);
            pendingMessage?.resolve(reply);
        }
        this.#isPendingResponse = false;
    }
}
class FindCursor extends CommandCursor {
    #context;
    async executor() {
        const { protocol: protocol2 , filter , dbName , collectionName , options: options6  } = this.#context;
        const { cursor  } = await protocol2.commandSingle(dbName, {
            find: collectionName,
            filter,
            batchSize: 1,
            noCursorTimeout: true,
            ...options6
        });
        return {
            ...cursor,
            id: cursor.id.toString()
        };
    }
    constructor(context4){
        super(context4.protocol, ()=>this.executor()
        );
        this.#context = context4;
    }
    limit(limit) {
        this.#context.options.limit = limit;
        return this;
    }
    skip(skip) {
        this.#context.options.skip = skip;
        return this;
    }
    sort(sort) {
        this.#context.options.sort = sort;
        return this;
    }
}
class ListIndexesCursor extends CommandCursor {
    #context;
    async executor() {
        const { protocol: protocol2 , dbName , collectionName  } = this.#context;
        const { cursor  } = await protocol2.commandSingle(dbName, {
            listIndexes: collectionName
        });
        return {
            ...cursor,
            id: cursor.id.toString()
        };
    }
    constructor(context5){
        super(context5.protocol, ()=>this.executor()
        );
        this.#context = context5;
    }
}
async function update1(protocol2, dbName, collectionName, query, doc, options6) {
    const { n , nModified , upserted  } = await protocol2.commandSingle(dbName, {
        update: collectionName,
        updates: [
            {
                q: query,
                u: doc,
                upsert: options6?.upsert ?? false,
                multi: options6?.multi ?? true,
                collation: options6?.collation,
                arrayFilters: options6?.arrayFilters,
                hint: options6?.hint
            }, 
        ],
        writeConcern: options6?.writeConcern,
        ordered: options6?.ordered ?? true,
        bypassDocumentValidation: options6?.bypassDocumentValidation,
        comment: options6?.comment
    });
    return {
        upsertedIds: upserted?.map((id1)=>id1._id
        ),
        upsertedCount: upserted?.length ?? 0,
        modifiedCount: nModified,
        matchedCount: n
    };
}
class Collection {
    name;
    #protocol;
    #dbName;
    constructor(protocol2, dbName, name5){
        this.name = name5;
        this.#protocol = protocol2;
        this.#dbName = dbName;
    }
    find(filter, options) {
        return new FindCursor({
            filter,
            protocol: this.#protocol,
            collectionName: this.name,
            dbName: this.#dbName,
            options: options ?? {
            }
        });
    }
    async findOne(filter, options) {
        const cursor = this.find(filter, options);
        return await cursor.next();
    }
    async findAndModify(query, options) {
        const result = await this.#protocol.commandSingle(this.#dbName, {
            findAndModify: this.name,
            query,
            ...options
        });
        if (result.ok === 0) {
            throw new MongoError("Could not execute findAndModify operation");
        }
        return result.value;
    }
    async count(filter, options) {
        const res = await this.#protocol.commandSingle(this.#dbName, {
            count: this.name,
            query: filter,
            ...options
        });
        const { n , ok  } = res;
        if (ok === 1) {
            return n;
        } else {
            return 0;
        }
    }
    async countDocuments(filter, options) {
        const pipeline = [];
        if (filter) {
            pipeline.push({
                $match: filter
            });
        }
        if (typeof options?.skip === "number") {
            pipeline.push({
                $skip: options.skip
            });
            delete options.skip;
        }
        if (typeof options?.limit === "number") {
            pipeline.push({
                $limit: options.limit
            });
            delete options.limit;
        }
        pipeline.push({
            $group: {
                _id: 1,
                n: {
                    $sum: 1
                }
            }
        });
        const result = await this.aggregate(pipeline, options).next();
        if (result) return result.n;
        return 0;
    }
    async estimatedDocumentCount() {
        const pipeline = [
            {
                $collStats: {
                    count: {
                    }
                }
            },
            {
                $group: {
                    _id: 1,
                    n: {
                        $sum: "$count"
                    }
                }
            }, 
        ];
        const result = await this.aggregate(pipeline).next();
        if (result) return result.n;
        return 0;
    }
    async insertOne(doc, options) {
        const { insertedIds  } = await this.insertMany([
            doc
        ], options);
        return insertedIds[0];
    }
    insert(docs, options) {
        docs = Array.isArray(docs) ? docs : [
            docs
        ];
        return this.insertMany(docs, options);
    }
    async insertMany(docs, options) {
        const insertedIds = docs.map((doc)=>{
            if (!doc._id) {
                doc._id = new mod4.ObjectID();
            }
            return doc._id;
        });
        const res = await this.#protocol.commandSingle(this.#dbName, {
            insert: this.name,
            documents: docs,
            ordered: options?.ordered ?? true,
            writeConcern: options?.writeConcern,
            bypassDocumentValidation: options?.bypassDocumentValidation,
            comment: options?.comment
        });
        const { writeErrors  } = res;
        if (writeErrors) {
            const [{ errmsg  }] = writeErrors;
            throw new Error(errmsg);
        }
        return {
            insertedIds,
            insertedCount: res.n
        };
    }
    async updateOne(filter, update, options) {
        const { upsertedIds =[] , upsertedCount , matchedCount , modifiedCount ,  } = await this.updateMany(filter, update, {
            ...options,
            multi: false
        });
        return {
            upsertedId: upsertedIds ? upsertedIds[0] : undefined,
            upsertedCount,
            matchedCount,
            modifiedCount
        };
    }
    async updateMany(filter, doc, options) {
        return await update1(this.#protocol, this.#dbName, this.name, filter, doc, {
            ...options,
            multi: options?.multi ?? true
        });
    }
    async deleteMany(filter, options) {
        const res = await this.#protocol.commandSingle(this.#dbName, {
            delete: this.name,
            deletes: [
                {
                    q: filter,
                    limit: options?.limit ?? 0,
                    collation: options?.collation,
                    hint: options?.hint,
                    comment: options?.comment
                }, 
            ],
            ordered: options?.ordered ?? true,
            writeConcern: options?.writeConcern
        });
        return res.n;
    }
    delete = this.deleteMany;
    deleteOne(filter, options) {
        return this.delete(filter, {
            ...options,
            limit: 1
        });
    }
    async drop(options) {
        const res = await this.#protocol.commandSingle(this.#dbName, {
            drop: this.name,
            ...options
        });
    }
    async distinct(key, query, options) {
        const { values  } = await this.#protocol.commandSingle(this.#dbName, {
            distinct: this.name,
            key,
            query,
            ...options
        });
        return values;
    }
    aggregate(pipeline, options) {
        return new AggregateCursor({
            pipeline,
            protocol: this.#protocol,
            dbName: this.#dbName,
            collectionName: this.name,
            options
        });
    }
    async createIndexes(options) {
        const res = await this.#protocol.commandSingle(this.#dbName, {
            createIndexes: this.name,
            ...options
        });
        return res;
    }
    async dropIndexes(options) {
        const res = await this.#protocol.commandSingle(this.#dbName, {
            dropIndexes: this.name,
            ...options
        });
        return res;
    }
    listIndexes() {
        return new ListIndexesCursor({
            protocol: this.#protocol,
            dbName: this.#dbName,
            collectionName: this.name
        });
    }
}
class Database {
    name;
    #cluster;
    constructor(cluster, name6){
        this.name = name6;
        this.#cluster = cluster;
    }
    collection(name) {
        return new Collection(this.#cluster.protocol, this.name, name);
    }
    listCollections(options) {
        if (!options) {
            options = {
            };
        }
        return new CommandCursor(this.#cluster.protocol, async ()=>{
            const { cursor  } = await this.#cluster.protocol.commandSingle(this.name, {
                listCollections: 1,
                ...options,
                batchSize: 1
            });
            return {
                id: cursor.id,
                ns: cursor.ns,
                firstBatch: cursor.firstBatch
            };
        });
    }
    async listCollectionNames(options) {
        const cursor = this.listCollections({
            ...options,
            nameOnly: true,
            authorizedCollections: true
        });
        const names = [];
        for await (const item of cursor){
            names.push(item.name);
        }
        return names;
    }
    async createUser(username, password, options) {
        await this.#cluster.protocol.commandSingle(this.name, {
            createUser: options?.username ?? username,
            pwd: options?.password ?? password,
            customData: options?.customData,
            roles: options?.roles ?? [],
            writeConcern: options?.writeConcern,
            authenticationRestrictions: options?.authenticationRestrictions,
            mechanisms: options?.mechanisms,
            digestPassword: options?.digestPassword,
            comment: options?.comment
        });
    }
    async dropUser(username, options) {
        await this.#cluster.protocol.commandSingle(this.name, {
            dropUser: username,
            writeConcern: options?.writeConcern,
            comment: options?.comment
        });
    }
}
function parse_url(url1) {
    const fragments = [
        "protocol",
        "auth",
        "hostname",
        "port",
        "pathname",
        "search",
        "hash", 
    ];
    const pattern = /([^:/?#]+:)?(?:(?:\/\/)(?:([^/?#]*:?[^@/]+)@)?([^/:?#]+)(?:(?::)(\d+))?)?(\/?[^?#]*)?(\?[^#]*)?(#[^\s]*)?/;
    const multipleServerPattern = /([^:/?#]+:)?(?:(?:\/\/)(?:([^/?#]*:?[^@/]+)@)?((?:(?:[^/:?#]+)(?:(?::)(?:\d+))?)+))?/;
    function parse_simple(url2) {
        const parts1 = {
            servers: [],
            href: url2
        };
        const multiServerMatch = url2.match(multipleServerPattern);
        if (multiServerMatch[3].includes(",")) {
            const [first, ...rest] = multiServerMatch[3].split(",");
            const parts2 = parse_simple(url2.replace(multiServerMatch[3], first));
            for (const serverName of rest){
                const subServer = parse_simple(`temp://${serverName}`);
                parts2.servers.push(subServer.servers[0]);
            }
            return parts2;
        }
        const matches1 = url2.match(pattern);
        var l = fragments.length;
        while(l--){
            parts1[fragments[l]] = matches1[l + 1] ? decodeURIComponent(matches1[l + 1]) : matches1[l + 1];
        }
        parts1["servers"] = [
            {
                host: parts1["hostname"],
                port: parseInt(parts1["port"])
            }, 
        ];
        delete parts1["hostname"];
        delete parts1["port"];
        parts1.path = parts1.search ? parts1.pathname ? parts1.pathname + parts1.search : parts1.search : parts1.pathname;
        return parts1;
    }
    function parse6(url2) {
        const parsed = parse_simple(url2);
        if (parsed.auth) parsed.auth = decodeAuth(parsed.auth);
        parsed.search = parsed.search ? queryString("?", parsed.search) : {
        };
        parsed.hash = parsed.hash ? queryString("#", parsed.hash) : {
        };
        return parsed;
    }
    function decodeAuth(auth) {
        const split = auth.split(":");
        return {
            user: split[0],
            password: split[1]
        };
    }
    function queryString(identifier, qs) {
        const obj = {
        };
        const params = decodeURI(qs || "").replace(new RegExp("\\" + identifier), "").split(/&amp;|&/);
        for (const param of params){
            if (params) {
                let index = param.indexOf("=");
                if (index === -1) index = param.length;
                const key10 = param.substring(0, index);
                const val = param.substring(index + 1);
                if (Object.prototype.hasOwnProperty.call(obj, key10)) {
                    if (!Array.isArray(obj[key10])) obj[key10] = [
                        obj[key10]
                    ];
                    obj[key10].push(val);
                } else {
                    obj[key10] = val || true;
                }
            }
        }
        return obj;
    }
    return parse6(url1);
}
var AllowedOption;
function isSrvUrl(url1) {
    return /^mongodb\+srv/.test(url1);
}
function parseSrvUrl(url1) {
    const data3 = parse_url(url1);
    const connectOptions = {
        db: new URLSearchParams(data3.search).get("authSource") ?? (data3.pathname && data3.pathname.length > 1 ? data3.pathname.substring(1) : "admin")
    };
    if (data3.auth) {
        connectOptions.credential = {
            username: data3.auth.user,
            password: data3.auth.password,
            db: connectOptions.db,
            mechanism: data3.search.authMechanism || "SCRAM-SHA-256"
        };
    }
    connectOptions.compression = data3.search.compressors ? data3.search.compressors.split(",") : [];
    connectOptions.srvServer = data3.servers?.[0].host;
    if (data3.search.appname) {
        connectOptions.appname = data3.search.appname;
    }
    if (data3.search.tls) {
        connectOptions.tls = data3.search.tls === "true";
    } else {
        connectOptions.tls = true;
    }
    if (data3.search.tlsCAFile) {
        connectOptions.certFile = data3.search.tlsCAFile;
    }
    if (data3.search.tlsCertificateKeyFile) {
        connectOptions.keyFile = data3.search.tlsCertificateKeyFile;
    }
    if (data3.search.tlsCertificateKeyFilePassword) {
        connectOptions.keyFilePassword = data3.search.tlsCertificateKeyFilePassword;
    }
    if (data3.search.safe) {
        connectOptions.safe = data3.search.safe === "true";
    }
    if (data3.search.retryWrites) {
        connectOptions.retryWrites = data3.search.retryWrites === "true";
    }
    return connectOptions;
}
(function(AllowedOption1) {
    AllowedOption1["authSource"] = "authSource";
    AllowedOption1["replicaSet"] = "replicaSet";
    AllowedOption1["loadBalanced"] = "loadBalanced";
})(AllowedOption || (AllowedOption = {
}));
function isAllowedOption(key10) {
    return Object.values(AllowedOption).includes(key10);
}
class SRVError extends Error {
    constructor(message6){
        super(message6);
        this.name = "SRVError";
    }
}
class Srv {
    resolver;
    constructor(resolver = {
        resolveDns: Deno.resolveDns
    }){
        this.resolver = resolver;
    }
    async resolveSrvUrl(urlString) {
        const options6 = parseSrvUrl(urlString);
        const { srvServer , ...connectOptions } = options6;
        if (!srvServer) {
            throw new SRVError(`Could not parse srv server address from ${urlString}`);
        }
        const resolveResult = await this.resolve(srvServer);
        return {
            servers: resolveResult.servers,
            ...resolveResult.options,
            ...connectOptions
        };
    }
    async resolve(url) {
        const tokens = url.split(".");
        if (tokens.length < 3) {
            throw new SRVError(`Expected url in format 'host.domain.tld', received ${url}`);
        }
        const srvRecord = await this.resolver.resolveDns(`_mongodb._tcp.${url}`, "SRV");
        if (!(srvRecord?.length > 0)) {
            throw new SRVError(`Expected at least one SRV record, received ${srvRecord?.length} for url ${url}`);
        }
        const txtRecords = await this.resolver.resolveDns(url, "TXT");
        if (txtRecords?.length !== 1) {
            throw new SRVError(`Expected exactly one TXT record, received ${txtRecords?.length} for url ${url}`);
        }
        const servers = srvRecord.map((record)=>{
            return {
                host: record.target,
                port: record.port
            };
        });
        const optionsUri = txtRecords[0].join("");
        const options6 = {
            valid: {
            },
            illegal: []
        };
        for (const option of optionsUri.split("&")){
            const [key10, value8] = option.split("=");
            if (isAllowedOption(key10) && !!value8) options6.valid[key10] = value8;
            else options6.illegal.push(option);
        }
        if (options6.illegal.length !== 0) {
            throw new SRVError(`Illegal uri options: ${options6.illegal}. Allowed options: ${Object.values(AllowedOption)}`);
        }
        return {
            servers,
            options: options6.valid
        };
    }
}
function parse6(url2) {
    return isSrvUrl(url2) ? new Srv().resolveSrvUrl(url2) : Promise.resolve(parseNormalUrl(url2));
}
function parseNormalUrl(url2) {
    const data3 = parse_url(url2);
    const connectOptions = {
        servers: data3.servers,
        db: ""
    };
    for (const server of connectOptions.servers){
        if (server.host.includes(".sock")) {
            server.domainSocket = server.host;
        }
        server.port = server.port || 27017;
    }
    connectOptions.db = new URLSearchParams(data3.search).get("authSource") ?? (data3.pathname && data3.pathname.length > 1 ? data3.pathname.substring(1) : "admin");
    if (data3.auth) {
        connectOptions.credential = {
            username: data3.auth.user,
            password: data3.auth.password,
            db: connectOptions.db,
            mechanism: data3.search.authMechanism || "SCRAM-SHA-256"
        };
    }
    connectOptions.compression = data3.search.compressors ? data3.search.compressors.split(",") : [];
    if (data3.search.appname) {
        connectOptions.appname = data3.search.appname;
    }
    if (data3.search.tls) {
        connectOptions.tls = data3.search.tls === "true";
    }
    if (data3.search.tlsCAFile) {
        connectOptions.certFile = data3.search.tlsCAFile;
    }
    if (data3.search.tlsCertificateKeyFile) {
        connectOptions.keyFile = data3.search.tlsCertificateKeyFile;
    }
    if (data3.search.tlsCertificateKeyFilePassword) {
        connectOptions.keyFilePassword = data3.search.tlsCertificateKeyFilePassword;
    }
    if (data3.search.safe) {
        connectOptions.safe = data3.search.safe === "true";
    }
    return connectOptions;
}
class AuthPlugin {
}
class AuthContext {
    protocol;
    credentials;
    options;
    response;
    nonce;
    constructor(protocol4, credentials, options6){
        this.protocol = protocol4;
        this.credentials = credentials;
        this.options = options6;
        this.nonce = window.crypto.getRandomValues(new Uint8Array(24));
    }
}
function grow(pager, index) {
    while(pager.maxPages < index){
        const old = pager.pages;
        pager.pages = new Array(32768);
        pager.pages[0] = old;
        pager.level++;
        pager.maxPages *= 32768;
    }
}
function truncate(buf, len4) {
    if (buf.length === len4) {
        return buf;
    }
    if (buf.length > len4) {
        return buf.slice(0, len4);
    }
    const cpy = new Uint8Array(len4);
    cpy.set(buf, 0);
    return cpy;
}
function concat1(bufs) {
    const total = bufs.reduce((acc, cur)=>acc + cur.byteLength
    , 0);
    const buf = new Uint8Array(total);
    let offset = 0;
    for (const b of bufs){
        buf.set(b, offset);
        offset += b.byteLength;
    }
    return buf;
}
function equal(a, b) {
    if (a.length !== b.length) {
        return false;
    }
    return a.every((x, i7)=>x === b[i7]
    );
}
function factor(n, out) {
    n = (n - (out[0] = n & 32767)) / 32768;
    n = (n - (out[1] = n & 32767)) / 32768;
    out[3] = (n - (out[2] = n & 32767)) / 32768 & 32767;
}
function copy6(buf) {
    const cpy = new Uint8Array(buf.length);
    cpy.set(buf, 0);
    return cpy;
}
class Page {
    offset;
    buffer;
    updated;
    deduplicate;
    constructor(i7, buf1){
        this.offset = i7 * buf1.length;
        this.buffer = buf1;
        this.updated = false;
        this.deduplicate = 0;
    }
}
class Pager {
    pageSize;
    maxPages = 32768;
    pages = new Array(32768);
    length = 0;
    level = 0;
    updates = [];
    path = new Uint16Array(4);
    deduplicate;
    zeros;
    constructor(pageSize1, opts2 = {
    }){
        this.pageSize = pageSize1;
        this.deduplicate = opts2.deduplicate || null;
        this.zeros = this.deduplicate ? new Uint8Array(this.deduplicate.length) : null;
    }
    updated(page) {
        while(this.deduplicate && page.buffer[page.deduplicate] === this.deduplicate[page.deduplicate]){
            if (++page.deduplicate === this.deduplicate.length) {
                page.deduplicate = 0;
                if (equal(page.buffer, this.deduplicate)) {
                    page.buffer = this.deduplicate;
                }
                break;
            }
        }
        if (page.updated || !this.updates) {
            return;
        }
        page.updated = true;
        this.updates.push(page);
    }
    lastUpdate() {
        if (!this.updates || !this.updates.length) {
            return null;
        }
        const page = this.updates.pop();
        page.updated = false;
        return page;
    }
    get(i, noAllocate) {
        const arr = this._array(i, !!noAllocate);
        const first = this.path[0];
        let page = arr && arr[first];
        if (!page && !noAllocate) {
            page = arr[first] = new Page(i, new Uint8Array(this.pageSize));
            if (i >= this.length) {
                this.length = i + 1;
            }
        }
        if (page && page.buffer === this.deduplicate && this.deduplicate && !noAllocate) {
            page.buffer = copy6(page.buffer);
            page.deduplicate = 0;
        }
        return page;
    }
    set(i, buf) {
        const arr = this._array(i, false);
        const first = this.path[0];
        if (i >= this.length) {
            this.length = i + 1;
        }
        if (!buf || this.zeros && equal(buf, this.zeros)) {
            arr[first] = undefined;
            return;
        }
        if (this.deduplicate && equal(buf, this.deduplicate)) {
            buf = this.deduplicate;
        }
        const page = arr[first];
        const b = truncate(buf, this.pageSize);
        if (page) {
            page.buffer = b;
        } else {
            arr[first] = new Page(i, b);
        }
    }
    toBuffer() {
        const list = new Array(this.length);
        const empty = new Uint8Array(this.pageSize);
        let ptr = 0;
        while(ptr < list.length){
            const arr = this._array(ptr, true);
            for(let i9 = 0; i9 < 32768 && ptr < list.length; i9++){
                list[ptr++] = arr && arr[i9] ? arr[i9].buffer : empty;
            }
        }
        return concat1(list);
    }
    _array(i, noAllocate) {
        if (i >= this.maxPages) {
            if (noAllocate) {
                return [];
            }
            grow(this, i);
        }
        factor(i, this.path);
        let arr = this.pages;
        for(let j = this.level; j > 0; j--){
            const p2 = this.path[j];
            let next = arr[p2];
            if (!next) {
                if (noAllocate) {
                    return [];
                }
                next = arr[p2] = new Array(32768);
            }
            arr = next;
        }
        return arr;
    }
}
function powerOfTwo(x) {
    return !(x & x - 1);
}
class Bitfield {
    pageOffset;
    pageSize;
    pages;
    byteLength;
    length;
    _trackUpdates;
    _pageMask;
    constructor(opts3 = {
    }){
        if (opts3 instanceof Uint8Array) {
            opts3 = {
                buffer: opts3
            };
        }
        this.pageOffset = opts3.pageOffset || 0;
        this.pageSize = opts3.pageSize || 1024;
        this.pages = opts3.pages || new Pager(this.pageSize);
        this.byteLength = this.pages.length * this.pageSize;
        this.length = 8 * this.byteLength;
        if (!powerOfTwo(this.pageSize)) {
            throw new Error("The page size should be a power of two");
        }
        this._trackUpdates = !!opts3.trackUpdates;
        this._pageMask = this.pageSize - 1;
        if (opts3.buffer) {
            for(let i9 = 0; i9 < opts3.buffer.length; i9 += this.pageSize){
                this.pages.set(i9 / this.pageSize, opts3.buffer.slice(i9, i9 + this.pageSize));
            }
            this.byteLength = opts3.buffer.length;
            this.length = 8 * this.byteLength;
        }
    }
    getByte(i) {
        const o = i & this._pageMask;
        const j = (i - o) / this.pageSize;
        const page = this.pages.get(j, true);
        return page ? page.buffer[o + this.pageOffset] : 0;
    }
    setByte(i, b) {
        const o = (i & this._pageMask) + this.pageOffset;
        const j = (i - o) / this.pageSize;
        const page = this.pages.get(j, false);
        if (page.buffer[o] === b) {
            return false;
        }
        page.buffer[o] = b;
        if (i >= this.byteLength) {
            this.byteLength = i + 1;
            this.length = this.byteLength * 8;
        }
        if (this._trackUpdates) {
            this.pages.updated(page);
        }
        return true;
    }
    get(i) {
        const o = i & 7;
        const j = (i - o) / 8;
        return !!(this.getByte(j) & 128 >> o);
    }
    set(i, v) {
        const o = i & 7;
        const j = (i - o) / 8;
        const b = this.getByte(j);
        return this.setByte(j, v ? b | 128 >> o : b & (255 ^ 128 >> o));
    }
    toBuffer() {
        const all = new Uint8Array(this.pages.length * this.pageSize);
        for(let i9 = 0; i9 < this.pages.length; i9++){
            const next = this.pages.get(i9, true);
            if (next) {
                all.subarray(i9 * this.pageSize).set(next.buffer.subarray(this.pageOffset, this.pageOffset + this.pageSize));
            }
        }
        return all;
    }
}
function readUint32BE(buf2, offset) {
    return buf2[offset + 0] << 24 | buf2[offset + 1] << 16 | buf2[offset + 2] << 8 | buf2[offset + 3];
}
const mem = mod5.decode(`
  
`.trim());
let offset = 0;
function read1() {
    const size12 = readUint32BE(mem, offset);
    offset += 4;
    const codepoints = mem.slice(offset, offset + size12);
    offset += size12;
    return new Bitfield({
        buffer: codepoints
    });
}
function loadCodePoints() {
    return {
        unassigned_code_points: read1(),
        commonly_mapped_to_nothing: read1(),
        non_ASCII_space_characters: read1(),
        prohibited_characters: read1(),
        bidirectional_r_al: read1(),
        bidirectional_l: read1()
    };
}
const { unassigned_code_points , commonly_mapped_to_nothing , non_ASCII_space_characters , prohibited_characters , bidirectional_r_al , bidirectional_l ,  } = loadCodePoints();
const mapping2space = non_ASCII_space_characters;
const mapping2nothing = commonly_mapped_to_nothing;
function getCodePoint(chr) {
    const codePoint = chr.codePointAt(0);
    if (!codePoint) {
        throw new Error(`unable to encode character ${chr}`);
    }
    return codePoint;
}
function first(x) {
    return x[0];
}
function last(x) {
    return x[x.length - 1];
}
function toCodePoints(input) {
    const codepoints = [];
    const size12 = input.length;
    for(let i9 = 0; i9 < size12; i9 += 1){
        const before = input.charCodeAt(i9);
        if (before >= 55296 && before <= 56319 && size12 > i9 + 1) {
            const next = input.charCodeAt(i9 + 1);
            if (next >= 56320 && next <= 57343) {
                codepoints.push((before - 55296) * 1024 + next - 56320 + 65536);
                i9 += 1;
                continue;
            }
        }
        codepoints.push(before);
    }
    return codepoints;
}
function saslprep(input, opts4 = {
}) {
    if (input === null) {
        throw new TypeError("Input must not be null.");
    }
    if (input.length === 0) {
        return "";
    }
    const mapped_input = toCodePoints(input).map((character)=>mapping2space.get(character) ? 32 : character
    ).filter((character)=>!mapping2nothing.get(character)
    );
    const normalized_input = String.fromCodePoint.apply(null, mapped_input).normalize("NFKC");
    const normalized_map = toCodePoints(normalized_input);
    const hasProhibited = normalized_map.some((character)=>prohibited_characters.get(character)
    );
    if (hasProhibited) {
        throw new Error("Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3");
    }
    if (!opts4.allowUnassigned) {
        const hasUnassigned = normalized_map.some((character)=>unassigned_code_points.get(character)
        );
        if (hasUnassigned) {
            throw new Error("Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5");
        }
    }
    const hasBidiRAL = normalized_map.some((character)=>bidirectional_r_al.get(character)
    );
    const hasBidiL = normalized_map.some((character)=>bidirectional_l.get(character)
    );
    if (hasBidiRAL && hasBidiL) {
        throw new Error("String must not contain RandALCat and LCat at the same time," + " see https://tools.ietf.org/html/rfc3454#section-6");
    }
    const isFirstBidiRAL = bidirectional_r_al.get(getCodePoint(first(normalized_input)));
    const isLastBidiRAL = bidirectional_r_al.get(getCodePoint(last(normalized_input)));
    if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {
        throw new Error("Bidirectional RandALCat character must be the first and the last" + " character of the string, see https://tools.ietf.org/html/rfc3454#section-6");
    }
    return normalized_input;
}
const enc = new TextEncoder();
const dec = new TextDecoder();
class ScramAuthPlugin extends AuthPlugin {
    cryptoMethod;
    constructor(cryptoMethod){
        super();
        this.cryptoMethod = cryptoMethod || "sha256";
    }
    prepare(authContext) {
        const handshakeDoc = {
            ismaster: true,
            client: driverMetadata,
            compression: authContext.options.compression
        };
        const request4 = {
            ...handshakeDoc,
            ...{
                speculativeAuthenticate: {
                    ...makeFirstMessage(this.cryptoMethod, authContext.options.credential, authContext.nonce),
                    ...{
                        db: authContext.options.credential.db
                    }
                }
            }
        };
        return request4;
    }
    async auth(authContext) {
        const response3 = authContext.response;
        if (response3 && response3.speculativeAuthenticate) {
            return await continueScramConversation(this.cryptoMethod, response3.speculativeAuthenticate, authContext);
        }
        return await executeScram(this.cryptoMethod, authContext);
    }
}
function cleanUsername(username) {
    return username.replace("=", "=3D").replace(",", "=2C");
}
function clientFirstMessageBare(username, nonce) {
    return Uint8Array.from([
        ...enc.encode("n="),
        ...enc.encode(username),
        ...enc.encode(",r="),
        ...enc.encode(mod5.encode(nonce)), 
    ]);
}
function makeFirstMessage(cryptoMethod1, credentials1, nonce) {
    const username = cleanUsername(credentials1.username);
    const mechanism = cryptoMethod1 === "sha1" ? "SCRAM-SHA-1" : "SCRAM-SHA-256";
    return {
        saslStart: 1,
        mechanism,
        payload: new Binary(Uint8Array.from([
            ...enc.encode("n,,"),
            ...clientFirstMessageBare(username, nonce)
        ])),
        autoAuthorize: 1,
        options: {
            skipEmptyExchange: true
        }
    };
}
async function executeScram(cryptoMethod1, authContext) {
    const { protocol: protocol5 , credentials: credentials1  } = authContext;
    if (!credentials1) {
        throw new MongoError("AuthContext must provide credentials.");
    }
    if (!authContext.nonce) {
        throw new MongoError("AuthContext must contain a valid nonce property");
    }
    const nonce = authContext.nonce;
    const db2 = credentials1.db;
    const saslStartCmd = makeFirstMessage(cryptoMethod1, credentials1, nonce);
    const result = await protocol5.commandSingle(db2, saslStartCmd);
    return await continueScramConversation(cryptoMethod1, result, authContext);
}
async function continueScramConversation(cryptoMethod1, response3, authContext) {
    const protocol5 = authContext.protocol;
    const credentials1 = authContext.credentials;
    if (!credentials1) {
        throw new MongoError("AuthContext must provide credentials.");
    }
    if (!authContext.nonce) {
        throw new MongoError("Unable to continue SCRAM without valid nonce");
    }
    const nonce = authContext.nonce;
    const db2 = credentials1.db;
    const username = cleanUsername(credentials1.username);
    const password = credentials1.password;
    let processedPassword;
    if (cryptoMethod1 === "sha256") {
        processedPassword = saslprep(password);
    } else {
        processedPassword = passwordDigest(username, password);
    }
    const payload = fixPayload(dec.decode(response3.payload.buffer));
    const dict = parsePayload(payload);
    const iterations = parseInt(dict.i, 10);
    if (iterations && iterations < 4096) {
        throw new MongoError(`Server returned an invalid iteration count ${iterations}`);
    }
    const salt = dict.s;
    const rnonce = dict.r;
    if (rnonce.startsWith("nonce")) {
        throw new MongoError(`Server returned an invalid nonce: ${rnonce}`);
    }
    const withoutProof = `c=biws,r=${rnonce}`;
    const saltedPassword = HI(processedPassword, mod5.decode(salt), iterations, cryptoMethod1);
    const clientKey = HMAC(cryptoMethod1, saltedPassword, "Client Key");
    const serverKey = HMAC(cryptoMethod1, saltedPassword, "Server Key");
    const storedKey = H(cryptoMethod1, clientKey);
    const authMessage = [
        dec.decode(clientFirstMessageBare(username, nonce)),
        payload,
        withoutProof, 
    ].join(",");
    const clientSignature = HMAC(cryptoMethod1, storedKey, authMessage);
    const clientProof = `p=${xor(clientKey, clientSignature)}`;
    const clientFinal = [
        withoutProof,
        clientProof
    ].join(",");
    const serverSignature = HMAC(cryptoMethod1, serverKey, authMessage);
    const saslContinueCmd = {
        saslContinue: 1,
        conversationId: response3.conversationId,
        payload: new Binary(enc.encode(clientFinal))
    };
    const result = await protocol5.commandSingle(db2, saslContinueCmd);
    const parsedResponse = parsePayload(fixPayload2(dec.decode(result.payload.buffer)));
    if (!compareDigest(mod5.decode(parsedResponse.v), serverSignature)) {
    }
    if (result.done) {
        return result;
    }
    const retrySaslContinueCmd = {
        saslContinue: 1,
        conversationId: result.conversationId,
        payload: new Uint8Array(0)
    };
    return await protocol5.commandSingle(db2, retrySaslContinueCmd);
}
function fixPayload(payload) {
    const temp = payload.split("=");
    temp.shift();
    const it = parseInt(temp.pop(), 10);
    payload = "r=" + temp.join("=") + "=" + it;
    return payload;
}
function fixPayload2(payload) {
    var temp = payload.split("v=");
    temp.shift();
    payload = temp.join("v=");
    temp = payload.split("ok");
    temp.pop();
    return "v=" + temp.join("ok");
}
function parsePayload(payload) {
    const dict = {
    };
    const parts1 = payload.split(",");
    for(let i9 = 0; i9 < parts1.length; i9++){
        const valueParts = parts1[i9].split("=");
        dict[valueParts[0]] = valueParts[1];
    }
    return dict;
}
function passwordDigest(username, password) {
    if (typeof username !== "string") {
        throw new MongoError("username must be a string");
    }
    if (typeof password !== "string") {
        throw new MongoError("password must be a string");
    }
    if (password.length === 0) {
        throw new MongoError("password cannot be empty");
    }
    const md5 = createHash("md5");
    md5.update(`${username}:mongo:${password}`);
    return md5.toString();
}
function xor(a, b) {
    const length = Math.max(a.length, b.length);
    const res = new Uint8Array(length);
    for(let i9 = 0; i9 < length; i9 += 1){
        res[i9] = a[i9] ^ b[i9];
    }
    return mod5.encode(res);
}
function H(method, text) {
    return new Uint8Array(createHash(method).update(text).digest());
}
function HMAC(method, key10, text) {
    if (method === "sha256") {
        return new Uint8Array(new HmacSha256(key10).update(text).digest());
    } else {
        return new Uint8Array(new HmacSha1(key10).update(text).digest());
    }
}
let _hiCache = {
};
let _hiCacheCount = 0;
function _hiCachePurge() {
    _hiCache = {
    };
    _hiCacheCount = 0;
}
const hiLengthMap = {
    sha256: 32,
    sha1: 20
};
function HI(data3, salt, iterations, cryptoMethod1) {
    const key10 = [
        data3,
        mod5.encode(salt),
        iterations
    ].join("_");
    if (_hiCache[key10] !== undefined) {
        return _hiCache[key10];
    }
    const saltedData = pbkdf2Sync(data3, salt, iterations, hiLengthMap[cryptoMethod1], cryptoMethod1);
    if (_hiCacheCount >= 200) {
        _hiCachePurge();
    }
    _hiCache[key10] = saltedData;
    _hiCacheCount += 1;
    return new Uint8Array(saltedData);
}
function compareDigest(lhs, rhs) {
    if (lhs.length !== rhs.length) {
        return false;
    }
    let result = 0;
    for(let i9 = 0; i9 < lhs.length; i9++){
        result |= lhs[i9] ^ rhs[i9];
    }
    return result === 0;
}
class X509AuthPlugin extends AuthPlugin {
    constructor(){
        super();
    }
    prepare(authContext) {
        const handshakeDoc = {
            ismaster: true,
            client: driverMetadata,
            compression: authContext.options.compression,
            speculativeAuthenticate: x509AuthenticateCommand(authContext.credentials)
        };
        return handshakeDoc;
    }
    async auth(authContext) {
        if (authContext.response.speculativeAuthenticate) {
            return authContext.response;
        }
        return await authContext.protocol.commandSingle("$external", x509AuthenticateCommand(authContext.credentials));
    }
}
function x509AuthenticateCommand(credentials1) {
    const command = {
        authenticate: 1,
        mechanism: "MONGODB-X509"
    };
    if (credentials1) {
        command.user = credentials1.username;
    }
    return command;
}
class Cluster {
    #options;
    #connections;
    #protocols;
    #masterIndex;
    constructor(options7){
        this.#options = options7;
        this.#connections = [];
        this.#protocols = [];
        this.#masterIndex = -1;
    }
    async connect() {
        const options8 = this.#options;
        this.#connections = await Promise.all(options8.servers.map((server)=>this.connectToServer(server, options8)
        ));
    }
    async connectToServer(server, options) {
        const denoConnectOps = {
            hostname: server.host,
            port: server.port
        };
        if (options.tls) {
            if (options.certFile) {
                denoConnectOps.certFile = options.certFile;
            }
            if (options.keyFile) {
                if (options.keyFilePassword) {
                    throw new MongoError(`Tls keyFilePassword not implemented in Deno driver`);
                }
                throw new MongoError(`Tls keyFile not implemented in Deno driver`);
            }
            return await Deno.connectTls(denoConnectOps);
        } else {
            return await Deno.connect(denoConnectOps);
        }
    }
    async authenticate() {
        const options8 = this.#options;
        this.#protocols = await Promise.all(this.#connections.map((conn2)=>this.authenticateToServer(conn2, options8)
        ));
    }
    async authenticateToServer(conn, options) {
        const protocol5 = new WireProtocol(conn);
        if (options.credential) {
            const authContext = new AuthContext(protocol5, options.credential, options);
            const mechanism = options.credential.mechanism;
            let authPlugin;
            if (mechanism === "SCRAM-SHA-256") {
                authPlugin = new ScramAuthPlugin("sha256");
            } else if (mechanism === "SCRAM-SHA-1") {
                authPlugin = new ScramAuthPlugin("sha1");
            } else if (mechanism === "MONGODB-X509") {
                authPlugin = new X509AuthPlugin();
            } else {
                throw new MongoError(`Auth mechanism not implemented in Deno driver: ${mechanism}`);
            }
            const request4 = authPlugin.prepare(authContext);
            authContext.response = await protocol5.commandSingle("admin", request4);
            await authPlugin.auth(authContext);
        } else {
            await protocol5.connect();
        }
        return protocol5;
    }
    async updateMaster() {
        const results = await Promise.all(this.#protocols.map((protocol5)=>{
            return protocol5.commandSingle("admin", {
                isMaster: 1
            });
        }));
        const masterIndex = results.findIndex((result)=>result.isWritablePrimary || result.ismaster
        );
        if (masterIndex === -1) throw new Error(`Could not find a master node`);
        this.#masterIndex = masterIndex;
    }
    getMaster() {
        return {
            protocol: this.#protocols[this.#masterIndex],
            conn: this.#connections[this.#masterIndex]
        };
    }
    get protocol() {
        const protocol5 = this.getMaster().protocol;
        assert2(protocol5);
        return protocol5;
    }
    close() {
        for (const conn3 of this.#connections){
            try {
                Deno.close(conn3.rid);
            } catch (error) {
                console.error(`Error closing connection: ${error}`);
            }
        }
    }
}
class MongoClient {
    #cluster;
    #defaultDbName = "admin";
    async connect(options) {
        try {
            const parsedOptions = typeof options === "string" ? await parse6(options) : options;
            this.#defaultDbName = parsedOptions.db;
            const cluster1 = new Cluster(parsedOptions);
            await cluster1.connect();
            await cluster1.authenticate();
            await cluster1.updateMaster();
            this.#cluster = cluster1;
        } catch (e) {
            throw new MongoError(`Connection failed: ${e.message || e}`);
        }
        return this.database(options.db);
    }
    async listDatabases(options) {
        if (!options) {
            options = {
            };
        }
        assert2(this.#cluster);
        const { databases  } = await this.#cluster.protocol.commandSingle("admin", {
            listDatabases: 1,
            ...options
        });
        return databases;
    }
    async runCommand(db, body) {
        assert2(this.#cluster);
        return await this.#cluster.protocol.commandSingle(db, body);
    }
    database(name = this.#defaultDbName) {
        assert2(this.#cluster);
        return new Database(this.#cluster, name);
    }
    close() {
        if (this.#cluster) this.#cluster.close();
    }
}
const client = new MongoClient();
await client.connect({
    db: "landofhop",
    tls: true,
    servers: [
        {
            host: "landofhop-shard-00-01.ku9ye.mongodb.net",
            port: 27017
        }, 
    ],
    credential: {
        username: Deno.env.get("MONGODB_USERNAME"),
        password: Deno.env.get("MONGODB_PASSWORD"),
        db: "admin",
        mechanism: "SCRAM-SHA-1"
    }
});
const db2 = client.database("landofhop");
const basics = db2.collection("basics");
async function getBasics(params) {
    const language = params?.language ?? DEFAULT_LANGUAGE;
    const skip = params?.skip ?? "0";
    const limit5 = params?.limit ?? "1";
    let translatedValues = [];
    await basics.find().skip(+skip).limit(+limit5).forEach(({ _id , brand , name: name7 , ...rest })=>{
        translatedValues.push({
            name: translate(name7, language),
            brand: {
                ...brand,
                name: translate(brand.name, language)
            },
            ...rest
        });
    });
    return translatedValues;
}
const router = new Router();
router.get("/basics/:language?/:skip?/:limit?", async (ctx)=>{
    ctx.response.body = await getBasics(ctx.params);
});
async function errorHandling(ctx, next) {
    try {
        await next();
    } catch (err) {
        if (isHttpError(err)) {
            switch(err.status){
                case Status.NotFound: break;
                default:
            }
        } else {
            throw err;
        }
    }
}
async function timer(ctx, next) {
    const startTime = Date.now();
    await next();
    const endTime = Date.now();
    const difference1 = endTime - startTime;
    ctx.response.headers.set("X-Response-Time", `${difference1}ms`);
}
const app3 = new Application();
app3.use(errorHandling);
app3.use(timer);
app3.use(router.routes());
await app3.listen({
    port: Number(Deno.env.get("PORT"))
});
